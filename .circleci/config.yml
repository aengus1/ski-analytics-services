# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.13
  node: circleci/node@1.1.6

jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk
      - image: circleci/python:3.7-stretch
    executor: aws-cli/default
    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - restore_cache:  ## Restore gradle cache
          keys:
            - gradle-cache-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
            - gradle-cache-v1-{{ .Branch }}
            - gradle-cache-v1

      - restore_cache:  ## restore node cache
          keys:
            - node-cache-v1

        ## compile and unit test
      - run: pwd
      - run: ./gradlew clean
      - run: ./gradlew build

        ## install node, npm, aws-cli
      - run:
          name: Update Node and npm
          command: |
            curl -sSL "https://nodejs.org/dist/v12.16.1/node-v12.16.1-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v11.10.0-linux-x64/bin/node
            curl https://www.npmjs.com/install.sh | sudo bash
      - run:
          name: Check current version of node
          command: node -v
      - run:
          name: Install serverless
          command: sudo npm install -g serverless
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-cache-v1-{{ .Branch }}-{{ checksum "build.gradle" }}
      - save_cache:
          paths:
            - /usr/local/lib/node_modules/
          key: node-cache-v1-{{ .Branch }}
      - aws-cli/install
      - aws-cli/configure:
          profile-name: backend_dev

        ## deploy
      - run: ./gradlew deploy -Pstage="ci"

        # run integration tests
      - run: ./gradlew integrationTest

      - run: ./gradlew jacocoTestReport
      # generate coverage report
      - run: ./gradlew jacocoRootReport
      # upload coverage report to codacy
      - run: ./gradlew sendCoverageToCodacy

      # save test results
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex "**/build/test-results/**/*.xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: test-results/junit
      - store_artifacts:
          path: ~/test-results/junit
      # store coverage report
      - store_artifacts:
          path:  build/reports/jacoco/jacocoRootReport/jacocoRootReport.xml

workflows:
  version: 2.1
  myworkflow:
    jobs:
      - build:
          context: sls-context
