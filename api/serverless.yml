service: api
tenant: aengus
app: ski-analytics

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

custom:
  currentStage: ${{opt:stage, self:provider.stage}}
  domainName: crunch.ski
  resourceTags:
              -
                Key: "project"
                Value: "ski-analytics"
              -
                Key: "module"
                Value: "api"
  activityBucketName: "activity-${{self:custom.currentStage}}.${{self:custom.domainName}}"

provider:
  name: aws
  runtime: java8
  variableSyntax: "\\${{([ ~:a-zA-Z0-9._\\'\",\\-\\/\\(\\)]+?)}}" # notice the double quotes for yaml to ignore the escape characters!
  region: ca-central-1
  stage: staging
  stackName: ${{self:custom.currentStage}}-ski-analytics-api-stack
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
      Resource: "arn:aws:s3:::${self:custom.bucket}/*"

package:
  artifact: build/distributions/aws-java-getactivity.zip

functions:
  GetActivityLambda:
    handler: com.serverless.Handler
    environment:
      s3ActivityBucketName: ${self:custom.activityBucketName}
    events:
      - http:
          path: activity/{id}
          method: get
          cors: true
          request:
            parameters:
              paths:
                id: true
#          authorizer:
#            arn: arn:aws:cognito-idp:us-east-1:xxx:userpool/us-east-1_ZZZ
resources:
  Resources:
    S3BucketForActivity:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${{self:custom.activityBucketName}}
        Tags: ${{self:custom.resourceTags}}
    S3BucketPolicyForActivityBucket:
              Type: AWS::S3::BucketPolicy
              Properties:
                Bucket:
                  Ref: S3BucketForActivity
                PolicyDocument:
                  Version: '2012-10-17'
                  Statement:
                    - Action:
                        - s3:GetObject
                      Effect: Allow
                      Resource:
                        Fn::Join: ['', [Fn::GetAtt: [S3BucketForActivity, Arn],"/*"]]
                      Principal:
                        AWS:
                          Fn::GetAtt: [GetActivityLambdaLambdaFunction, Arn]



# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
