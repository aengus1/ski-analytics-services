## Stack provides two lambda layers:  utils (common code), and common (common dependencies)
## No dependencies on other stacks
service: common

provider:
  name: aws
  runtime: java11
  region: ${{file(../../infra/envs/global.tfvars.json):primary_region}}
  stage: ${{opt:stage}}
  variableSyntax: "\\${{([ ~:a-zA-Z0-9._\\'\",\\-\\/\\(\\)]+?)}}" # notice the double quotes for yaml to ignore the escape characters!
  stackName: ${{opt:stage}}-${{self:custom.projectName}}-${{self:service}}
  deploymentBucket: ${{opt:stage}}-deployment-${{self:custom.projectName}}

custom: ${{file(../../config/custom.yml)}}

layers:
  utils:
    name: ${{opt:stage}}-layer-utils
    description: domain classes for object model and utilities
    compatibleRuntimes:
      - java8
    retain: true
    package:
      include: 
        - src/main/java/ski/crunch/**
      artifact: build/distributions/${{self:custom.projectName}}-utils.zip
  common:
    name: ${{opt:stage}}-layer-${{self:service}}
    description: common dependencies for all services
    compatibleRuntimes:
      - java8
    retain: true
    package:
      include:
        - src/main/java/*
      exclude:
        - src/main/java/ski/crunch/cloudformation/*
      artifact: build/distributions/${{self:custom.projectName}}-${{self:service}}.zip
  cloudformation:
    name: ${{opt:stage}}-layer-cloudformation
    description: common dependencies for cloudformation custom resources
    compatibleRuntimes:
      - java8
    retain: true
    package:
      include:
        - src/main/java/ski/crunch/cloudformation/*
      artifact: build/distributions/${{self:custom.projectName}}-cf.zip