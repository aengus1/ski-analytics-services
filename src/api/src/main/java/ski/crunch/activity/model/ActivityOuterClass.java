// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Activity.proto

package ski.crunch.activity.model;

public final class ActivityOuterClass {
  private ActivityOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ActivityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Activity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.Activity.Meta meta = 1;</code>
     */
    boolean hasMeta();
    /**
     * <code>.Activity.Meta meta = 1;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.Meta getMeta();
    /**
     * <code>.Activity.Meta meta = 1;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.MetaOrBuilder getMetaOrBuilder();

    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>.Activity.UserData userData = 2;</code>
     */
    boolean hasUserData();
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>.Activity.UserData userData = 2;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.UserData getUserData();
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>.Activity.UserData userData = 2;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.UserDataOrBuilder getUserDataOrBuilder();

    /**
     * <code>.Activity.Summary summary = 3;</code>
     */
    boolean hasSummary();
    /**
     * <code>.Activity.Summary summary = 3;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.Summary getSummary();
    /**
     * <code>.Activity.Summary summary = 3;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder getSummaryOrBuilder();

    /**
     * <code>.Activity.Values values = 4;</code>
     */
    boolean hasValues();
    /**
     * <code>.Activity.Values values = 4;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.Values getValues();
    /**
     * <code>.Activity.Values values = 4;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.ValuesOrBuilder getValuesOrBuilder();

    /**
     * <code>repeated .Activity.FitEvent events = 5;</code>
     */
    java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent> 
        getEventsList();
    /**
     * <code>repeated .Activity.FitEvent events = 5;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent getEvents(int index);
    /**
     * <code>repeated .Activity.FitEvent events = 5;</code>
     */
    int getEventsCount();
    /**
     * <code>repeated .Activity.FitEvent events = 5;</code>
     */
    java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.FitEventOrBuilder> 
        getEventsOrBuilderList();
    /**
     * <code>repeated .Activity.FitEvent events = 5;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.FitEventOrBuilder getEventsOrBuilder(
        int index);

    /**
     * <code>string id = 6;</code>
     */
    java.lang.String getId();
    /**
     * <code>string id = 6;</code>
     */
    com.google.protobuf.ByteString
        getIdBytes();

    /**
     * <code>repeated .Activity.Session sessions = 7;</code>
     */
    java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Session> 
        getSessionsList();
    /**
     * <code>repeated .Activity.Session sessions = 7;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.Session getSessions(int index);
    /**
     * <code>repeated .Activity.Session sessions = 7;</code>
     */
    int getSessionsCount();
    /**
     * <code>repeated .Activity.Session sessions = 7;</code>
     */
    java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SessionOrBuilder> 
        getSessionsOrBuilderList();
    /**
     * <code>repeated .Activity.Session sessions = 7;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.SessionOrBuilder getSessionsOrBuilder(
        int index);

    /**
     * <code>repeated .Activity.Segment pauses = 8;</code>
     */
    java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> 
        getPausesList();
    /**
     * <code>repeated .Activity.Segment pauses = 8;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getPauses(int index);
    /**
     * <code>repeated .Activity.Segment pauses = 8;</code>
     */
    int getPausesCount();
    /**
     * <code>repeated .Activity.Segment pauses = 8;</code>
     */
    java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
        getPausesOrBuilderList();
    /**
     * <code>repeated .Activity.Segment pauses = 8;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getPausesOrBuilder(
        int index);

    /**
     * <code>repeated .Activity.Segment laps = 9;</code>
     */
    java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> 
        getLapsList();
    /**
     * <code>repeated .Activity.Segment laps = 9;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getLaps(int index);
    /**
     * <code>repeated .Activity.Segment laps = 9;</code>
     */
    int getLapsCount();
    /**
     * <code>repeated .Activity.Segment laps = 9;</code>
     */
    java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
        getLapsOrBuilderList();
    /**
     * <code>repeated .Activity.Segment laps = 9;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getLapsOrBuilder(
        int index);

    /**
     * <code>repeated .Activity.Segment stops = 10;</code>
     */
    java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> 
        getStopsList();
    /**
     * <code>repeated .Activity.Segment stops = 10;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getStops(int index);
    /**
     * <code>repeated .Activity.Segment stops = 10;</code>
     */
    int getStopsCount();
    /**
     * <code>repeated .Activity.Segment stops = 10;</code>
     */
    java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
        getStopsOrBuilderList();
    /**
     * <code>repeated .Activity.Segment stops = 10;</code>
     */
    ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getStopsOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Activity}
   */
  public  static final class Activity extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Activity)
      ActivityOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Activity.newBuilder() to construct.
    private Activity(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Activity() {
      events_ = java.util.Collections.emptyList();
      id_ = "";
      sessions_ = java.util.Collections.emptyList();
      pauses_ = java.util.Collections.emptyList();
      laps_ = java.util.Collections.emptyList();
      stops_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Activity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.Builder subBuilder = null;
              if (meta_ != null) {
                subBuilder = meta_.toBuilder();
              }
              meta_ = input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(meta_);
                meta_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.Builder subBuilder = null;
              if (userData_ != null) {
                subBuilder = userData_.toBuilder();
              }
              userData_ = input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(userData_);
                userData_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder subBuilder = null;
              if (summary_ != null) {
                subBuilder = summary_.toBuilder();
              }
              summary_ = input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(summary_);
                summary_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              ski.crunch.activity.model.ActivityOuterClass.Activity.Values.Builder subBuilder = null;
              if (values_ != null) {
                subBuilder = values_.toBuilder();
              }
              values_ = input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.Values.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(values_);
                values_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                events_ = new java.util.ArrayList<ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent>();
                mutable_bitField0_ |= 0x00000010;
              }
              events_.add(
                  input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.parser(), extensionRegistry));
              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              id_ = s;
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                sessions_ = new java.util.ArrayList<ski.crunch.activity.model.ActivityOuterClass.Activity.Session>();
                mutable_bitField0_ |= 0x00000040;
              }
              sessions_.add(
                  input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.Session.parser(), extensionRegistry));
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                pauses_ = new java.util.ArrayList<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment>();
                mutable_bitField0_ |= 0x00000080;
              }
              pauses_.add(
                  input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.parser(), extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                laps_ = new java.util.ArrayList<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment>();
                mutable_bitField0_ |= 0x00000100;
              }
              laps_.add(
                  input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.parser(), extensionRegistry));
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                stops_ = new java.util.ArrayList<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment>();
                mutable_bitField0_ |= 0x00000200;
              }
              stops_.add(
                  input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          events_ = java.util.Collections.unmodifiableList(events_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          sessions_ = java.util.Collections.unmodifiableList(sessions_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          pauses_ = java.util.Collections.unmodifiableList(pauses_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          laps_ = java.util.Collections.unmodifiableList(laps_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          stops_ = java.util.Collections.unmodifiableList(stops_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ski.crunch.activity.model.ActivityOuterClass.Activity.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Builder.class);
    }

    /**
     * Protobuf enum {@code Activity.FitManufacturer}
     */
    public enum FitManufacturer
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>UNKNOWN = 0;</code>
       */
      UNKNOWN(0),
      /**
       * <code>GARMIN = 1;</code>
       */
      GARMIN(1),
      /**
       * <code>GARMIN_FR405_ANTFS = 2;</code>
       */
      GARMIN_FR405_ANTFS(2),
      /**
       * <code>ZEPHYR = 3;</code>
       */
      ZEPHYR(3),
      /**
       * <code>DAYTON = 4;</code>
       */
      DAYTON(4),
      /**
       * <code>IDT = 5;</code>
       */
      IDT(5),
      /**
       * <code>SRM = 6;</code>
       */
      SRM(6),
      /**
       * <code>QUARQ = 7;</code>
       */
      QUARQ(7),
      /**
       * <code>IBIKE = 8;</code>
       */
      IBIKE(8),
      /**
       * <code>SARIS = 9;</code>
       */
      SARIS(9),
      /**
       * <code>SPARK_HK = 10;</code>
       */
      SPARK_HK(10),
      /**
       * <code>TANITA = 11;</code>
       */
      TANITA(11),
      /**
       * <code>ECHOWELL = 12;</code>
       */
      ECHOWELL(12),
      /**
       * <code>DYNASTREAM_OEM = 13;</code>
       */
      DYNASTREAM_OEM(13),
      /**
       * <code>NAUTILUS = 14;</code>
       */
      NAUTILUS(14),
      /**
       * <code>DYNASTREAM = 15;</code>
       */
      DYNASTREAM(15),
      /**
       * <code>TIMEX = 16;</code>
       */
      TIMEX(16),
      /**
       * <code>METRIGEAR = 17;</code>
       */
      METRIGEAR(17),
      /**
       * <code>XELIC = 18;</code>
       */
      XELIC(18),
      /**
       * <code>BEURER = 19;</code>
       */
      BEURER(19),
      /**
       * <code>CARDIOSPORT = 20;</code>
       */
      CARDIOSPORT(20),
      /**
       * <code>A_AND_D = 21;</code>
       */
      A_AND_D(21),
      /**
       * <code>HMM = 22;</code>
       */
      HMM(22),
      /**
       * <code>SUUNTO = 23;</code>
       */
      SUUNTO(23),
      /**
       * <code>THITA_ELEKTRONIK = 24;</code>
       */
      THITA_ELEKTRONIK(24),
      /**
       * <code>GPULSE = 25;</code>
       */
      GPULSE(25),
      /**
       * <code>CLEAN_MOBILE = 26;</code>
       */
      CLEAN_MOBILE(26),
      /**
       * <code>PEDAL_BRAIN = 27;</code>
       */
      PEDAL_BRAIN(27),
      /**
       * <code>PEAKSWARE = 28;</code>
       */
      PEAKSWARE(28),
      /**
       * <code>SAXONAR = 29;</code>
       */
      SAXONAR(29),
      /**
       * <code>LEMOND_FITNESS = 30;</code>
       */
      LEMOND_FITNESS(30),
      /**
       * <code>DEXCOM = 31;</code>
       */
      DEXCOM(31),
      /**
       * <code>WAHOO_FITNESS = 32;</code>
       */
      WAHOO_FITNESS(32),
      /**
       * <code>OCTANE_FITNESS = 33;</code>
       */
      OCTANE_FITNESS(33),
      /**
       * <code>ARCHINOETICS = 34;</code>
       */
      ARCHINOETICS(34),
      /**
       * <code>THE_HURT_BOX = 35;</code>
       */
      THE_HURT_BOX(35),
      /**
       * <code>CITIZEN_SYSTEMS = 36;</code>
       */
      CITIZEN_SYSTEMS(36),
      /**
       * <code>MAGELLAN = 37;</code>
       */
      MAGELLAN(37),
      /**
       * <code>OSYNCE = 38;</code>
       */
      OSYNCE(38),
      /**
       * <code>HOLUX = 39;</code>
       */
      HOLUX(39),
      /**
       * <code>CONCEPT2 = 40;</code>
       */
      CONCEPT2(40),
      /**
       * <code>ONE_GIANT_LEAP = 42;</code>
       */
      ONE_GIANT_LEAP(42),
      /**
       * <code>ACE_SENSOR = 43;</code>
       */
      ACE_SENSOR(43),
      /**
       * <code>BRIM_BROTHERS = 44;</code>
       */
      BRIM_BROTHERS(44),
      /**
       * <code>XPLOVA = 45;</code>
       */
      XPLOVA(45),
      /**
       * <code>PERCEPTION_DIGITAL = 46;</code>
       */
      PERCEPTION_DIGITAL(46),
      /**
       * <code>BF1SYSTEMS = 47;</code>
       */
      BF1SYSTEMS(47),
      /**
       * <code>PIONEER = 48;</code>
       */
      PIONEER(48),
      /**
       * <code>SPANTEC = 49;</code>
       */
      SPANTEC(49),
      /**
       * <code>METALOGICS = 50;</code>
       */
      METALOGICS(50),
      /**
       * <code>I4IIIIS = 51;</code>
       */
      I4IIIIS(51),
      /**
       * <code>SEIKO_EPSON = 52;</code>
       */
      SEIKO_EPSON(52),
      /**
       * <code>SEIKO_EPSON_OEM = 53;</code>
       */
      SEIKO_EPSON_OEM(53),
      /**
       * <code>IFOR_POWELL = 54;</code>
       */
      IFOR_POWELL(54),
      /**
       * <code>MAXWELL_GUIDER = 55;</code>
       */
      MAXWELL_GUIDER(55),
      /**
       * <code>STAR_TRAC = 56;</code>
       */
      STAR_TRAC(56),
      /**
       * <code>BREAKAWAY = 57;</code>
       */
      BREAKAWAY(57),
      /**
       * <code>ALATECH_TECHNOLOGY_LTD = 58;</code>
       */
      ALATECH_TECHNOLOGY_LTD(58),
      /**
       * <code>MIO_TECHNOLOGY_EUROPE = 59;</code>
       */
      MIO_TECHNOLOGY_EUROPE(59),
      /**
       * <code>ROTOR = 60;</code>
       */
      ROTOR(60),
      /**
       * <code>GEONAUTE = 61;</code>
       */
      GEONAUTE(61),
      /**
       * <code>ID_BIKE = 62;</code>
       */
      ID_BIKE(62),
      /**
       * <code>SPECIALIZED = 63;</code>
       */
      SPECIALIZED(63),
      /**
       * <code>WTEK = 64;</code>
       */
      WTEK(64),
      /**
       * <code>PHYSICAL_ENTERPRISES = 65;</code>
       */
      PHYSICAL_ENTERPRISES(65),
      /**
       * <code>NORTH_POLE_ENGINEERING = 66;</code>
       */
      NORTH_POLE_ENGINEERING(66),
      /**
       * <code>BKOOL = 67;</code>
       */
      BKOOL(67),
      /**
       * <code>CATEYE = 68;</code>
       */
      CATEYE(68),
      /**
       * <code>STAGES_CYCLING = 69;</code>
       */
      STAGES_CYCLING(69),
      /**
       * <code>SIGMASPORT = 70;</code>
       */
      SIGMASPORT(70),
      /**
       * <code>TOMTOM = 71;</code>
       */
      TOMTOM(71),
      /**
       * <code>PERIPEDAL = 72;</code>
       */
      PERIPEDAL(72),
      /**
       * <code>WATTBIKE = 73;</code>
       */
      WATTBIKE(73),
      /**
       * <code>MOXY = 76;</code>
       */
      MOXY(76),
      /**
       * <code>CICLOSPORT = 77;</code>
       */
      CICLOSPORT(77),
      /**
       * <code>POWERBAHN = 78;</code>
       */
      POWERBAHN(78),
      /**
       * <code>ACORN_PROJECTS_APS = 79;</code>
       */
      ACORN_PROJECTS_APS(79),
      /**
       * <code>LIFEBEAM = 80;</code>
       */
      LIFEBEAM(80),
      /**
       * <code>BONTRAGER = 81;</code>
       */
      BONTRAGER(81),
      /**
       * <code>WELLGO = 82;</code>
       */
      WELLGO(82),
      /**
       * <code>SCOSCHE = 83;</code>
       */
      SCOSCHE(83),
      /**
       * <code>MAGURA = 84;</code>
       */
      MAGURA(84),
      /**
       * <code>WOODWAY = 85;</code>
       */
      WOODWAY(85),
      /**
       * <code>ELITE = 86;</code>
       */
      ELITE(86),
      /**
       * <code>NIELSEN_KELLERMAN = 87;</code>
       */
      NIELSEN_KELLERMAN(87),
      /**
       * <code>DK_CITY = 88;</code>
       */
      DK_CITY(88),
      /**
       * <code>TACX = 89;</code>
       */
      TACX(89),
      /**
       * <code>DIRECTION_TECHNOLOGY = 90;</code>
       */
      DIRECTION_TECHNOLOGY(90),
      /**
       * <code>MAGTONIC = 91;</code>
       */
      MAGTONIC(91),
      /**
       * <code>ONEPARTCARBON = 92;</code>
       */
      ONEPARTCARBON(92),
      /**
       * <code>INSIDE_RIDE_TECHNOLOGIES = 93;</code>
       */
      INSIDE_RIDE_TECHNOLOGIES(93),
      /**
       * <code>SOUND_OF_MOTION = 94;</code>
       */
      SOUND_OF_MOTION(94),
      /**
       * <code>STRYD = 95;</code>
       */
      STRYD(95),
      /**
       * <code>ICG = 96;</code>
       */
      ICG(96),
      /**
       * <code>MIPULSE = 97;</code>
       */
      MIPULSE(97),
      /**
       * <code>BSX_ATHLETICS = 98;</code>
       */
      BSX_ATHLETICS(98),
      /**
       * <code>LOOK = 99;</code>
       */
      LOOK(99),
      /**
       * <code>CAMPAGNOLO_SRL = 100;</code>
       */
      CAMPAGNOLO_SRL(100),
      /**
       * <code>BODY_BIKE_SMART = 101;</code>
       */
      BODY_BIKE_SMART(101),
      /**
       * <code>PRAXISWORKS = 102;</code>
       */
      PRAXISWORKS(102),
      /**
       * <code>LIMITS_TECHNOLOGY = 103;</code>
       */
      LIMITS_TECHNOLOGY(103),
      /**
       * <code>TOPACTION_TECHNOLOGY = 104;</code>
       */
      TOPACTION_TECHNOLOGY(104),
      /**
       * <code>COSINUSS = 105;</code>
       */
      COSINUSS(105),
      /**
       * <code>FITCARE = 106;</code>
       */
      FITCARE(106),
      /**
       * <code>MAGENE = 107;</code>
       */
      MAGENE(107),
      /**
       * <code>GIANT_MANUFACTURING_CO = 108;</code>
       */
      GIANT_MANUFACTURING_CO(108),
      /**
       * <code>TIGRASPORT = 109;</code>
       */
      TIGRASPORT(109),
      /**
       * <code>DEVELOPMENT = 255;</code>
       */
      DEVELOPMENT(255),
      /**
       * <code>HEALTHANDLIFE = 257;</code>
       */
      HEALTHANDLIFE(257),
      /**
       * <code>LEZYNE = 258;</code>
       */
      LEZYNE(258),
      /**
       * <code>SCRIBE_LABS = 259;</code>
       */
      SCRIBE_LABS(259),
      /**
       * <code>ZWIFT = 260;</code>
       */
      ZWIFT(260),
      /**
       * <code>WATTEAM = 261;</code>
       */
      WATTEAM(261),
      /**
       * <code>RECON = 262;</code>
       */
      RECON(262),
      /**
       * <code>FAVERO_ELECTRONICS = 263;</code>
       */
      FAVERO_ELECTRONICS(263),
      /**
       * <code>DYNOVELO = 264;</code>
       */
      DYNOVELO(264),
      /**
       * <code>STRAVA = 265;</code>
       */
      STRAVA(265),
      /**
       * <code>PRECOR = 266;</code>
       */
      PRECOR(266),
      /**
       * <code>BRYTON = 267;</code>
       */
      BRYTON(267),
      /**
       * <code>SRAM = 268;</code>
       */
      SRAM(268),
      /**
       * <code>NAVMAN = 269;</code>
       */
      NAVMAN(269),
      /**
       * <code>COBI = 270;</code>
       */
      COBI(270),
      /**
       * <code>SPIVI = 271;</code>
       */
      SPIVI(271),
      /**
       * <code>MIO_MAGELLAN = 272;</code>
       */
      MIO_MAGELLAN(272),
      /**
       * <code>EVESPORTS = 273;</code>
       */
      EVESPORTS(273),
      /**
       * <code>SENSITIVUS_GAUGE = 274;</code>
       */
      SENSITIVUS_GAUGE(274),
      /**
       * <code>PODOON = 275;</code>
       */
      PODOON(275),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>UNKNOWN = 0;</code>
       */
      public static final int UNKNOWN_VALUE = 0;
      /**
       * <code>GARMIN = 1;</code>
       */
      public static final int GARMIN_VALUE = 1;
      /**
       * <code>GARMIN_FR405_ANTFS = 2;</code>
       */
      public static final int GARMIN_FR405_ANTFS_VALUE = 2;
      /**
       * <code>ZEPHYR = 3;</code>
       */
      public static final int ZEPHYR_VALUE = 3;
      /**
       * <code>DAYTON = 4;</code>
       */
      public static final int DAYTON_VALUE = 4;
      /**
       * <code>IDT = 5;</code>
       */
      public static final int IDT_VALUE = 5;
      /**
       * <code>SRM = 6;</code>
       */
      public static final int SRM_VALUE = 6;
      /**
       * <code>QUARQ = 7;</code>
       */
      public static final int QUARQ_VALUE = 7;
      /**
       * <code>IBIKE = 8;</code>
       */
      public static final int IBIKE_VALUE = 8;
      /**
       * <code>SARIS = 9;</code>
       */
      public static final int SARIS_VALUE = 9;
      /**
       * <code>SPARK_HK = 10;</code>
       */
      public static final int SPARK_HK_VALUE = 10;
      /**
       * <code>TANITA = 11;</code>
       */
      public static final int TANITA_VALUE = 11;
      /**
       * <code>ECHOWELL = 12;</code>
       */
      public static final int ECHOWELL_VALUE = 12;
      /**
       * <code>DYNASTREAM_OEM = 13;</code>
       */
      public static final int DYNASTREAM_OEM_VALUE = 13;
      /**
       * <code>NAUTILUS = 14;</code>
       */
      public static final int NAUTILUS_VALUE = 14;
      /**
       * <code>DYNASTREAM = 15;</code>
       */
      public static final int DYNASTREAM_VALUE = 15;
      /**
       * <code>TIMEX = 16;</code>
       */
      public static final int TIMEX_VALUE = 16;
      /**
       * <code>METRIGEAR = 17;</code>
       */
      public static final int METRIGEAR_VALUE = 17;
      /**
       * <code>XELIC = 18;</code>
       */
      public static final int XELIC_VALUE = 18;
      /**
       * <code>BEURER = 19;</code>
       */
      public static final int BEURER_VALUE = 19;
      /**
       * <code>CARDIOSPORT = 20;</code>
       */
      public static final int CARDIOSPORT_VALUE = 20;
      /**
       * <code>A_AND_D = 21;</code>
       */
      public static final int A_AND_D_VALUE = 21;
      /**
       * <code>HMM = 22;</code>
       */
      public static final int HMM_VALUE = 22;
      /**
       * <code>SUUNTO = 23;</code>
       */
      public static final int SUUNTO_VALUE = 23;
      /**
       * <code>THITA_ELEKTRONIK = 24;</code>
       */
      public static final int THITA_ELEKTRONIK_VALUE = 24;
      /**
       * <code>GPULSE = 25;</code>
       */
      public static final int GPULSE_VALUE = 25;
      /**
       * <code>CLEAN_MOBILE = 26;</code>
       */
      public static final int CLEAN_MOBILE_VALUE = 26;
      /**
       * <code>PEDAL_BRAIN = 27;</code>
       */
      public static final int PEDAL_BRAIN_VALUE = 27;
      /**
       * <code>PEAKSWARE = 28;</code>
       */
      public static final int PEAKSWARE_VALUE = 28;
      /**
       * <code>SAXONAR = 29;</code>
       */
      public static final int SAXONAR_VALUE = 29;
      /**
       * <code>LEMOND_FITNESS = 30;</code>
       */
      public static final int LEMOND_FITNESS_VALUE = 30;
      /**
       * <code>DEXCOM = 31;</code>
       */
      public static final int DEXCOM_VALUE = 31;
      /**
       * <code>WAHOO_FITNESS = 32;</code>
       */
      public static final int WAHOO_FITNESS_VALUE = 32;
      /**
       * <code>OCTANE_FITNESS = 33;</code>
       */
      public static final int OCTANE_FITNESS_VALUE = 33;
      /**
       * <code>ARCHINOETICS = 34;</code>
       */
      public static final int ARCHINOETICS_VALUE = 34;
      /**
       * <code>THE_HURT_BOX = 35;</code>
       */
      public static final int THE_HURT_BOX_VALUE = 35;
      /**
       * <code>CITIZEN_SYSTEMS = 36;</code>
       */
      public static final int CITIZEN_SYSTEMS_VALUE = 36;
      /**
       * <code>MAGELLAN = 37;</code>
       */
      public static final int MAGELLAN_VALUE = 37;
      /**
       * <code>OSYNCE = 38;</code>
       */
      public static final int OSYNCE_VALUE = 38;
      /**
       * <code>HOLUX = 39;</code>
       */
      public static final int HOLUX_VALUE = 39;
      /**
       * <code>CONCEPT2 = 40;</code>
       */
      public static final int CONCEPT2_VALUE = 40;
      /**
       * <code>ONE_GIANT_LEAP = 42;</code>
       */
      public static final int ONE_GIANT_LEAP_VALUE = 42;
      /**
       * <code>ACE_SENSOR = 43;</code>
       */
      public static final int ACE_SENSOR_VALUE = 43;
      /**
       * <code>BRIM_BROTHERS = 44;</code>
       */
      public static final int BRIM_BROTHERS_VALUE = 44;
      /**
       * <code>XPLOVA = 45;</code>
       */
      public static final int XPLOVA_VALUE = 45;
      /**
       * <code>PERCEPTION_DIGITAL = 46;</code>
       */
      public static final int PERCEPTION_DIGITAL_VALUE = 46;
      /**
       * <code>BF1SYSTEMS = 47;</code>
       */
      public static final int BF1SYSTEMS_VALUE = 47;
      /**
       * <code>PIONEER = 48;</code>
       */
      public static final int PIONEER_VALUE = 48;
      /**
       * <code>SPANTEC = 49;</code>
       */
      public static final int SPANTEC_VALUE = 49;
      /**
       * <code>METALOGICS = 50;</code>
       */
      public static final int METALOGICS_VALUE = 50;
      /**
       * <code>I4IIIIS = 51;</code>
       */
      public static final int I4IIIIS_VALUE = 51;
      /**
       * <code>SEIKO_EPSON = 52;</code>
       */
      public static final int SEIKO_EPSON_VALUE = 52;
      /**
       * <code>SEIKO_EPSON_OEM = 53;</code>
       */
      public static final int SEIKO_EPSON_OEM_VALUE = 53;
      /**
       * <code>IFOR_POWELL = 54;</code>
       */
      public static final int IFOR_POWELL_VALUE = 54;
      /**
       * <code>MAXWELL_GUIDER = 55;</code>
       */
      public static final int MAXWELL_GUIDER_VALUE = 55;
      /**
       * <code>STAR_TRAC = 56;</code>
       */
      public static final int STAR_TRAC_VALUE = 56;
      /**
       * <code>BREAKAWAY = 57;</code>
       */
      public static final int BREAKAWAY_VALUE = 57;
      /**
       * <code>ALATECH_TECHNOLOGY_LTD = 58;</code>
       */
      public static final int ALATECH_TECHNOLOGY_LTD_VALUE = 58;
      /**
       * <code>MIO_TECHNOLOGY_EUROPE = 59;</code>
       */
      public static final int MIO_TECHNOLOGY_EUROPE_VALUE = 59;
      /**
       * <code>ROTOR = 60;</code>
       */
      public static final int ROTOR_VALUE = 60;
      /**
       * <code>GEONAUTE = 61;</code>
       */
      public static final int GEONAUTE_VALUE = 61;
      /**
       * <code>ID_BIKE = 62;</code>
       */
      public static final int ID_BIKE_VALUE = 62;
      /**
       * <code>SPECIALIZED = 63;</code>
       */
      public static final int SPECIALIZED_VALUE = 63;
      /**
       * <code>WTEK = 64;</code>
       */
      public static final int WTEK_VALUE = 64;
      /**
       * <code>PHYSICAL_ENTERPRISES = 65;</code>
       */
      public static final int PHYSICAL_ENTERPRISES_VALUE = 65;
      /**
       * <code>NORTH_POLE_ENGINEERING = 66;</code>
       */
      public static final int NORTH_POLE_ENGINEERING_VALUE = 66;
      /**
       * <code>BKOOL = 67;</code>
       */
      public static final int BKOOL_VALUE = 67;
      /**
       * <code>CATEYE = 68;</code>
       */
      public static final int CATEYE_VALUE = 68;
      /**
       * <code>STAGES_CYCLING = 69;</code>
       */
      public static final int STAGES_CYCLING_VALUE = 69;
      /**
       * <code>SIGMASPORT = 70;</code>
       */
      public static final int SIGMASPORT_VALUE = 70;
      /**
       * <code>TOMTOM = 71;</code>
       */
      public static final int TOMTOM_VALUE = 71;
      /**
       * <code>PERIPEDAL = 72;</code>
       */
      public static final int PERIPEDAL_VALUE = 72;
      /**
       * <code>WATTBIKE = 73;</code>
       */
      public static final int WATTBIKE_VALUE = 73;
      /**
       * <code>MOXY = 76;</code>
       */
      public static final int MOXY_VALUE = 76;
      /**
       * <code>CICLOSPORT = 77;</code>
       */
      public static final int CICLOSPORT_VALUE = 77;
      /**
       * <code>POWERBAHN = 78;</code>
       */
      public static final int POWERBAHN_VALUE = 78;
      /**
       * <code>ACORN_PROJECTS_APS = 79;</code>
       */
      public static final int ACORN_PROJECTS_APS_VALUE = 79;
      /**
       * <code>LIFEBEAM = 80;</code>
       */
      public static final int LIFEBEAM_VALUE = 80;
      /**
       * <code>BONTRAGER = 81;</code>
       */
      public static final int BONTRAGER_VALUE = 81;
      /**
       * <code>WELLGO = 82;</code>
       */
      public static final int WELLGO_VALUE = 82;
      /**
       * <code>SCOSCHE = 83;</code>
       */
      public static final int SCOSCHE_VALUE = 83;
      /**
       * <code>MAGURA = 84;</code>
       */
      public static final int MAGURA_VALUE = 84;
      /**
       * <code>WOODWAY = 85;</code>
       */
      public static final int WOODWAY_VALUE = 85;
      /**
       * <code>ELITE = 86;</code>
       */
      public static final int ELITE_VALUE = 86;
      /**
       * <code>NIELSEN_KELLERMAN = 87;</code>
       */
      public static final int NIELSEN_KELLERMAN_VALUE = 87;
      /**
       * <code>DK_CITY = 88;</code>
       */
      public static final int DK_CITY_VALUE = 88;
      /**
       * <code>TACX = 89;</code>
       */
      public static final int TACX_VALUE = 89;
      /**
       * <code>DIRECTION_TECHNOLOGY = 90;</code>
       */
      public static final int DIRECTION_TECHNOLOGY_VALUE = 90;
      /**
       * <code>MAGTONIC = 91;</code>
       */
      public static final int MAGTONIC_VALUE = 91;
      /**
       * <code>ONEPARTCARBON = 92;</code>
       */
      public static final int ONEPARTCARBON_VALUE = 92;
      /**
       * <code>INSIDE_RIDE_TECHNOLOGIES = 93;</code>
       */
      public static final int INSIDE_RIDE_TECHNOLOGIES_VALUE = 93;
      /**
       * <code>SOUND_OF_MOTION = 94;</code>
       */
      public static final int SOUND_OF_MOTION_VALUE = 94;
      /**
       * <code>STRYD = 95;</code>
       */
      public static final int STRYD_VALUE = 95;
      /**
       * <code>ICG = 96;</code>
       */
      public static final int ICG_VALUE = 96;
      /**
       * <code>MIPULSE = 97;</code>
       */
      public static final int MIPULSE_VALUE = 97;
      /**
       * <code>BSX_ATHLETICS = 98;</code>
       */
      public static final int BSX_ATHLETICS_VALUE = 98;
      /**
       * <code>LOOK = 99;</code>
       */
      public static final int LOOK_VALUE = 99;
      /**
       * <code>CAMPAGNOLO_SRL = 100;</code>
       */
      public static final int CAMPAGNOLO_SRL_VALUE = 100;
      /**
       * <code>BODY_BIKE_SMART = 101;</code>
       */
      public static final int BODY_BIKE_SMART_VALUE = 101;
      /**
       * <code>PRAXISWORKS = 102;</code>
       */
      public static final int PRAXISWORKS_VALUE = 102;
      /**
       * <code>LIMITS_TECHNOLOGY = 103;</code>
       */
      public static final int LIMITS_TECHNOLOGY_VALUE = 103;
      /**
       * <code>TOPACTION_TECHNOLOGY = 104;</code>
       */
      public static final int TOPACTION_TECHNOLOGY_VALUE = 104;
      /**
       * <code>COSINUSS = 105;</code>
       */
      public static final int COSINUSS_VALUE = 105;
      /**
       * <code>FITCARE = 106;</code>
       */
      public static final int FITCARE_VALUE = 106;
      /**
       * <code>MAGENE = 107;</code>
       */
      public static final int MAGENE_VALUE = 107;
      /**
       * <code>GIANT_MANUFACTURING_CO = 108;</code>
       */
      public static final int GIANT_MANUFACTURING_CO_VALUE = 108;
      /**
       * <code>TIGRASPORT = 109;</code>
       */
      public static final int TIGRASPORT_VALUE = 109;
      /**
       * <code>DEVELOPMENT = 255;</code>
       */
      public static final int DEVELOPMENT_VALUE = 255;
      /**
       * <code>HEALTHANDLIFE = 257;</code>
       */
      public static final int HEALTHANDLIFE_VALUE = 257;
      /**
       * <code>LEZYNE = 258;</code>
       */
      public static final int LEZYNE_VALUE = 258;
      /**
       * <code>SCRIBE_LABS = 259;</code>
       */
      public static final int SCRIBE_LABS_VALUE = 259;
      /**
       * <code>ZWIFT = 260;</code>
       */
      public static final int ZWIFT_VALUE = 260;
      /**
       * <code>WATTEAM = 261;</code>
       */
      public static final int WATTEAM_VALUE = 261;
      /**
       * <code>RECON = 262;</code>
       */
      public static final int RECON_VALUE = 262;
      /**
       * <code>FAVERO_ELECTRONICS = 263;</code>
       */
      public static final int FAVERO_ELECTRONICS_VALUE = 263;
      /**
       * <code>DYNOVELO = 264;</code>
       */
      public static final int DYNOVELO_VALUE = 264;
      /**
       * <code>STRAVA = 265;</code>
       */
      public static final int STRAVA_VALUE = 265;
      /**
       * <code>PRECOR = 266;</code>
       */
      public static final int PRECOR_VALUE = 266;
      /**
       * <code>BRYTON = 267;</code>
       */
      public static final int BRYTON_VALUE = 267;
      /**
       * <code>SRAM = 268;</code>
       */
      public static final int SRAM_VALUE = 268;
      /**
       * <code>NAVMAN = 269;</code>
       */
      public static final int NAVMAN_VALUE = 269;
      /**
       * <code>COBI = 270;</code>
       */
      public static final int COBI_VALUE = 270;
      /**
       * <code>SPIVI = 271;</code>
       */
      public static final int SPIVI_VALUE = 271;
      /**
       * <code>MIO_MAGELLAN = 272;</code>
       */
      public static final int MIO_MAGELLAN_VALUE = 272;
      /**
       * <code>EVESPORTS = 273;</code>
       */
      public static final int EVESPORTS_VALUE = 273;
      /**
       * <code>SENSITIVUS_GAUGE = 274;</code>
       */
      public static final int SENSITIVUS_GAUGE_VALUE = 274;
      /**
       * <code>PODOON = 275;</code>
       */
      public static final int PODOON_VALUE = 275;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static FitManufacturer valueOf(int value) {
        return forNumber(value);
      }

      public static FitManufacturer forNumber(int value) {
        switch (value) {
          case 0: return UNKNOWN;
          case 1: return GARMIN;
          case 2: return GARMIN_FR405_ANTFS;
          case 3: return ZEPHYR;
          case 4: return DAYTON;
          case 5: return IDT;
          case 6: return SRM;
          case 7: return QUARQ;
          case 8: return IBIKE;
          case 9: return SARIS;
          case 10: return SPARK_HK;
          case 11: return TANITA;
          case 12: return ECHOWELL;
          case 13: return DYNASTREAM_OEM;
          case 14: return NAUTILUS;
          case 15: return DYNASTREAM;
          case 16: return TIMEX;
          case 17: return METRIGEAR;
          case 18: return XELIC;
          case 19: return BEURER;
          case 20: return CARDIOSPORT;
          case 21: return A_AND_D;
          case 22: return HMM;
          case 23: return SUUNTO;
          case 24: return THITA_ELEKTRONIK;
          case 25: return GPULSE;
          case 26: return CLEAN_MOBILE;
          case 27: return PEDAL_BRAIN;
          case 28: return PEAKSWARE;
          case 29: return SAXONAR;
          case 30: return LEMOND_FITNESS;
          case 31: return DEXCOM;
          case 32: return WAHOO_FITNESS;
          case 33: return OCTANE_FITNESS;
          case 34: return ARCHINOETICS;
          case 35: return THE_HURT_BOX;
          case 36: return CITIZEN_SYSTEMS;
          case 37: return MAGELLAN;
          case 38: return OSYNCE;
          case 39: return HOLUX;
          case 40: return CONCEPT2;
          case 42: return ONE_GIANT_LEAP;
          case 43: return ACE_SENSOR;
          case 44: return BRIM_BROTHERS;
          case 45: return XPLOVA;
          case 46: return PERCEPTION_DIGITAL;
          case 47: return BF1SYSTEMS;
          case 48: return PIONEER;
          case 49: return SPANTEC;
          case 50: return METALOGICS;
          case 51: return I4IIIIS;
          case 52: return SEIKO_EPSON;
          case 53: return SEIKO_EPSON_OEM;
          case 54: return IFOR_POWELL;
          case 55: return MAXWELL_GUIDER;
          case 56: return STAR_TRAC;
          case 57: return BREAKAWAY;
          case 58: return ALATECH_TECHNOLOGY_LTD;
          case 59: return MIO_TECHNOLOGY_EUROPE;
          case 60: return ROTOR;
          case 61: return GEONAUTE;
          case 62: return ID_BIKE;
          case 63: return SPECIALIZED;
          case 64: return WTEK;
          case 65: return PHYSICAL_ENTERPRISES;
          case 66: return NORTH_POLE_ENGINEERING;
          case 67: return BKOOL;
          case 68: return CATEYE;
          case 69: return STAGES_CYCLING;
          case 70: return SIGMASPORT;
          case 71: return TOMTOM;
          case 72: return PERIPEDAL;
          case 73: return WATTBIKE;
          case 76: return MOXY;
          case 77: return CICLOSPORT;
          case 78: return POWERBAHN;
          case 79: return ACORN_PROJECTS_APS;
          case 80: return LIFEBEAM;
          case 81: return BONTRAGER;
          case 82: return WELLGO;
          case 83: return SCOSCHE;
          case 84: return MAGURA;
          case 85: return WOODWAY;
          case 86: return ELITE;
          case 87: return NIELSEN_KELLERMAN;
          case 88: return DK_CITY;
          case 89: return TACX;
          case 90: return DIRECTION_TECHNOLOGY;
          case 91: return MAGTONIC;
          case 92: return ONEPARTCARBON;
          case 93: return INSIDE_RIDE_TECHNOLOGIES;
          case 94: return SOUND_OF_MOTION;
          case 95: return STRYD;
          case 96: return ICG;
          case 97: return MIPULSE;
          case 98: return BSX_ATHLETICS;
          case 99: return LOOK;
          case 100: return CAMPAGNOLO_SRL;
          case 101: return BODY_BIKE_SMART;
          case 102: return PRAXISWORKS;
          case 103: return LIMITS_TECHNOLOGY;
          case 104: return TOPACTION_TECHNOLOGY;
          case 105: return COSINUSS;
          case 106: return FITCARE;
          case 107: return MAGENE;
          case 108: return GIANT_MANUFACTURING_CO;
          case 109: return TIGRASPORT;
          case 255: return DEVELOPMENT;
          case 257: return HEALTHANDLIFE;
          case 258: return LEZYNE;
          case 259: return SCRIBE_LABS;
          case 260: return ZWIFT;
          case 261: return WATTEAM;
          case 262: return RECON;
          case 263: return FAVERO_ELECTRONICS;
          case 264: return DYNOVELO;
          case 265: return STRAVA;
          case 266: return PRECOR;
          case 267: return BRYTON;
          case 268: return SRAM;
          case 269: return NAVMAN;
          case 270: return COBI;
          case 271: return SPIVI;
          case 272: return MIO_MAGELLAN;
          case 273: return EVESPORTS;
          case 274: return SENSITIVUS_GAUGE;
          case 275: return PODOON;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<FitManufacturer>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          FitManufacturer> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FitManufacturer>() {
              public FitManufacturer findValueByNumber(int number) {
                return FitManufacturer.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.Activity.getDescriptor().getEnumTypes().get(0);
      }

      private static final FitManufacturer[] VALUES = values();

      public static FitManufacturer valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private FitManufacturer(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Activity.FitManufacturer)
    }

    /**
     * Protobuf enum {@code Activity.EventType}
     */
    public enum EventType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>START = 0;</code>
       */
      START(0),
      /**
       * <code>STOP = 1;</code>
       */
      STOP(1),
      /**
       * <code>CONSECUTIVE_DEPRECIATED = 2;</code>
       */
      CONSECUTIVE_DEPRECIATED(2),
      /**
       * <code>MARKER = 3;</code>
       */
      MARKER(3),
      /**
       * <code>STOP_ALL = 4;</code>
       */
      STOP_ALL(4),
      /**
       * <code>BEGIN_DEPRECIATED = 5;</code>
       */
      BEGIN_DEPRECIATED(5),
      /**
       * <code>END_DEPRECIATED = 6;</code>
       */
      END_DEPRECIATED(6),
      /**
       * <code>END_ALL_DEPRECIATED = 7;</code>
       */
      END_ALL_DEPRECIATED(7),
      /**
       * <code>STOP_DISABLE = 8;</code>
       */
      STOP_DISABLE(8),
      /**
       * <code>STOP_DISABLE_ALL = 9;</code>
       */
      STOP_DISABLE_ALL(9),
      /**
       * <code>NULL = 10;</code>
       */
      NULL(10),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>START = 0;</code>
       */
      public static final int START_VALUE = 0;
      /**
       * <code>STOP = 1;</code>
       */
      public static final int STOP_VALUE = 1;
      /**
       * <code>CONSECUTIVE_DEPRECIATED = 2;</code>
       */
      public static final int CONSECUTIVE_DEPRECIATED_VALUE = 2;
      /**
       * <code>MARKER = 3;</code>
       */
      public static final int MARKER_VALUE = 3;
      /**
       * <code>STOP_ALL = 4;</code>
       */
      public static final int STOP_ALL_VALUE = 4;
      /**
       * <code>BEGIN_DEPRECIATED = 5;</code>
       */
      public static final int BEGIN_DEPRECIATED_VALUE = 5;
      /**
       * <code>END_DEPRECIATED = 6;</code>
       */
      public static final int END_DEPRECIATED_VALUE = 6;
      /**
       * <code>END_ALL_DEPRECIATED = 7;</code>
       */
      public static final int END_ALL_DEPRECIATED_VALUE = 7;
      /**
       * <code>STOP_DISABLE = 8;</code>
       */
      public static final int STOP_DISABLE_VALUE = 8;
      /**
       * <code>STOP_DISABLE_ALL = 9;</code>
       */
      public static final int STOP_DISABLE_ALL_VALUE = 9;
      /**
       * <code>NULL = 10;</code>
       */
      public static final int NULL_VALUE = 10;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static EventType valueOf(int value) {
        return forNumber(value);
      }

      public static EventType forNumber(int value) {
        switch (value) {
          case 0: return START;
          case 1: return STOP;
          case 2: return CONSECUTIVE_DEPRECIATED;
          case 3: return MARKER;
          case 4: return STOP_ALL;
          case 5: return BEGIN_DEPRECIATED;
          case 6: return END_DEPRECIATED;
          case 7: return END_ALL_DEPRECIATED;
          case 8: return STOP_DISABLE;
          case 9: return STOP_DISABLE_ALL;
          case 10: return NULL;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<EventType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          EventType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<EventType>() {
              public EventType findValueByNumber(int number) {
                return EventType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.Activity.getDescriptor().getEnumTypes().get(1);
      }

      private static final EventType[] VALUES = values();

      public static EventType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private EventType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Activity.EventType)
    }

    /**
     * Protobuf enum {@code Activity.Sport}
     */
    public enum Sport
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>GENERIC = 0;</code>
       */
      GENERIC(0),
      /**
       * <code>RUNNING = 1;</code>
       */
      RUNNING(1),
      /**
       * <code>CYCLING = 2;</code>
       */
      CYCLING(2),
      /**
       * <code>TRANSITION = 3;</code>
       */
      TRANSITION(3),
      /**
       * <code>FITNESS_EQUIPMENT = 4;</code>
       */
      FITNESS_EQUIPMENT(4),
      /**
       * <code>SWIMMING = 5;</code>
       */
      SWIMMING(5),
      /**
       * <code>BASKETBALL = 6;</code>
       */
      BASKETBALL(6),
      /**
       * <code>SOCCER = 7;</code>
       */
      SOCCER(7),
      /**
       * <code>TENNIS = 8;</code>
       */
      TENNIS(8),
      /**
       * <code>AMERICAN_FOOTBALL = 9;</code>
       */
      AMERICAN_FOOTBALL(9),
      /**
       * <code>TRAINING = 10;</code>
       */
      TRAINING(10),
      /**
       * <code>WALKING = 11;</code>
       */
      WALKING(11),
      /**
       * <code>CROSS_COUNTRY_SKIING = 12;</code>
       */
      CROSS_COUNTRY_SKIING(12),
      /**
       * <code>ALPINE_SKIING = 13;</code>
       */
      ALPINE_SKIING(13),
      /**
       * <code>SNOWBOARDING = 14;</code>
       */
      SNOWBOARDING(14),
      /**
       * <code>ROWING = 15;</code>
       */
      ROWING(15),
      /**
       * <code>MOUNTAINEERING = 16;</code>
       */
      MOUNTAINEERING(16),
      /**
       * <code>HIKING = 17;</code>
       */
      HIKING(17),
      /**
       * <code>MULTISPORT = 18;</code>
       */
      MULTISPORT(18),
      /**
       * <code>PADDLING = 19;</code>
       */
      PADDLING(19),
      /**
       * <code>ALL = 254;</code>
       */
      ALL(254),
      /**
       * <code>INVALID = 255;</code>
       */
      INVALID(255),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>GENERIC = 0;</code>
       */
      public static final int GENERIC_VALUE = 0;
      /**
       * <code>RUNNING = 1;</code>
       */
      public static final int RUNNING_VALUE = 1;
      /**
       * <code>CYCLING = 2;</code>
       */
      public static final int CYCLING_VALUE = 2;
      /**
       * <code>TRANSITION = 3;</code>
       */
      public static final int TRANSITION_VALUE = 3;
      /**
       * <code>FITNESS_EQUIPMENT = 4;</code>
       */
      public static final int FITNESS_EQUIPMENT_VALUE = 4;
      /**
       * <code>SWIMMING = 5;</code>
       */
      public static final int SWIMMING_VALUE = 5;
      /**
       * <code>BASKETBALL = 6;</code>
       */
      public static final int BASKETBALL_VALUE = 6;
      /**
       * <code>SOCCER = 7;</code>
       */
      public static final int SOCCER_VALUE = 7;
      /**
       * <code>TENNIS = 8;</code>
       */
      public static final int TENNIS_VALUE = 8;
      /**
       * <code>AMERICAN_FOOTBALL = 9;</code>
       */
      public static final int AMERICAN_FOOTBALL_VALUE = 9;
      /**
       * <code>TRAINING = 10;</code>
       */
      public static final int TRAINING_VALUE = 10;
      /**
       * <code>WALKING = 11;</code>
       */
      public static final int WALKING_VALUE = 11;
      /**
       * <code>CROSS_COUNTRY_SKIING = 12;</code>
       */
      public static final int CROSS_COUNTRY_SKIING_VALUE = 12;
      /**
       * <code>ALPINE_SKIING = 13;</code>
       */
      public static final int ALPINE_SKIING_VALUE = 13;
      /**
       * <code>SNOWBOARDING = 14;</code>
       */
      public static final int SNOWBOARDING_VALUE = 14;
      /**
       * <code>ROWING = 15;</code>
       */
      public static final int ROWING_VALUE = 15;
      /**
       * <code>MOUNTAINEERING = 16;</code>
       */
      public static final int MOUNTAINEERING_VALUE = 16;
      /**
       * <code>HIKING = 17;</code>
       */
      public static final int HIKING_VALUE = 17;
      /**
       * <code>MULTISPORT = 18;</code>
       */
      public static final int MULTISPORT_VALUE = 18;
      /**
       * <code>PADDLING = 19;</code>
       */
      public static final int PADDLING_VALUE = 19;
      /**
       * <code>ALL = 254;</code>
       */
      public static final int ALL_VALUE = 254;
      /**
       * <code>INVALID = 255;</code>
       */
      public static final int INVALID_VALUE = 255;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Sport valueOf(int value) {
        return forNumber(value);
      }

      public static Sport forNumber(int value) {
        switch (value) {
          case 0: return GENERIC;
          case 1: return RUNNING;
          case 2: return CYCLING;
          case 3: return TRANSITION;
          case 4: return FITNESS_EQUIPMENT;
          case 5: return SWIMMING;
          case 6: return BASKETBALL;
          case 7: return SOCCER;
          case 8: return TENNIS;
          case 9: return AMERICAN_FOOTBALL;
          case 10: return TRAINING;
          case 11: return WALKING;
          case 12: return CROSS_COUNTRY_SKIING;
          case 13: return ALPINE_SKIING;
          case 14: return SNOWBOARDING;
          case 15: return ROWING;
          case 16: return MOUNTAINEERING;
          case 17: return HIKING;
          case 18: return MULTISPORT;
          case 19: return PADDLING;
          case 254: return ALL;
          case 255: return INVALID;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Sport>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Sport> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Sport>() {
              public Sport findValueByNumber(int number) {
                return Sport.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.Activity.getDescriptor().getEnumTypes().get(2);
      }

      private static final Sport[] VALUES = values();

      public static Sport valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Sport(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Activity.Sport)
    }

    /**
     * Protobuf enum {@code Activity.SubSport}
     */
    public enum SubSport
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>GENERIC_SUBSPORT = 0;</code>
       */
      GENERIC_SUBSPORT(0),
      /**
       * <code>TREADMILL = 1;</code>
       */
      TREADMILL(1),
      /**
       * <code>STREET = 2;</code>
       */
      STREET(2),
      /**
       * <code>TRAIL = 3;</code>
       */
      TRAIL(3),
      /**
       * <code>TRACK = 4;</code>
       */
      TRACK(4),
      /**
       * <code>SPIN = 5;</code>
       */
      SPIN(5),
      /**
       * <code>INDOOR_CYCLING = 6;</code>
       */
      INDOOR_CYCLING(6),
      /**
       * <code>ROAD = 7;</code>
       */
      ROAD(7),
      /**
       * <code>MOUNTAIN = 8;</code>
       */
      MOUNTAIN(8),
      /**
       * <code>DOWNHILL = 9;</code>
       */
      DOWNHILL(9),
      /**
       * <code>RECUMBENT = 10;</code>
       */
      RECUMBENT(10),
      /**
       * <code>CYCLOCROSS = 11;</code>
       */
      CYCLOCROSS(11),
      /**
       * <code>HAND_CYCLING = 12;</code>
       */
      HAND_CYCLING(12),
      /**
       * <code>TRACK_CYCLING = 13;</code>
       */
      TRACK_CYCLING(13),
      /**
       * <code>INDOOR_ROWING = 14;</code>
       */
      INDOOR_ROWING(14),
      /**
       * <code>ELLIPTICAL = 15;</code>
       */
      ELLIPTICAL(15),
      /**
       * <code>STAIR_CLIMBING = 16;</code>
       */
      STAIR_CLIMBING(16),
      /**
       * <code>LAP_SWIMMING = 17;</code>
       */
      LAP_SWIMMING(17),
      /**
       * <code>OPEN_WATER = 18;</code>
       */
      OPEN_WATER(18),
      /**
       * <code>FLEXIBILITY_TRAINING = 19;</code>
       */
      FLEXIBILITY_TRAINING(19),
      /**
       * <code>STRENGTH_TRAINING = 20;</code>
       */
      STRENGTH_TRAINING(20),
      /**
       * <code>WARM_UP = 21;</code>
       */
      WARM_UP(21),
      /**
       * <code>MATCH = 22;</code>
       */
      MATCH(22),
      /**
       * <code>EXERCISE = 23;</code>
       */
      EXERCISE(23),
      /**
       * <code>CHALLENGE = 24;</code>
       */
      CHALLENGE(24),
      /**
       * <code>INDOOR_SKIING = 25;</code>
       */
      INDOOR_SKIING(25),
      /**
       * <code>CARDIO_TRAINING = 26;</code>
       */
      CARDIO_TRAINING(26),
      /**
       * <code>INDOOR_WALKING = 27;</code>
       */
      INDOOR_WALKING(27),
      /**
       * <code>ALL_SUBSPORT = 254;</code>
       */
      ALL_SUBSPORT(254),
      /**
       * <code>INVALID_SUBSPORT = 255;</code>
       */
      INVALID_SUBSPORT(255),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>GENERIC_SUBSPORT = 0;</code>
       */
      public static final int GENERIC_SUBSPORT_VALUE = 0;
      /**
       * <code>TREADMILL = 1;</code>
       */
      public static final int TREADMILL_VALUE = 1;
      /**
       * <code>STREET = 2;</code>
       */
      public static final int STREET_VALUE = 2;
      /**
       * <code>TRAIL = 3;</code>
       */
      public static final int TRAIL_VALUE = 3;
      /**
       * <code>TRACK = 4;</code>
       */
      public static final int TRACK_VALUE = 4;
      /**
       * <code>SPIN = 5;</code>
       */
      public static final int SPIN_VALUE = 5;
      /**
       * <code>INDOOR_CYCLING = 6;</code>
       */
      public static final int INDOOR_CYCLING_VALUE = 6;
      /**
       * <code>ROAD = 7;</code>
       */
      public static final int ROAD_VALUE = 7;
      /**
       * <code>MOUNTAIN = 8;</code>
       */
      public static final int MOUNTAIN_VALUE = 8;
      /**
       * <code>DOWNHILL = 9;</code>
       */
      public static final int DOWNHILL_VALUE = 9;
      /**
       * <code>RECUMBENT = 10;</code>
       */
      public static final int RECUMBENT_VALUE = 10;
      /**
       * <code>CYCLOCROSS = 11;</code>
       */
      public static final int CYCLOCROSS_VALUE = 11;
      /**
       * <code>HAND_CYCLING = 12;</code>
       */
      public static final int HAND_CYCLING_VALUE = 12;
      /**
       * <code>TRACK_CYCLING = 13;</code>
       */
      public static final int TRACK_CYCLING_VALUE = 13;
      /**
       * <code>INDOOR_ROWING = 14;</code>
       */
      public static final int INDOOR_ROWING_VALUE = 14;
      /**
       * <code>ELLIPTICAL = 15;</code>
       */
      public static final int ELLIPTICAL_VALUE = 15;
      /**
       * <code>STAIR_CLIMBING = 16;</code>
       */
      public static final int STAIR_CLIMBING_VALUE = 16;
      /**
       * <code>LAP_SWIMMING = 17;</code>
       */
      public static final int LAP_SWIMMING_VALUE = 17;
      /**
       * <code>OPEN_WATER = 18;</code>
       */
      public static final int OPEN_WATER_VALUE = 18;
      /**
       * <code>FLEXIBILITY_TRAINING = 19;</code>
       */
      public static final int FLEXIBILITY_TRAINING_VALUE = 19;
      /**
       * <code>STRENGTH_TRAINING = 20;</code>
       */
      public static final int STRENGTH_TRAINING_VALUE = 20;
      /**
       * <code>WARM_UP = 21;</code>
       */
      public static final int WARM_UP_VALUE = 21;
      /**
       * <code>MATCH = 22;</code>
       */
      public static final int MATCH_VALUE = 22;
      /**
       * <code>EXERCISE = 23;</code>
       */
      public static final int EXERCISE_VALUE = 23;
      /**
       * <code>CHALLENGE = 24;</code>
       */
      public static final int CHALLENGE_VALUE = 24;
      /**
       * <code>INDOOR_SKIING = 25;</code>
       */
      public static final int INDOOR_SKIING_VALUE = 25;
      /**
       * <code>CARDIO_TRAINING = 26;</code>
       */
      public static final int CARDIO_TRAINING_VALUE = 26;
      /**
       * <code>INDOOR_WALKING = 27;</code>
       */
      public static final int INDOOR_WALKING_VALUE = 27;
      /**
       * <code>ALL_SUBSPORT = 254;</code>
       */
      public static final int ALL_SUBSPORT_VALUE = 254;
      /**
       * <code>INVALID_SUBSPORT = 255;</code>
       */
      public static final int INVALID_SUBSPORT_VALUE = 255;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SubSport valueOf(int value) {
        return forNumber(value);
      }

      public static SubSport forNumber(int value) {
        switch (value) {
          case 0: return GENERIC_SUBSPORT;
          case 1: return TREADMILL;
          case 2: return STREET;
          case 3: return TRAIL;
          case 4: return TRACK;
          case 5: return SPIN;
          case 6: return INDOOR_CYCLING;
          case 7: return ROAD;
          case 8: return MOUNTAIN;
          case 9: return DOWNHILL;
          case 10: return RECUMBENT;
          case 11: return CYCLOCROSS;
          case 12: return HAND_CYCLING;
          case 13: return TRACK_CYCLING;
          case 14: return INDOOR_ROWING;
          case 15: return ELLIPTICAL;
          case 16: return STAIR_CLIMBING;
          case 17: return LAP_SWIMMING;
          case 18: return OPEN_WATER;
          case 19: return FLEXIBILITY_TRAINING;
          case 20: return STRENGTH_TRAINING;
          case 21: return WARM_UP;
          case 22: return MATCH;
          case 23: return EXERCISE;
          case 24: return CHALLENGE;
          case 25: return INDOOR_SKIING;
          case 26: return CARDIO_TRAINING;
          case 27: return INDOOR_WALKING;
          case 254: return ALL_SUBSPORT;
          case 255: return INVALID_SUBSPORT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SubSport>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SubSport> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SubSport>() {
              public SubSport findValueByNumber(int number) {
                return SubSport.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.Activity.getDescriptor().getEnumTypes().get(3);
      }

      private static final SubSport[] VALUES = values();

      public static SubSport valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SubSport(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Activity.SubSport)
    }

    public interface MetaOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Activity.Meta)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * timestamp the activity was created 
       * </pre>
       *
       * <code>string createdTs = 1;</code>
       */
      java.lang.String getCreatedTs();
      /**
       * <pre>
       * timestamp the activity was created 
       * </pre>
       *
       * <code>string createdTs = 1;</code>
       */
      com.google.protobuf.ByteString
          getCreatedTsBytes();

      /**
       * <pre>
       * device manufacturer 
       * </pre>
       *
       * <code>.Activity.FitManufacturer manufacturer = 2;</code>
       */
      int getManufacturerValue();
      /**
       * <pre>
       * device manufacturer 
       * </pre>
       *
       * <code>.Activity.FitManufacturer manufacturer = 2;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer getManufacturer();

      /**
       * <pre>
       * device model 
       * </pre>
       *
       * <code>int32 product = 3;</code>
       */
      int getProduct();

      /**
       * <pre>
       * data format version 
       * </pre>
       *
       * <code>double version = 4;</code>
       */
      double getVersion();

      /**
       * <pre>
       * data  source  - e.g. fit,garmin,strava 
       * </pre>
       *
       * <code>string source = 5;</code>
       */
      java.lang.String getSource();
      /**
       * <pre>
       * data  source  - e.g. fit,garmin,strava 
       * </pre>
       *
       * <code>string source = 5;</code>
       */
      com.google.protobuf.ByteString
          getSourceBytes();

      /**
       * <pre>
       * date the file was uploaded 
       * </pre>
       *
       * <code>string uploadTs = 6;</code>
       */
      java.lang.String getUploadTs();
      /**
       * <pre>
       * date the file was uploaded 
       * </pre>
       *
       * <code>string uploadTs = 6;</code>
       */
      com.google.protobuf.ByteString
          getUploadTsBytes();

      /**
       * <code>.Activity.Sport sport = 7;</code>
       */
      int getSportValue();
      /**
       * <code>.Activity.Sport sport = 7;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.Sport getSport();

      /**
       * <code>.Activity.SubSport subSport = 8;</code>
       */
      int getSubSportValue();
      /**
       * <code>.Activity.SubSport subSport = 8;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport getSubSport();

      /**
       * <pre>
       * text description of location 
       * </pre>
       *
       * <code>string location = 9;</code>
       */
      java.lang.String getLocation();
      /**
       * <pre>
       * text description of location 
       * </pre>
       *
       * <code>string location = 9;</code>
       */
      com.google.protobuf.ByteString
          getLocationBytes();

      /**
       * <pre>
       * weather derived from a weather location / time api 
       * </pre>
       *
       * <code>.Activity.Weather weather = 10;</code>
       */
      boolean hasWeather();
      /**
       * <pre>
       * weather derived from a weather location / time api 
       * </pre>
       *
       * <code>.Activity.Weather weather = 10;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.Weather getWeather();
      /**
       * <pre>
       * weather derived from a weather location / time api 
       * </pre>
       *
       * <code>.Activity.Weather weather = 10;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.WeatherOrBuilder getWeatherOrBuilder();
    }
    /**
     * Protobuf type {@code Activity.Meta}
     */
    public  static final class Meta extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Activity.Meta)
        MetaOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Meta.newBuilder() to construct.
      private Meta(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Meta() {
        createdTs_ = "";
        manufacturer_ = 0;
        product_ = 0;
        version_ = 0D;
        source_ = "";
        uploadTs_ = "";
        sport_ = 0;
        subSport_ = 0;
        location_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Meta(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                createdTs_ = s;
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                manufacturer_ = rawValue;
                break;
              }
              case 24: {

                product_ = input.readInt32();
                break;
              }
              case 33: {

                version_ = input.readDouble();
                break;
              }
              case 42: {
                java.lang.String s = input.readStringRequireUtf8();

                source_ = s;
                break;
              }
              case 50: {
                java.lang.String s = input.readStringRequireUtf8();

                uploadTs_ = s;
                break;
              }
              case 56: {
                int rawValue = input.readEnum();

                sport_ = rawValue;
                break;
              }
              case 64: {
                int rawValue = input.readEnum();

                subSport_ = rawValue;
                break;
              }
              case 74: {
                java.lang.String s = input.readStringRequireUtf8();

                location_ = s;
                break;
              }
              case 82: {
                ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.Builder subBuilder = null;
                if (weather_ != null) {
                  subBuilder = weather_.toBuilder();
                }
                weather_ = input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(weather_);
                  weather_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Meta_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Meta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.Builder.class);
      }

      public static final int CREATEDTS_FIELD_NUMBER = 1;
      private volatile java.lang.Object createdTs_;
      /**
       * <pre>
       * timestamp the activity was created 
       * </pre>
       *
       * <code>string createdTs = 1;</code>
       */
      public java.lang.String getCreatedTs() {
        java.lang.Object ref = createdTs_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          createdTs_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * timestamp the activity was created 
       * </pre>
       *
       * <code>string createdTs = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCreatedTsBytes() {
        java.lang.Object ref = createdTs_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          createdTs_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int MANUFACTURER_FIELD_NUMBER = 2;
      private int manufacturer_;
      /**
       * <pre>
       * device manufacturer 
       * </pre>
       *
       * <code>.Activity.FitManufacturer manufacturer = 2;</code>
       */
      public int getManufacturerValue() {
        return manufacturer_;
      }
      /**
       * <pre>
       * device manufacturer 
       * </pre>
       *
       * <code>.Activity.FitManufacturer manufacturer = 2;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer getManufacturer() {
        ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer result = ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer.valueOf(manufacturer_);
        return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer.UNRECOGNIZED : result;
      }

      public static final int PRODUCT_FIELD_NUMBER = 3;
      private int product_;
      /**
       * <pre>
       * device model 
       * </pre>
       *
       * <code>int32 product = 3;</code>
       */
      public int getProduct() {
        return product_;
      }

      public static final int VERSION_FIELD_NUMBER = 4;
      private double version_;
      /**
       * <pre>
       * data format version 
       * </pre>
       *
       * <code>double version = 4;</code>
       */
      public double getVersion() {
        return version_;
      }

      public static final int SOURCE_FIELD_NUMBER = 5;
      private volatile java.lang.Object source_;
      /**
       * <pre>
       * data  source  - e.g. fit,garmin,strava 
       * </pre>
       *
       * <code>string source = 5;</code>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * data  source  - e.g. fit,garmin,strava 
       * </pre>
       *
       * <code>string source = 5;</code>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int UPLOADTS_FIELD_NUMBER = 6;
      private volatile java.lang.Object uploadTs_;
      /**
       * <pre>
       * date the file was uploaded 
       * </pre>
       *
       * <code>string uploadTs = 6;</code>
       */
      public java.lang.String getUploadTs() {
        java.lang.Object ref = uploadTs_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uploadTs_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * date the file was uploaded 
       * </pre>
       *
       * <code>string uploadTs = 6;</code>
       */
      public com.google.protobuf.ByteString
          getUploadTsBytes() {
        java.lang.Object ref = uploadTs_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uploadTs_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int SPORT_FIELD_NUMBER = 7;
      private int sport_;
      /**
       * <code>.Activity.Sport sport = 7;</code>
       */
      public int getSportValue() {
        return sport_;
      }
      /**
       * <code>.Activity.Sport sport = 7;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Sport getSport() {
        ski.crunch.activity.model.ActivityOuterClass.Activity.Sport result = ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.valueOf(sport_);
        return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.UNRECOGNIZED : result;
      }

      public static final int SUBSPORT_FIELD_NUMBER = 8;
      private int subSport_;
      /**
       * <code>.Activity.SubSport subSport = 8;</code>
       */
      public int getSubSportValue() {
        return subSport_;
      }
      /**
       * <code>.Activity.SubSport subSport = 8;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport getSubSport() {
        ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport result = ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.valueOf(subSport_);
        return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.UNRECOGNIZED : result;
      }

      public static final int LOCATION_FIELD_NUMBER = 9;
      private volatile java.lang.Object location_;
      /**
       * <pre>
       * text description of location 
       * </pre>
       *
       * <code>string location = 9;</code>
       */
      public java.lang.String getLocation() {
        java.lang.Object ref = location_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          location_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * text description of location 
       * </pre>
       *
       * <code>string location = 9;</code>
       */
      public com.google.protobuf.ByteString
          getLocationBytes() {
        java.lang.Object ref = location_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          location_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int WEATHER_FIELD_NUMBER = 10;
      private ski.crunch.activity.model.ActivityOuterClass.Activity.Weather weather_;
      /**
       * <pre>
       * weather derived from a weather location / time api 
       * </pre>
       *
       * <code>.Activity.Weather weather = 10;</code>
       */
      public boolean hasWeather() {
        return weather_ != null;
      }
      /**
       * <pre>
       * weather derived from a weather location / time api 
       * </pre>
       *
       * <code>.Activity.Weather weather = 10;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Weather getWeather() {
        return weather_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.getDefaultInstance() : weather_;
      }
      /**
       * <pre>
       * weather derived from a weather location / time api 
       * </pre>
       *
       * <code>.Activity.Weather weather = 10;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.WeatherOrBuilder getWeatherOrBuilder() {
        return getWeather();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getCreatedTsBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, createdTs_);
        }
        if (manufacturer_ != ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer.UNKNOWN.getNumber()) {
          output.writeEnum(2, manufacturer_);
        }
        if (product_ != 0) {
          output.writeInt32(3, product_);
        }
        if (version_ != 0D) {
          output.writeDouble(4, version_);
        }
        if (!getSourceBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, source_);
        }
        if (!getUploadTsBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 6, uploadTs_);
        }
        if (sport_ != ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.GENERIC.getNumber()) {
          output.writeEnum(7, sport_);
        }
        if (subSport_ != ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.GENERIC_SUBSPORT.getNumber()) {
          output.writeEnum(8, subSport_);
        }
        if (!getLocationBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 9, location_);
        }
        if (weather_ != null) {
          output.writeMessage(10, getWeather());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getCreatedTsBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, createdTs_);
        }
        if (manufacturer_ != ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer.UNKNOWN.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, manufacturer_);
        }
        if (product_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, product_);
        }
        if (version_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, version_);
        }
        if (!getSourceBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, source_);
        }
        if (!getUploadTsBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, uploadTs_);
        }
        if (sport_ != ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.GENERIC.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(7, sport_);
        }
        if (subSport_ != ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.GENERIC_SUBSPORT.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(8, subSport_);
        }
        if (!getLocationBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, location_);
        }
        if (weather_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, getWeather());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Meta)) {
          return super.equals(obj);
        }
        ski.crunch.activity.model.ActivityOuterClass.Activity.Meta other = (ski.crunch.activity.model.ActivityOuterClass.Activity.Meta) obj;

        boolean result = true;
        result = result && getCreatedTs()
            .equals(other.getCreatedTs());
        result = result && manufacturer_ == other.manufacturer_;
        result = result && (getProduct()
            == other.getProduct());
        result = result && (
            java.lang.Double.doubleToLongBits(getVersion())
            == java.lang.Double.doubleToLongBits(
                other.getVersion()));
        result = result && getSource()
            .equals(other.getSource());
        result = result && getUploadTs()
            .equals(other.getUploadTs());
        result = result && sport_ == other.sport_;
        result = result && subSport_ == other.subSport_;
        result = result && getLocation()
            .equals(other.getLocation());
        result = result && (hasWeather() == other.hasWeather());
        if (hasWeather()) {
          result = result && getWeather()
              .equals(other.getWeather());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + CREATEDTS_FIELD_NUMBER;
        hash = (53 * hash) + getCreatedTs().hashCode();
        hash = (37 * hash) + MANUFACTURER_FIELD_NUMBER;
        hash = (53 * hash) + manufacturer_;
        hash = (37 * hash) + PRODUCT_FIELD_NUMBER;
        hash = (53 * hash) + getProduct();
        hash = (37 * hash) + VERSION_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getVersion()));
        hash = (37 * hash) + SOURCE_FIELD_NUMBER;
        hash = (53 * hash) + getSource().hashCode();
        hash = (37 * hash) + UPLOADTS_FIELD_NUMBER;
        hash = (53 * hash) + getUploadTs().hashCode();
        hash = (37 * hash) + SPORT_FIELD_NUMBER;
        hash = (53 * hash) + sport_;
        hash = (37 * hash) + SUBSPORT_FIELD_NUMBER;
        hash = (53 * hash) + subSport_;
        hash = (37 * hash) + LOCATION_FIELD_NUMBER;
        hash = (53 * hash) + getLocation().hashCode();
        if (hasWeather()) {
          hash = (37 * hash) + WEATHER_FIELD_NUMBER;
          hash = (53 * hash) + getWeather().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(ski.crunch.activity.model.ActivityOuterClass.Activity.Meta prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Activity.Meta}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Activity.Meta)
          ski.crunch.activity.model.ActivityOuterClass.Activity.MetaOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Meta_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Meta_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.Builder.class);
        }

        // Construct using ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          createdTs_ = "";

          manufacturer_ = 0;

          product_ = 0;

          version_ = 0D;

          source_ = "";

          uploadTs_ = "";

          sport_ = 0;

          subSport_ = 0;

          location_ = "";

          if (weatherBuilder_ == null) {
            weather_ = null;
          } else {
            weather_ = null;
            weatherBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Meta_descriptor;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Meta getDefaultInstanceForType() {
          return ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.getDefaultInstance();
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Meta build() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Meta result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Meta buildPartial() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Meta result = new ski.crunch.activity.model.ActivityOuterClass.Activity.Meta(this);
          result.createdTs_ = createdTs_;
          result.manufacturer_ = manufacturer_;
          result.product_ = product_;
          result.version_ = version_;
          result.source_ = source_;
          result.uploadTs_ = uploadTs_;
          result.sport_ = sport_;
          result.subSport_ = subSport_;
          result.location_ = location_;
          if (weatherBuilder_ == null) {
            result.weather_ = weather_;
          } else {
            result.weather_ = weatherBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Meta) {
            return mergeFrom((ski.crunch.activity.model.ActivityOuterClass.Activity.Meta)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ski.crunch.activity.model.ActivityOuterClass.Activity.Meta other) {
          if (other == ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.getDefaultInstance()) return this;
          if (!other.getCreatedTs().isEmpty()) {
            createdTs_ = other.createdTs_;
            onChanged();
          }
          if (other.manufacturer_ != 0) {
            setManufacturerValue(other.getManufacturerValue());
          }
          if (other.getProduct() != 0) {
            setProduct(other.getProduct());
          }
          if (other.getVersion() != 0D) {
            setVersion(other.getVersion());
          }
          if (!other.getSource().isEmpty()) {
            source_ = other.source_;
            onChanged();
          }
          if (!other.getUploadTs().isEmpty()) {
            uploadTs_ = other.uploadTs_;
            onChanged();
          }
          if (other.sport_ != 0) {
            setSportValue(other.getSportValue());
          }
          if (other.subSport_ != 0) {
            setSubSportValue(other.getSubSportValue());
          }
          if (!other.getLocation().isEmpty()) {
            location_ = other.location_;
            onChanged();
          }
          if (other.hasWeather()) {
            mergeWeather(other.getWeather());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Meta parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ski.crunch.activity.model.ActivityOuterClass.Activity.Meta) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object createdTs_ = "";
        /**
         * <pre>
         * timestamp the activity was created 
         * </pre>
         *
         * <code>string createdTs = 1;</code>
         */
        public java.lang.String getCreatedTs() {
          java.lang.Object ref = createdTs_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            createdTs_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * timestamp the activity was created 
         * </pre>
         *
         * <code>string createdTs = 1;</code>
         */
        public com.google.protobuf.ByteString
            getCreatedTsBytes() {
          java.lang.Object ref = createdTs_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            createdTs_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * timestamp the activity was created 
         * </pre>
         *
         * <code>string createdTs = 1;</code>
         */
        public Builder setCreatedTs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          createdTs_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * timestamp the activity was created 
         * </pre>
         *
         * <code>string createdTs = 1;</code>
         */
        public Builder clearCreatedTs() {
          
          createdTs_ = getDefaultInstance().getCreatedTs();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * timestamp the activity was created 
         * </pre>
         *
         * <code>string createdTs = 1;</code>
         */
        public Builder setCreatedTsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          createdTs_ = value;
          onChanged();
          return this;
        }

        private int manufacturer_ = 0;
        /**
         * <pre>
         * device manufacturer 
         * </pre>
         *
         * <code>.Activity.FitManufacturer manufacturer = 2;</code>
         */
        public int getManufacturerValue() {
          return manufacturer_;
        }
        /**
         * <pre>
         * device manufacturer 
         * </pre>
         *
         * <code>.Activity.FitManufacturer manufacturer = 2;</code>
         */
        public Builder setManufacturerValue(int value) {
          manufacturer_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * device manufacturer 
         * </pre>
         *
         * <code>.Activity.FitManufacturer manufacturer = 2;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer getManufacturer() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer result = ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer.valueOf(manufacturer_);
          return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * device manufacturer 
         * </pre>
         *
         * <code>.Activity.FitManufacturer manufacturer = 2;</code>
         */
        public Builder setManufacturer(ski.crunch.activity.model.ActivityOuterClass.Activity.FitManufacturer value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          manufacturer_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * device manufacturer 
         * </pre>
         *
         * <code>.Activity.FitManufacturer manufacturer = 2;</code>
         */
        public Builder clearManufacturer() {
          
          manufacturer_ = 0;
          onChanged();
          return this;
        }

        private int product_ ;
        /**
         * <pre>
         * device model 
         * </pre>
         *
         * <code>int32 product = 3;</code>
         */
        public int getProduct() {
          return product_;
        }
        /**
         * <pre>
         * device model 
         * </pre>
         *
         * <code>int32 product = 3;</code>
         */
        public Builder setProduct(int value) {
          
          product_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * device model 
         * </pre>
         *
         * <code>int32 product = 3;</code>
         */
        public Builder clearProduct() {
          
          product_ = 0;
          onChanged();
          return this;
        }

        private double version_ ;
        /**
         * <pre>
         * data format version 
         * </pre>
         *
         * <code>double version = 4;</code>
         */
        public double getVersion() {
          return version_;
        }
        /**
         * <pre>
         * data format version 
         * </pre>
         *
         * <code>double version = 4;</code>
         */
        public Builder setVersion(double value) {
          
          version_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * data format version 
         * </pre>
         *
         * <code>double version = 4;</code>
         */
        public Builder clearVersion() {
          
          version_ = 0D;
          onChanged();
          return this;
        }

        private java.lang.Object source_ = "";
        /**
         * <pre>
         * data  source  - e.g. fit,garmin,strava 
         * </pre>
         *
         * <code>string source = 5;</code>
         */
        public java.lang.String getSource() {
          java.lang.Object ref = source_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            source_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * data  source  - e.g. fit,garmin,strava 
         * </pre>
         *
         * <code>string source = 5;</code>
         */
        public com.google.protobuf.ByteString
            getSourceBytes() {
          java.lang.Object ref = source_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            source_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * data  source  - e.g. fit,garmin,strava 
         * </pre>
         *
         * <code>string source = 5;</code>
         */
        public Builder setSource(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          source_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * data  source  - e.g. fit,garmin,strava 
         * </pre>
         *
         * <code>string source = 5;</code>
         */
        public Builder clearSource() {
          
          source_ = getDefaultInstance().getSource();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * data  source  - e.g. fit,garmin,strava 
         * </pre>
         *
         * <code>string source = 5;</code>
         */
        public Builder setSourceBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          source_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object uploadTs_ = "";
        /**
         * <pre>
         * date the file was uploaded 
         * </pre>
         *
         * <code>string uploadTs = 6;</code>
         */
        public java.lang.String getUploadTs() {
          java.lang.Object ref = uploadTs_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            uploadTs_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * date the file was uploaded 
         * </pre>
         *
         * <code>string uploadTs = 6;</code>
         */
        public com.google.protobuf.ByteString
            getUploadTsBytes() {
          java.lang.Object ref = uploadTs_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            uploadTs_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * date the file was uploaded 
         * </pre>
         *
         * <code>string uploadTs = 6;</code>
         */
        public Builder setUploadTs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          uploadTs_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * date the file was uploaded 
         * </pre>
         *
         * <code>string uploadTs = 6;</code>
         */
        public Builder clearUploadTs() {
          
          uploadTs_ = getDefaultInstance().getUploadTs();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * date the file was uploaded 
         * </pre>
         *
         * <code>string uploadTs = 6;</code>
         */
        public Builder setUploadTsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          uploadTs_ = value;
          onChanged();
          return this;
        }

        private int sport_ = 0;
        /**
         * <code>.Activity.Sport sport = 7;</code>
         */
        public int getSportValue() {
          return sport_;
        }
        /**
         * <code>.Activity.Sport sport = 7;</code>
         */
        public Builder setSportValue(int value) {
          sport_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.Activity.Sport sport = 7;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.Sport getSport() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Sport result = ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.valueOf(sport_);
          return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.UNRECOGNIZED : result;
        }
        /**
         * <code>.Activity.Sport sport = 7;</code>
         */
        public Builder setSport(ski.crunch.activity.model.ActivityOuterClass.Activity.Sport value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          sport_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.Activity.Sport sport = 7;</code>
         */
        public Builder clearSport() {
          
          sport_ = 0;
          onChanged();
          return this;
        }

        private int subSport_ = 0;
        /**
         * <code>.Activity.SubSport subSport = 8;</code>
         */
        public int getSubSportValue() {
          return subSport_;
        }
        /**
         * <code>.Activity.SubSport subSport = 8;</code>
         */
        public Builder setSubSportValue(int value) {
          subSport_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.Activity.SubSport subSport = 8;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport getSubSport() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport result = ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.valueOf(subSport_);
          return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.UNRECOGNIZED : result;
        }
        /**
         * <code>.Activity.SubSport subSport = 8;</code>
         */
        public Builder setSubSport(ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          subSport_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.Activity.SubSport subSport = 8;</code>
         */
        public Builder clearSubSport() {
          
          subSport_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object location_ = "";
        /**
         * <pre>
         * text description of location 
         * </pre>
         *
         * <code>string location = 9;</code>
         */
        public java.lang.String getLocation() {
          java.lang.Object ref = location_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            location_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * text description of location 
         * </pre>
         *
         * <code>string location = 9;</code>
         */
        public com.google.protobuf.ByteString
            getLocationBytes() {
          java.lang.Object ref = location_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            location_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * text description of location 
         * </pre>
         *
         * <code>string location = 9;</code>
         */
        public Builder setLocation(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          location_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * text description of location 
         * </pre>
         *
         * <code>string location = 9;</code>
         */
        public Builder clearLocation() {
          
          location_ = getDefaultInstance().getLocation();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * text description of location 
         * </pre>
         *
         * <code>string location = 9;</code>
         */
        public Builder setLocationBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          location_ = value;
          onChanged();
          return this;
        }

        private ski.crunch.activity.model.ActivityOuterClass.Activity.Weather weather_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            ski.crunch.activity.model.ActivityOuterClass.Activity.Weather, ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.WeatherOrBuilder> weatherBuilder_;
        /**
         * <pre>
         * weather derived from a weather location / time api 
         * </pre>
         *
         * <code>.Activity.Weather weather = 10;</code>
         */
        public boolean hasWeather() {
          return weatherBuilder_ != null || weather_ != null;
        }
        /**
         * <pre>
         * weather derived from a weather location / time api 
         * </pre>
         *
         * <code>.Activity.Weather weather = 10;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.Weather getWeather() {
          if (weatherBuilder_ == null) {
            return weather_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.getDefaultInstance() : weather_;
          } else {
            return weatherBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * weather derived from a weather location / time api 
         * </pre>
         *
         * <code>.Activity.Weather weather = 10;</code>
         */
        public Builder setWeather(ski.crunch.activity.model.ActivityOuterClass.Activity.Weather value) {
          if (weatherBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            weather_ = value;
            onChanged();
          } else {
            weatherBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <pre>
         * weather derived from a weather location / time api 
         * </pre>
         *
         * <code>.Activity.Weather weather = 10;</code>
         */
        public Builder setWeather(
            ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.Builder builderForValue) {
          if (weatherBuilder_ == null) {
            weather_ = builderForValue.build();
            onChanged();
          } else {
            weatherBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <pre>
         * weather derived from a weather location / time api 
         * </pre>
         *
         * <code>.Activity.Weather weather = 10;</code>
         */
        public Builder mergeWeather(ski.crunch.activity.model.ActivityOuterClass.Activity.Weather value) {
          if (weatherBuilder_ == null) {
            if (weather_ != null) {
              weather_ =
                ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.newBuilder(weather_).mergeFrom(value).buildPartial();
            } else {
              weather_ = value;
            }
            onChanged();
          } else {
            weatherBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <pre>
         * weather derived from a weather location / time api 
         * </pre>
         *
         * <code>.Activity.Weather weather = 10;</code>
         */
        public Builder clearWeather() {
          if (weatherBuilder_ == null) {
            weather_ = null;
            onChanged();
          } else {
            weather_ = null;
            weatherBuilder_ = null;
          }

          return this;
        }
        /**
         * <pre>
         * weather derived from a weather location / time api 
         * </pre>
         *
         * <code>.Activity.Weather weather = 10;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.Builder getWeatherBuilder() {
          
          onChanged();
          return getWeatherFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * weather derived from a weather location / time api 
         * </pre>
         *
         * <code>.Activity.Weather weather = 10;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.WeatherOrBuilder getWeatherOrBuilder() {
          if (weatherBuilder_ != null) {
            return weatherBuilder_.getMessageOrBuilder();
          } else {
            return weather_ == null ?
                ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.getDefaultInstance() : weather_;
          }
        }
        /**
         * <pre>
         * weather derived from a weather location / time api 
         * </pre>
         *
         * <code>.Activity.Weather weather = 10;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            ski.crunch.activity.model.ActivityOuterClass.Activity.Weather, ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.WeatherOrBuilder> 
            getWeatherFieldBuilder() {
          if (weatherBuilder_ == null) {
            weatherBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                ski.crunch.activity.model.ActivityOuterClass.Activity.Weather, ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.WeatherOrBuilder>(
                    getWeather(),
                    getParentForChildren(),
                    isClean());
            weather_ = null;
          }
          return weatherBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Activity.Meta)
      }

      // @@protoc_insertion_point(class_scope:Activity.Meta)
      private static final ski.crunch.activity.model.ActivityOuterClass.Activity.Meta DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ski.crunch.activity.model.ActivityOuterClass.Activity.Meta();
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Meta getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Meta>
          PARSER = new com.google.protobuf.AbstractParser<Meta>() {
        public Meta parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Meta(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Meta> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Meta> getParserForType() {
        return PARSER;
      }

      public ski.crunch.activity.model.ActivityOuterClass.Activity.Meta getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface UserDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Activity.UserData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       *  how user feels 1 -5 star 
       * </pre>
       *
       * <code>int32 feeling = 1;</code>
       */
      int getFeeling();

      /**
       * <code>string notes = 2;</code>
       */
      java.lang.String getNotes();
      /**
       * <code>string notes = 2;</code>
       */
      com.google.protobuf.ByteString
          getNotesBytes();

      /**
       * <code>repeated string tags = 3;</code>
       */
      java.util.List<java.lang.String>
          getTagsList();
      /**
       * <code>repeated string tags = 3;</code>
       */
      int getTagsCount();
      /**
       * <code>repeated string tags = 3;</code>
       */
      java.lang.String getTags(int index);
      /**
       * <code>repeated string tags = 3;</code>
       */
      com.google.protobuf.ByteString
          getTagsBytes(int index);

      /**
       * <pre>
       * user input notes on weather 
       * </pre>
       *
       * <code>string userWeather = 4;</code>
       */
      java.lang.String getUserWeather();
      /**
       * <pre>
       * user input notes on weather 
       * </pre>
       *
       * <code>string userWeather = 4;</code>
       */
      com.google.protobuf.ByteString
          getUserWeatherBytes();
    }
    /**
     * Protobuf type {@code Activity.UserData}
     */
    public  static final class UserData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Activity.UserData)
        UserDataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use UserData.newBuilder() to construct.
      private UserData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private UserData() {
        feeling_ = 0;
        notes_ = "";
        tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        userWeather_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private UserData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                feeling_ = input.readInt32();
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                notes_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  tags_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000004;
                }
                tags_.add(s);
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                userWeather_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            tags_ = tags_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_UserData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_UserData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.class, ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.Builder.class);
      }

      private int bitField0_;
      public static final int FEELING_FIELD_NUMBER = 1;
      private int feeling_;
      /**
       * <pre>
       *  how user feels 1 -5 star 
       * </pre>
       *
       * <code>int32 feeling = 1;</code>
       */
      public int getFeeling() {
        return feeling_;
      }

      public static final int NOTES_FIELD_NUMBER = 2;
      private volatile java.lang.Object notes_;
      /**
       * <code>string notes = 2;</code>
       */
      public java.lang.String getNotes() {
        java.lang.Object ref = notes_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          notes_ = s;
          return s;
        }
      }
      /**
       * <code>string notes = 2;</code>
       */
      public com.google.protobuf.ByteString
          getNotesBytes() {
        java.lang.Object ref = notes_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          notes_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TAGS_FIELD_NUMBER = 3;
      private com.google.protobuf.LazyStringList tags_;
      /**
       * <code>repeated string tags = 3;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTagsList() {
        return tags_;
      }
      /**
       * <code>repeated string tags = 3;</code>
       */
      public int getTagsCount() {
        return tags_.size();
      }
      /**
       * <code>repeated string tags = 3;</code>
       */
      public java.lang.String getTags(int index) {
        return tags_.get(index);
      }
      /**
       * <code>repeated string tags = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTagsBytes(int index) {
        return tags_.getByteString(index);
      }

      public static final int USERWEATHER_FIELD_NUMBER = 4;
      private volatile java.lang.Object userWeather_;
      /**
       * <pre>
       * user input notes on weather 
       * </pre>
       *
       * <code>string userWeather = 4;</code>
       */
      public java.lang.String getUserWeather() {
        java.lang.Object ref = userWeather_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          userWeather_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * user input notes on weather 
       * </pre>
       *
       * <code>string userWeather = 4;</code>
       */
      public com.google.protobuf.ByteString
          getUserWeatherBytes() {
        java.lang.Object ref = userWeather_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userWeather_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (feeling_ != 0) {
          output.writeInt32(1, feeling_);
        }
        if (!getNotesBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, notes_);
        }
        for (int i = 0; i < tags_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, tags_.getRaw(i));
        }
        if (!getUserWeatherBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, userWeather_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (feeling_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, feeling_);
        }
        if (!getNotesBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, notes_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < tags_.size(); i++) {
            dataSize += computeStringSizeNoTag(tags_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getTagsList().size();
        }
        if (!getUserWeatherBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, userWeather_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.UserData)) {
          return super.equals(obj);
        }
        ski.crunch.activity.model.ActivityOuterClass.Activity.UserData other = (ski.crunch.activity.model.ActivityOuterClass.Activity.UserData) obj;

        boolean result = true;
        result = result && (getFeeling()
            == other.getFeeling());
        result = result && getNotes()
            .equals(other.getNotes());
        result = result && getTagsList()
            .equals(other.getTagsList());
        result = result && getUserWeather()
            .equals(other.getUserWeather());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + FEELING_FIELD_NUMBER;
        hash = (53 * hash) + getFeeling();
        hash = (37 * hash) + NOTES_FIELD_NUMBER;
        hash = (53 * hash) + getNotes().hashCode();
        if (getTagsCount() > 0) {
          hash = (37 * hash) + TAGS_FIELD_NUMBER;
          hash = (53 * hash) + getTagsList().hashCode();
        }
        hash = (37 * hash) + USERWEATHER_FIELD_NUMBER;
        hash = (53 * hash) + getUserWeather().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(ski.crunch.activity.model.ActivityOuterClass.Activity.UserData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Activity.UserData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Activity.UserData)
          ski.crunch.activity.model.ActivityOuterClass.Activity.UserDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_UserData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_UserData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.class, ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.Builder.class);
        }

        // Construct using ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          feeling_ = 0;

          notes_ = "";

          tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          userWeather_ = "";

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_UserData_descriptor;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.UserData getDefaultInstanceForType() {
          return ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.getDefaultInstance();
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.UserData build() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.UserData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.UserData buildPartial() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.UserData result = new ski.crunch.activity.model.ActivityOuterClass.Activity.UserData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.feeling_ = feeling_;
          result.notes_ = notes_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            tags_ = tags_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.tags_ = tags_;
          result.userWeather_ = userWeather_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.UserData) {
            return mergeFrom((ski.crunch.activity.model.ActivityOuterClass.Activity.UserData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ski.crunch.activity.model.ActivityOuterClass.Activity.UserData other) {
          if (other == ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.getDefaultInstance()) return this;
          if (other.getFeeling() != 0) {
            setFeeling(other.getFeeling());
          }
          if (!other.getNotes().isEmpty()) {
            notes_ = other.notes_;
            onChanged();
          }
          if (!other.tags_.isEmpty()) {
            if (tags_.isEmpty()) {
              tags_ = other.tags_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTagsIsMutable();
              tags_.addAll(other.tags_);
            }
            onChanged();
          }
          if (!other.getUserWeather().isEmpty()) {
            userWeather_ = other.userWeather_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ski.crunch.activity.model.ActivityOuterClass.Activity.UserData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ski.crunch.activity.model.ActivityOuterClass.Activity.UserData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int feeling_ ;
        /**
         * <pre>
         *  how user feels 1 -5 star 
         * </pre>
         *
         * <code>int32 feeling = 1;</code>
         */
        public int getFeeling() {
          return feeling_;
        }
        /**
         * <pre>
         *  how user feels 1 -5 star 
         * </pre>
         *
         * <code>int32 feeling = 1;</code>
         */
        public Builder setFeeling(int value) {
          
          feeling_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         *  how user feels 1 -5 star 
         * </pre>
         *
         * <code>int32 feeling = 1;</code>
         */
        public Builder clearFeeling() {
          
          feeling_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object notes_ = "";
        /**
         * <code>string notes = 2;</code>
         */
        public java.lang.String getNotes() {
          java.lang.Object ref = notes_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            notes_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string notes = 2;</code>
         */
        public com.google.protobuf.ByteString
            getNotesBytes() {
          java.lang.Object ref = notes_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            notes_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string notes = 2;</code>
         */
        public Builder setNotes(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          notes_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string notes = 2;</code>
         */
        public Builder clearNotes() {
          
          notes_ = getDefaultInstance().getNotes();
          onChanged();
          return this;
        }
        /**
         * <code>string notes = 2;</code>
         */
        public Builder setNotesBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          notes_ = value;
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureTagsIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            tags_ = new com.google.protobuf.LazyStringArrayList(tags_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated string tags = 3;</code>
         */
        public com.google.protobuf.ProtocolStringList
            getTagsList() {
          return tags_.getUnmodifiableView();
        }
        /**
         * <code>repeated string tags = 3;</code>
         */
        public int getTagsCount() {
          return tags_.size();
        }
        /**
         * <code>repeated string tags = 3;</code>
         */
        public java.lang.String getTags(int index) {
          return tags_.get(index);
        }
        /**
         * <code>repeated string tags = 3;</code>
         */
        public com.google.protobuf.ByteString
            getTagsBytes(int index) {
          return tags_.getByteString(index);
        }
        /**
         * <code>repeated string tags = 3;</code>
         */
        public Builder setTags(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
          tags_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tags = 3;</code>
         */
        public Builder addTags(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureTagsIsMutable();
          tags_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tags = 3;</code>
         */
        public Builder addAllTags(
            java.lang.Iterable<java.lang.String> values) {
          ensureTagsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tags_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tags = 3;</code>
         */
        public Builder clearTags() {
          tags_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string tags = 3;</code>
         */
        public Builder addTagsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureTagsIsMutable();
          tags_.add(value);
          onChanged();
          return this;
        }

        private java.lang.Object userWeather_ = "";
        /**
         * <pre>
         * user input notes on weather 
         * </pre>
         *
         * <code>string userWeather = 4;</code>
         */
        public java.lang.String getUserWeather() {
          java.lang.Object ref = userWeather_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            userWeather_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * user input notes on weather 
         * </pre>
         *
         * <code>string userWeather = 4;</code>
         */
        public com.google.protobuf.ByteString
            getUserWeatherBytes() {
          java.lang.Object ref = userWeather_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            userWeather_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * user input notes on weather 
         * </pre>
         *
         * <code>string userWeather = 4;</code>
         */
        public Builder setUserWeather(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          userWeather_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * user input notes on weather 
         * </pre>
         *
         * <code>string userWeather = 4;</code>
         */
        public Builder clearUserWeather() {
          
          userWeather_ = getDefaultInstance().getUserWeather();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * user input notes on weather 
         * </pre>
         *
         * <code>string userWeather = 4;</code>
         */
        public Builder setUserWeatherBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          userWeather_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Activity.UserData)
      }

      // @@protoc_insertion_point(class_scope:Activity.UserData)
      private static final ski.crunch.activity.model.ActivityOuterClass.Activity.UserData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ski.crunch.activity.model.ActivityOuterClass.Activity.UserData();
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.UserData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<UserData>
          PARSER = new com.google.protobuf.AbstractParser<UserData>() {
        public UserData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new UserData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<UserData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<UserData> getParserForType() {
        return PARSER;
      }

      public ski.crunch.activity.model.ActivityOuterClass.Activity.UserData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface WeatherOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Activity.Weather)
        com.google.protobuf.MessageOrBuilder {
    }
    /**
     * Protobuf type {@code Activity.Weather}
     */
    public  static final class Weather extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Activity.Weather)
        WeatherOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Weather.newBuilder() to construct.
      private Weather(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Weather() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Weather(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Weather_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Weather_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.Builder.class);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Weather)) {
          return super.equals(obj);
        }
        ski.crunch.activity.model.ActivityOuterClass.Activity.Weather other = (ski.crunch.activity.model.ActivityOuterClass.Activity.Weather) obj;

        boolean result = true;
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(ski.crunch.activity.model.ActivityOuterClass.Activity.Weather prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Activity.Weather}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Activity.Weather)
          ski.crunch.activity.model.ActivityOuterClass.Activity.WeatherOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Weather_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Weather_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.Builder.class);
        }

        // Construct using ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Weather_descriptor;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Weather getDefaultInstanceForType() {
          return ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.getDefaultInstance();
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Weather build() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Weather result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Weather buildPartial() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Weather result = new ski.crunch.activity.model.ActivityOuterClass.Activity.Weather(this);
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Weather) {
            return mergeFrom((ski.crunch.activity.model.ActivityOuterClass.Activity.Weather)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ski.crunch.activity.model.ActivityOuterClass.Activity.Weather other) {
          if (other == ski.crunch.activity.model.ActivityOuterClass.Activity.Weather.getDefaultInstance()) return this;
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Weather parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ski.crunch.activity.model.ActivityOuterClass.Activity.Weather) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Activity.Weather)
      }

      // @@protoc_insertion_point(class_scope:Activity.Weather)
      private static final ski.crunch.activity.model.ActivityOuterClass.Activity.Weather DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ski.crunch.activity.model.ActivityOuterClass.Activity.Weather();
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Weather getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Weather>
          PARSER = new com.google.protobuf.AbstractParser<Weather>() {
        public Weather parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Weather(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Weather> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Weather> getParserForType() {
        return PARSER;
      }

      public ski.crunch.activity.model.ActivityOuterClass.Activity.Weather getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SummaryOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Activity.Summary)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
       */
      int getHasAttributeMapCount();
      /**
       * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
       */
      boolean containsHasAttributeMap(
          java.lang.String key);
      /**
       * Use {@link #getHasAttributeMapMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.Boolean>
      getHasAttributeMap();
      /**
       * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
       */
      java.util.Map<java.lang.String, java.lang.Boolean>
      getHasAttributeMapMap();
      /**
       * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
       */

      boolean getHasAttributeMapOrDefault(
          java.lang.String key,
          boolean defaultValue);
      /**
       * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
       */

      boolean getHasAttributeMapOrThrow(
          java.lang.String key);

      /**
       * <code>string startTs = 2;</code>
       */
      java.lang.String getStartTs();
      /**
       * <code>string startTs = 2;</code>
       */
      com.google.protobuf.ByteString
          getStartTsBytes();

      /**
       * <code>string endTs = 3;</code>
       */
      java.lang.String getEndTs();
      /**
       * <code>string endTs = 3;</code>
       */
      com.google.protobuf.ByteString
          getEndTsBytes();

      /**
       * <code>double totalElapsed = 4;</code>
       */
      double getTotalElapsed();

      /**
       * <code>double totalTimer = 5;</code>
       */
      double getTotalTimer();

      /**
       * <code>double totalMoving = 6;</code>
       */
      double getTotalMoving();

      /**
       * <code>double totalStopped = 7;</code>
       */
      double getTotalStopped();

      /**
       * <code>double totalPaused = 8;</code>
       */
      double getTotalPaused();

      /**
       * <code>double totalAscent = 9;</code>
       */
      double getTotalAscent();

      /**
       * <code>double totalDescent = 10;</code>
       */
      double getTotalDescent();

      /**
       * <code>double totalDistance = 11;</code>
       */
      double getTotalDistance();

      /**
       * <code>double totalCalories = 12;</code>
       */
      double getTotalCalories();

      /**
       * <code>int32 avgHr = 13;</code>
       */
      int getAvgHr();

      /**
       * <code>int32 maxHr = 14;</code>
       */
      int getMaxHr();

      /**
       * <code>int32 minHr = 15;</code>
       */
      int getMinHr();

      /**
       * <code>int32 avgCadence = 16;</code>
       */
      int getAvgCadence();

      /**
       * <code>int32 maxCadence = 17;</code>
       */
      int getMaxCadence();

      /**
       * <code>int32 minCadence = 18;</code>
       */
      int getMinCadence();

      /**
       * <code>int32 avgTemp = 19;</code>
       */
      int getAvgTemp();

      /**
       * <code>int32 maxTemp = 20;</code>
       */
      int getMaxTemp();

      /**
       * <code>int32 minTemp = 21;</code>
       */
      int getMinTemp();

      /**
       * <code>double avgSpeed = 22;</code>
       */
      double getAvgSpeed();

      /**
       * <code>double maxSpeed = 23;</code>
       */
      double getMaxSpeed();

      /**
       * <code>int32 minGradient = 24;</code>
       */
      int getMinGradient();

      /**
       * <code>int32 maxGradient = 25;</code>
       */
      int getMaxGradient();

      /**
       * <code>int32 avgGradient = 26;</code>
       */
      int getAvgGradient();

      /**
       * <code>int32 nLaps = 27;</code>
       */
      int getNLaps();

      /**
       * <code>map&lt;string, double&gt; hrvs = 28;</code>
       */
      int getHrvsCount();
      /**
       * <code>map&lt;string, double&gt; hrvs = 28;</code>
       */
      boolean containsHrvs(
          java.lang.String key);
      /**
       * Use {@link #getHrvsMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.Double>
      getHrvs();
      /**
       * <code>map&lt;string, double&gt; hrvs = 28;</code>
       */
      java.util.Map<java.lang.String, java.lang.Double>
      getHrvsMap();
      /**
       * <code>map&lt;string, double&gt; hrvs = 28;</code>
       */

      double getHrvsOrDefault(
          java.lang.String key,
          double defaultValue);
      /**
       * <code>map&lt;string, double&gt; hrvs = 28;</code>
       */

      double getHrvsOrThrow(
          java.lang.String key);

      /**
       * <code>double totalAscTime = 29;</code>
       */
      double getTotalAscTime();

      /**
       * <code>double totalDescTime = 30;</code>
       */
      double getTotalDescTime();

      /**
       * <code>double totalAscDist = 31;</code>
       */
      double getTotalAscDist();

      /**
       * <code>double totalDescDist = 32;</code>
       */
      double getTotalDescDist();

      /**
       * <code>double pauseDistance = 33;</code>
       */
      double getPauseDistance();

      /**
       * <code>int32 stopCount = 34;</code>
       */
      int getStopCount();

      /**
       * <code>int32 pauseCount = 35;</code>
       */
      int getPauseCount();
    }
    /**
     * Protobuf type {@code Activity.Summary}
     */
    public  static final class Summary extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Activity.Summary)
        SummaryOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Summary.newBuilder() to construct.
      private Summary(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Summary() {
        startTs_ = "";
        endTs_ = "";
        totalElapsed_ = 0D;
        totalTimer_ = 0D;
        totalMoving_ = 0D;
        totalStopped_ = 0D;
        totalPaused_ = 0D;
        totalAscent_ = 0D;
        totalDescent_ = 0D;
        totalDistance_ = 0D;
        totalCalories_ = 0D;
        avgHr_ = 0;
        maxHr_ = 0;
        minHr_ = 0;
        avgCadence_ = 0;
        maxCadence_ = 0;
        minCadence_ = 0;
        avgTemp_ = 0;
        maxTemp_ = 0;
        minTemp_ = 0;
        avgSpeed_ = 0D;
        maxSpeed_ = 0D;
        minGradient_ = 0;
        maxGradient_ = 0;
        avgGradient_ = 0;
        nLaps_ = 0;
        totalAscTime_ = 0D;
        totalDescTime_ = 0D;
        totalAscDist_ = 0D;
        totalDescDist_ = 0D;
        pauseDistance_ = 0D;
        stopCount_ = 0;
        pauseCount_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Summary(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        int mutable_bitField1_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  hasAttributeMap_ = com.google.protobuf.MapField.newMapField(
                      HasAttributeMapDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000001;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
                hasAttributeMap__ = input.readMessage(
                    HasAttributeMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                hasAttributeMap_.getMutableMap().put(
                    hasAttributeMap__.getKey(), hasAttributeMap__.getValue());
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                startTs_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                endTs_ = s;
                break;
              }
              case 33: {

                totalElapsed_ = input.readDouble();
                break;
              }
              case 41: {

                totalTimer_ = input.readDouble();
                break;
              }
              case 49: {

                totalMoving_ = input.readDouble();
                break;
              }
              case 57: {

                totalStopped_ = input.readDouble();
                break;
              }
              case 65: {

                totalPaused_ = input.readDouble();
                break;
              }
              case 73: {

                totalAscent_ = input.readDouble();
                break;
              }
              case 81: {

                totalDescent_ = input.readDouble();
                break;
              }
              case 89: {

                totalDistance_ = input.readDouble();
                break;
              }
              case 97: {

                totalCalories_ = input.readDouble();
                break;
              }
              case 104: {

                avgHr_ = input.readInt32();
                break;
              }
              case 112: {

                maxHr_ = input.readInt32();
                break;
              }
              case 120: {

                minHr_ = input.readInt32();
                break;
              }
              case 128: {

                avgCadence_ = input.readInt32();
                break;
              }
              case 136: {

                maxCadence_ = input.readInt32();
                break;
              }
              case 144: {

                minCadence_ = input.readInt32();
                break;
              }
              case 152: {

                avgTemp_ = input.readInt32();
                break;
              }
              case 160: {

                maxTemp_ = input.readInt32();
                break;
              }
              case 168: {

                minTemp_ = input.readInt32();
                break;
              }
              case 177: {

                avgSpeed_ = input.readDouble();
                break;
              }
              case 185: {

                maxSpeed_ = input.readDouble();
                break;
              }
              case 192: {

                minGradient_ = input.readInt32();
                break;
              }
              case 200: {

                maxGradient_ = input.readInt32();
                break;
              }
              case 208: {

                avgGradient_ = input.readInt32();
                break;
              }
              case 216: {

                nLaps_ = input.readInt32();
                break;
              }
              case 226: {
                if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
                  hrvs_ = com.google.protobuf.MapField.newMapField(
                      HrvsDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x08000000;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
                hrvs__ = input.readMessage(
                    HrvsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                hrvs_.getMutableMap().put(
                    hrvs__.getKey(), hrvs__.getValue());
                break;
              }
              case 233: {

                totalAscTime_ = input.readDouble();
                break;
              }
              case 241: {

                totalDescTime_ = input.readDouble();
                break;
              }
              case 249: {

                totalAscDist_ = input.readDouble();
                break;
              }
              case 257: {

                totalDescDist_ = input.readDouble();
                break;
              }
              case 265: {

                pauseDistance_ = input.readDouble();
                break;
              }
              case 272: {

                stopCount_ = input.readInt32();
                break;
              }
              case 280: {

                pauseCount_ = input.readInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Summary_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 1:
            return internalGetHasAttributeMap();
          case 28:
            return internalGetHrvs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Summary_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder.class);
      }

      private int bitField0_;
      private int bitField1_;
      public static final int HASATTRIBUTEMAP_FIELD_NUMBER = 1;
      private static final class HasAttributeMapDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.Boolean> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.Boolean>newDefaultInstance(
                    ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Summary_HasAttributeMapEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.BOOL,
                    false);
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Boolean> hasAttributeMap_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
      internalGetHasAttributeMap() {
        if (hasAttributeMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              HasAttributeMapDefaultEntryHolder.defaultEntry);
        }
        return hasAttributeMap_;
      }

      public int getHasAttributeMapCount() {
        return internalGetHasAttributeMap().getMap().size();
      }
      /**
       * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
       */

      public boolean containsHasAttributeMap(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetHasAttributeMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getHasAttributeMapMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Boolean> getHasAttributeMap() {
        return getHasAttributeMapMap();
      }
      /**
       * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Boolean> getHasAttributeMapMap() {
        return internalGetHasAttributeMap().getMap();
      }
      /**
       * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
       */

      public boolean getHasAttributeMapOrDefault(
          java.lang.String key,
          boolean defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Boolean> map =
            internalGetHasAttributeMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
       */

      public boolean getHasAttributeMapOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Boolean> map =
            internalGetHasAttributeMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public static final int STARTTS_FIELD_NUMBER = 2;
      private volatile java.lang.Object startTs_;
      /**
       * <code>string startTs = 2;</code>
       */
      public java.lang.String getStartTs() {
        java.lang.Object ref = startTs_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          startTs_ = s;
          return s;
        }
      }
      /**
       * <code>string startTs = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStartTsBytes() {
        java.lang.Object ref = startTs_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          startTs_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ENDTS_FIELD_NUMBER = 3;
      private volatile java.lang.Object endTs_;
      /**
       * <code>string endTs = 3;</code>
       */
      public java.lang.String getEndTs() {
        java.lang.Object ref = endTs_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          endTs_ = s;
          return s;
        }
      }
      /**
       * <code>string endTs = 3;</code>
       */
      public com.google.protobuf.ByteString
          getEndTsBytes() {
        java.lang.Object ref = endTs_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          endTs_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int TOTALELAPSED_FIELD_NUMBER = 4;
      private double totalElapsed_;
      /**
       * <code>double totalElapsed = 4;</code>
       */
      public double getTotalElapsed() {
        return totalElapsed_;
      }

      public static final int TOTALTIMER_FIELD_NUMBER = 5;
      private double totalTimer_;
      /**
       * <code>double totalTimer = 5;</code>
       */
      public double getTotalTimer() {
        return totalTimer_;
      }

      public static final int TOTALMOVING_FIELD_NUMBER = 6;
      private double totalMoving_;
      /**
       * <code>double totalMoving = 6;</code>
       */
      public double getTotalMoving() {
        return totalMoving_;
      }

      public static final int TOTALSTOPPED_FIELD_NUMBER = 7;
      private double totalStopped_;
      /**
       * <code>double totalStopped = 7;</code>
       */
      public double getTotalStopped() {
        return totalStopped_;
      }

      public static final int TOTALPAUSED_FIELD_NUMBER = 8;
      private double totalPaused_;
      /**
       * <code>double totalPaused = 8;</code>
       */
      public double getTotalPaused() {
        return totalPaused_;
      }

      public static final int TOTALASCENT_FIELD_NUMBER = 9;
      private double totalAscent_;
      /**
       * <code>double totalAscent = 9;</code>
       */
      public double getTotalAscent() {
        return totalAscent_;
      }

      public static final int TOTALDESCENT_FIELD_NUMBER = 10;
      private double totalDescent_;
      /**
       * <code>double totalDescent = 10;</code>
       */
      public double getTotalDescent() {
        return totalDescent_;
      }

      public static final int TOTALDISTANCE_FIELD_NUMBER = 11;
      private double totalDistance_;
      /**
       * <code>double totalDistance = 11;</code>
       */
      public double getTotalDistance() {
        return totalDistance_;
      }

      public static final int TOTALCALORIES_FIELD_NUMBER = 12;
      private double totalCalories_;
      /**
       * <code>double totalCalories = 12;</code>
       */
      public double getTotalCalories() {
        return totalCalories_;
      }

      public static final int AVGHR_FIELD_NUMBER = 13;
      private int avgHr_;
      /**
       * <code>int32 avgHr = 13;</code>
       */
      public int getAvgHr() {
        return avgHr_;
      }

      public static final int MAXHR_FIELD_NUMBER = 14;
      private int maxHr_;
      /**
       * <code>int32 maxHr = 14;</code>
       */
      public int getMaxHr() {
        return maxHr_;
      }

      public static final int MINHR_FIELD_NUMBER = 15;
      private int minHr_;
      /**
       * <code>int32 minHr = 15;</code>
       */
      public int getMinHr() {
        return minHr_;
      }

      public static final int AVGCADENCE_FIELD_NUMBER = 16;
      private int avgCadence_;
      /**
       * <code>int32 avgCadence = 16;</code>
       */
      public int getAvgCadence() {
        return avgCadence_;
      }

      public static final int MAXCADENCE_FIELD_NUMBER = 17;
      private int maxCadence_;
      /**
       * <code>int32 maxCadence = 17;</code>
       */
      public int getMaxCadence() {
        return maxCadence_;
      }

      public static final int MINCADENCE_FIELD_NUMBER = 18;
      private int minCadence_;
      /**
       * <code>int32 minCadence = 18;</code>
       */
      public int getMinCadence() {
        return minCadence_;
      }

      public static final int AVGTEMP_FIELD_NUMBER = 19;
      private int avgTemp_;
      /**
       * <code>int32 avgTemp = 19;</code>
       */
      public int getAvgTemp() {
        return avgTemp_;
      }

      public static final int MAXTEMP_FIELD_NUMBER = 20;
      private int maxTemp_;
      /**
       * <code>int32 maxTemp = 20;</code>
       */
      public int getMaxTemp() {
        return maxTemp_;
      }

      public static final int MINTEMP_FIELD_NUMBER = 21;
      private int minTemp_;
      /**
       * <code>int32 minTemp = 21;</code>
       */
      public int getMinTemp() {
        return minTemp_;
      }

      public static final int AVGSPEED_FIELD_NUMBER = 22;
      private double avgSpeed_;
      /**
       * <code>double avgSpeed = 22;</code>
       */
      public double getAvgSpeed() {
        return avgSpeed_;
      }

      public static final int MAXSPEED_FIELD_NUMBER = 23;
      private double maxSpeed_;
      /**
       * <code>double maxSpeed = 23;</code>
       */
      public double getMaxSpeed() {
        return maxSpeed_;
      }

      public static final int MINGRADIENT_FIELD_NUMBER = 24;
      private int minGradient_;
      /**
       * <code>int32 minGradient = 24;</code>
       */
      public int getMinGradient() {
        return minGradient_;
      }

      public static final int MAXGRADIENT_FIELD_NUMBER = 25;
      private int maxGradient_;
      /**
       * <code>int32 maxGradient = 25;</code>
       */
      public int getMaxGradient() {
        return maxGradient_;
      }

      public static final int AVGGRADIENT_FIELD_NUMBER = 26;
      private int avgGradient_;
      /**
       * <code>int32 avgGradient = 26;</code>
       */
      public int getAvgGradient() {
        return avgGradient_;
      }

      public static final int NLAPS_FIELD_NUMBER = 27;
      private int nLaps_;
      /**
       * <code>int32 nLaps = 27;</code>
       */
      public int getNLaps() {
        return nLaps_;
      }

      public static final int HRVS_FIELD_NUMBER = 28;
      private static final class HrvsDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.Double> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.Double>newDefaultInstance(
                    ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Summary_HrvsEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.DOUBLE,
                    0D);
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Double> hrvs_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetHrvs() {
        if (hrvs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              HrvsDefaultEntryHolder.defaultEntry);
        }
        return hrvs_;
      }

      public int getHrvsCount() {
        return internalGetHrvs().getMap().size();
      }
      /**
       * <code>map&lt;string, double&gt; hrvs = 28;</code>
       */

      public boolean containsHrvs(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetHrvs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getHrvsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getHrvs() {
        return getHrvsMap();
      }
      /**
       * <code>map&lt;string, double&gt; hrvs = 28;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Double> getHrvsMap() {
        return internalGetHrvs().getMap();
      }
      /**
       * <code>map&lt;string, double&gt; hrvs = 28;</code>
       */

      public double getHrvsOrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetHrvs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, double&gt; hrvs = 28;</code>
       */

      public double getHrvsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetHrvs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public static final int TOTALASCTIME_FIELD_NUMBER = 29;
      private double totalAscTime_;
      /**
       * <code>double totalAscTime = 29;</code>
       */
      public double getTotalAscTime() {
        return totalAscTime_;
      }

      public static final int TOTALDESCTIME_FIELD_NUMBER = 30;
      private double totalDescTime_;
      /**
       * <code>double totalDescTime = 30;</code>
       */
      public double getTotalDescTime() {
        return totalDescTime_;
      }

      public static final int TOTALASCDIST_FIELD_NUMBER = 31;
      private double totalAscDist_;
      /**
       * <code>double totalAscDist = 31;</code>
       */
      public double getTotalAscDist() {
        return totalAscDist_;
      }

      public static final int TOTALDESCDIST_FIELD_NUMBER = 32;
      private double totalDescDist_;
      /**
       * <code>double totalDescDist = 32;</code>
       */
      public double getTotalDescDist() {
        return totalDescDist_;
      }

      public static final int PAUSEDISTANCE_FIELD_NUMBER = 33;
      private double pauseDistance_;
      /**
       * <code>double pauseDistance = 33;</code>
       */
      public double getPauseDistance() {
        return pauseDistance_;
      }

      public static final int STOPCOUNT_FIELD_NUMBER = 34;
      private int stopCount_;
      /**
       * <code>int32 stopCount = 34;</code>
       */
      public int getStopCount() {
        return stopCount_;
      }

      public static final int PAUSECOUNT_FIELD_NUMBER = 35;
      private int pauseCount_;
      /**
       * <code>int32 pauseCount = 35;</code>
       */
      public int getPauseCount() {
        return pauseCount_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetHasAttributeMap(),
            HasAttributeMapDefaultEntryHolder.defaultEntry,
            1);
        if (!getStartTsBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, startTs_);
        }
        if (!getEndTsBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, endTs_);
        }
        if (totalElapsed_ != 0D) {
          output.writeDouble(4, totalElapsed_);
        }
        if (totalTimer_ != 0D) {
          output.writeDouble(5, totalTimer_);
        }
        if (totalMoving_ != 0D) {
          output.writeDouble(6, totalMoving_);
        }
        if (totalStopped_ != 0D) {
          output.writeDouble(7, totalStopped_);
        }
        if (totalPaused_ != 0D) {
          output.writeDouble(8, totalPaused_);
        }
        if (totalAscent_ != 0D) {
          output.writeDouble(9, totalAscent_);
        }
        if (totalDescent_ != 0D) {
          output.writeDouble(10, totalDescent_);
        }
        if (totalDistance_ != 0D) {
          output.writeDouble(11, totalDistance_);
        }
        if (totalCalories_ != 0D) {
          output.writeDouble(12, totalCalories_);
        }
        if (avgHr_ != 0) {
          output.writeInt32(13, avgHr_);
        }
        if (maxHr_ != 0) {
          output.writeInt32(14, maxHr_);
        }
        if (minHr_ != 0) {
          output.writeInt32(15, minHr_);
        }
        if (avgCadence_ != 0) {
          output.writeInt32(16, avgCadence_);
        }
        if (maxCadence_ != 0) {
          output.writeInt32(17, maxCadence_);
        }
        if (minCadence_ != 0) {
          output.writeInt32(18, minCadence_);
        }
        if (avgTemp_ != 0) {
          output.writeInt32(19, avgTemp_);
        }
        if (maxTemp_ != 0) {
          output.writeInt32(20, maxTemp_);
        }
        if (minTemp_ != 0) {
          output.writeInt32(21, minTemp_);
        }
        if (avgSpeed_ != 0D) {
          output.writeDouble(22, avgSpeed_);
        }
        if (maxSpeed_ != 0D) {
          output.writeDouble(23, maxSpeed_);
        }
        if (minGradient_ != 0) {
          output.writeInt32(24, minGradient_);
        }
        if (maxGradient_ != 0) {
          output.writeInt32(25, maxGradient_);
        }
        if (avgGradient_ != 0) {
          output.writeInt32(26, avgGradient_);
        }
        if (nLaps_ != 0) {
          output.writeInt32(27, nLaps_);
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetHrvs(),
            HrvsDefaultEntryHolder.defaultEntry,
            28);
        if (totalAscTime_ != 0D) {
          output.writeDouble(29, totalAscTime_);
        }
        if (totalDescTime_ != 0D) {
          output.writeDouble(30, totalDescTime_);
        }
        if (totalAscDist_ != 0D) {
          output.writeDouble(31, totalAscDist_);
        }
        if (totalDescDist_ != 0D) {
          output.writeDouble(32, totalDescDist_);
        }
        if (pauseDistance_ != 0D) {
          output.writeDouble(33, pauseDistance_);
        }
        if (stopCount_ != 0) {
          output.writeInt32(34, stopCount_);
        }
        if (pauseCount_ != 0) {
          output.writeInt32(35, pauseCount_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (java.util.Map.Entry<java.lang.String, java.lang.Boolean> entry
             : internalGetHasAttributeMap().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.Boolean>
          hasAttributeMap__ = HasAttributeMapDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, hasAttributeMap__);
        }
        if (!getStartTsBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, startTs_);
        }
        if (!getEndTsBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, endTs_);
        }
        if (totalElapsed_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(4, totalElapsed_);
        }
        if (totalTimer_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(5, totalTimer_);
        }
        if (totalMoving_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(6, totalMoving_);
        }
        if (totalStopped_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(7, totalStopped_);
        }
        if (totalPaused_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(8, totalPaused_);
        }
        if (totalAscent_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(9, totalAscent_);
        }
        if (totalDescent_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(10, totalDescent_);
        }
        if (totalDistance_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(11, totalDistance_);
        }
        if (totalCalories_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(12, totalCalories_);
        }
        if (avgHr_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(13, avgHr_);
        }
        if (maxHr_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(14, maxHr_);
        }
        if (minHr_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(15, minHr_);
        }
        if (avgCadence_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(16, avgCadence_);
        }
        if (maxCadence_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(17, maxCadence_);
        }
        if (minCadence_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(18, minCadence_);
        }
        if (avgTemp_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(19, avgTemp_);
        }
        if (maxTemp_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(20, maxTemp_);
        }
        if (minTemp_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(21, minTemp_);
        }
        if (avgSpeed_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(22, avgSpeed_);
        }
        if (maxSpeed_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(23, maxSpeed_);
        }
        if (minGradient_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(24, minGradient_);
        }
        if (maxGradient_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(25, maxGradient_);
        }
        if (avgGradient_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(26, avgGradient_);
        }
        if (nLaps_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(27, nLaps_);
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
             : internalGetHrvs().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
          hrvs__ = HrvsDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(28, hrvs__);
        }
        if (totalAscTime_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(29, totalAscTime_);
        }
        if (totalDescTime_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(30, totalDescTime_);
        }
        if (totalAscDist_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(31, totalAscDist_);
        }
        if (totalDescDist_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(32, totalDescDist_);
        }
        if (pauseDistance_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(33, pauseDistance_);
        }
        if (stopCount_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(34, stopCount_);
        }
        if (pauseCount_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(35, pauseCount_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Summary)) {
          return super.equals(obj);
        }
        ski.crunch.activity.model.ActivityOuterClass.Activity.Summary other = (ski.crunch.activity.model.ActivityOuterClass.Activity.Summary) obj;

        boolean result = true;
        result = result && internalGetHasAttributeMap().equals(
            other.internalGetHasAttributeMap());
        result = result && getStartTs()
            .equals(other.getStartTs());
        result = result && getEndTs()
            .equals(other.getEndTs());
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalElapsed())
            == java.lang.Double.doubleToLongBits(
                other.getTotalElapsed()));
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalTimer())
            == java.lang.Double.doubleToLongBits(
                other.getTotalTimer()));
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalMoving())
            == java.lang.Double.doubleToLongBits(
                other.getTotalMoving()));
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalStopped())
            == java.lang.Double.doubleToLongBits(
                other.getTotalStopped()));
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalPaused())
            == java.lang.Double.doubleToLongBits(
                other.getTotalPaused()));
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalAscent())
            == java.lang.Double.doubleToLongBits(
                other.getTotalAscent()));
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalDescent())
            == java.lang.Double.doubleToLongBits(
                other.getTotalDescent()));
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalDistance())
            == java.lang.Double.doubleToLongBits(
                other.getTotalDistance()));
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalCalories())
            == java.lang.Double.doubleToLongBits(
                other.getTotalCalories()));
        result = result && (getAvgHr()
            == other.getAvgHr());
        result = result && (getMaxHr()
            == other.getMaxHr());
        result = result && (getMinHr()
            == other.getMinHr());
        result = result && (getAvgCadence()
            == other.getAvgCadence());
        result = result && (getMaxCadence()
            == other.getMaxCadence());
        result = result && (getMinCadence()
            == other.getMinCadence());
        result = result && (getAvgTemp()
            == other.getAvgTemp());
        result = result && (getMaxTemp()
            == other.getMaxTemp());
        result = result && (getMinTemp()
            == other.getMinTemp());
        result = result && (
            java.lang.Double.doubleToLongBits(getAvgSpeed())
            == java.lang.Double.doubleToLongBits(
                other.getAvgSpeed()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMaxSpeed())
            == java.lang.Double.doubleToLongBits(
                other.getMaxSpeed()));
        result = result && (getMinGradient()
            == other.getMinGradient());
        result = result && (getMaxGradient()
            == other.getMaxGradient());
        result = result && (getAvgGradient()
            == other.getAvgGradient());
        result = result && (getNLaps()
            == other.getNLaps());
        result = result && internalGetHrvs().equals(
            other.internalGetHrvs());
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalAscTime())
            == java.lang.Double.doubleToLongBits(
                other.getTotalAscTime()));
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalDescTime())
            == java.lang.Double.doubleToLongBits(
                other.getTotalDescTime()));
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalAscDist())
            == java.lang.Double.doubleToLongBits(
                other.getTotalAscDist()));
        result = result && (
            java.lang.Double.doubleToLongBits(getTotalDescDist())
            == java.lang.Double.doubleToLongBits(
                other.getTotalDescDist()));
        result = result && (
            java.lang.Double.doubleToLongBits(getPauseDistance())
            == java.lang.Double.doubleToLongBits(
                other.getPauseDistance()));
        result = result && (getStopCount()
            == other.getStopCount());
        result = result && (getPauseCount()
            == other.getPauseCount());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (!internalGetHasAttributeMap().getMap().isEmpty()) {
          hash = (37 * hash) + HASATTRIBUTEMAP_FIELD_NUMBER;
          hash = (53 * hash) + internalGetHasAttributeMap().hashCode();
        }
        hash = (37 * hash) + STARTTS_FIELD_NUMBER;
        hash = (53 * hash) + getStartTs().hashCode();
        hash = (37 * hash) + ENDTS_FIELD_NUMBER;
        hash = (53 * hash) + getEndTs().hashCode();
        hash = (37 * hash) + TOTALELAPSED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalElapsed()));
        hash = (37 * hash) + TOTALTIMER_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalTimer()));
        hash = (37 * hash) + TOTALMOVING_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalMoving()));
        hash = (37 * hash) + TOTALSTOPPED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalStopped()));
        hash = (37 * hash) + TOTALPAUSED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalPaused()));
        hash = (37 * hash) + TOTALASCENT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalAscent()));
        hash = (37 * hash) + TOTALDESCENT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalDescent()));
        hash = (37 * hash) + TOTALDISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalDistance()));
        hash = (37 * hash) + TOTALCALORIES_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalCalories()));
        hash = (37 * hash) + AVGHR_FIELD_NUMBER;
        hash = (53 * hash) + getAvgHr();
        hash = (37 * hash) + MAXHR_FIELD_NUMBER;
        hash = (53 * hash) + getMaxHr();
        hash = (37 * hash) + MINHR_FIELD_NUMBER;
        hash = (53 * hash) + getMinHr();
        hash = (37 * hash) + AVGCADENCE_FIELD_NUMBER;
        hash = (53 * hash) + getAvgCadence();
        hash = (37 * hash) + MAXCADENCE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxCadence();
        hash = (37 * hash) + MINCADENCE_FIELD_NUMBER;
        hash = (53 * hash) + getMinCadence();
        hash = (37 * hash) + AVGTEMP_FIELD_NUMBER;
        hash = (53 * hash) + getAvgTemp();
        hash = (37 * hash) + MAXTEMP_FIELD_NUMBER;
        hash = (53 * hash) + getMaxTemp();
        hash = (37 * hash) + MINTEMP_FIELD_NUMBER;
        hash = (53 * hash) + getMinTemp();
        hash = (37 * hash) + AVGSPEED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getAvgSpeed()));
        hash = (37 * hash) + MAXSPEED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMaxSpeed()));
        hash = (37 * hash) + MINGRADIENT_FIELD_NUMBER;
        hash = (53 * hash) + getMinGradient();
        hash = (37 * hash) + MAXGRADIENT_FIELD_NUMBER;
        hash = (53 * hash) + getMaxGradient();
        hash = (37 * hash) + AVGGRADIENT_FIELD_NUMBER;
        hash = (53 * hash) + getAvgGradient();
        hash = (37 * hash) + NLAPS_FIELD_NUMBER;
        hash = (53 * hash) + getNLaps();
        if (!internalGetHrvs().getMap().isEmpty()) {
          hash = (37 * hash) + HRVS_FIELD_NUMBER;
          hash = (53 * hash) + internalGetHrvs().hashCode();
        }
        hash = (37 * hash) + TOTALASCTIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalAscTime()));
        hash = (37 * hash) + TOTALDESCTIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalDescTime()));
        hash = (37 * hash) + TOTALASCDIST_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalAscDist()));
        hash = (37 * hash) + TOTALDESCDIST_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTotalDescDist()));
        hash = (37 * hash) + PAUSEDISTANCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getPauseDistance()));
        hash = (37 * hash) + STOPCOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getStopCount();
        hash = (37 * hash) + PAUSECOUNT_FIELD_NUMBER;
        hash = (53 * hash) + getPauseCount();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(ski.crunch.activity.model.ActivityOuterClass.Activity.Summary prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Activity.Summary}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Activity.Summary)
          ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Summary_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 1:
              return internalGetHasAttributeMap();
            case 28:
              return internalGetHrvs();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 1:
              return internalGetMutableHasAttributeMap();
            case 28:
              return internalGetMutableHrvs();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Summary_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder.class);
        }

        // Construct using ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          internalGetMutableHasAttributeMap().clear();
          startTs_ = "";

          endTs_ = "";

          totalElapsed_ = 0D;

          totalTimer_ = 0D;

          totalMoving_ = 0D;

          totalStopped_ = 0D;

          totalPaused_ = 0D;

          totalAscent_ = 0D;

          totalDescent_ = 0D;

          totalDistance_ = 0D;

          totalCalories_ = 0D;

          avgHr_ = 0;

          maxHr_ = 0;

          minHr_ = 0;

          avgCadence_ = 0;

          maxCadence_ = 0;

          minCadence_ = 0;

          avgTemp_ = 0;

          maxTemp_ = 0;

          minTemp_ = 0;

          avgSpeed_ = 0D;

          maxSpeed_ = 0D;

          minGradient_ = 0;

          maxGradient_ = 0;

          avgGradient_ = 0;

          nLaps_ = 0;

          internalGetMutableHrvs().clear();
          totalAscTime_ = 0D;

          totalDescTime_ = 0D;

          totalAscDist_ = 0D;

          totalDescDist_ = 0D;

          pauseDistance_ = 0D;

          stopCount_ = 0;

          pauseCount_ = 0;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Summary_descriptor;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Summary getDefaultInstanceForType() {
          return ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.getDefaultInstance();
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Summary build() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Summary result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Summary buildPartial() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Summary result = new ski.crunch.activity.model.ActivityOuterClass.Activity.Summary(this);
          int from_bitField0_ = bitField0_;
          int from_bitField1_ = bitField1_;
          int to_bitField0_ = 0;
          int to_bitField1_ = 0;
          result.hasAttributeMap_ = internalGetHasAttributeMap();
          result.hasAttributeMap_.makeImmutable();
          result.startTs_ = startTs_;
          result.endTs_ = endTs_;
          result.totalElapsed_ = totalElapsed_;
          result.totalTimer_ = totalTimer_;
          result.totalMoving_ = totalMoving_;
          result.totalStopped_ = totalStopped_;
          result.totalPaused_ = totalPaused_;
          result.totalAscent_ = totalAscent_;
          result.totalDescent_ = totalDescent_;
          result.totalDistance_ = totalDistance_;
          result.totalCalories_ = totalCalories_;
          result.avgHr_ = avgHr_;
          result.maxHr_ = maxHr_;
          result.minHr_ = minHr_;
          result.avgCadence_ = avgCadence_;
          result.maxCadence_ = maxCadence_;
          result.minCadence_ = minCadence_;
          result.avgTemp_ = avgTemp_;
          result.maxTemp_ = maxTemp_;
          result.minTemp_ = minTemp_;
          result.avgSpeed_ = avgSpeed_;
          result.maxSpeed_ = maxSpeed_;
          result.minGradient_ = minGradient_;
          result.maxGradient_ = maxGradient_;
          result.avgGradient_ = avgGradient_;
          result.nLaps_ = nLaps_;
          result.hrvs_ = internalGetHrvs();
          result.hrvs_.makeImmutable();
          result.totalAscTime_ = totalAscTime_;
          result.totalDescTime_ = totalDescTime_;
          result.totalAscDist_ = totalAscDist_;
          result.totalDescDist_ = totalDescDist_;
          result.pauseDistance_ = pauseDistance_;
          result.stopCount_ = stopCount_;
          result.pauseCount_ = pauseCount_;
          result.bitField0_ = to_bitField0_;
          result.bitField1_ = to_bitField1_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Summary) {
            return mergeFrom((ski.crunch.activity.model.ActivityOuterClass.Activity.Summary)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ski.crunch.activity.model.ActivityOuterClass.Activity.Summary other) {
          if (other == ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.getDefaultInstance()) return this;
          internalGetMutableHasAttributeMap().mergeFrom(
              other.internalGetHasAttributeMap());
          if (!other.getStartTs().isEmpty()) {
            startTs_ = other.startTs_;
            onChanged();
          }
          if (!other.getEndTs().isEmpty()) {
            endTs_ = other.endTs_;
            onChanged();
          }
          if (other.getTotalElapsed() != 0D) {
            setTotalElapsed(other.getTotalElapsed());
          }
          if (other.getTotalTimer() != 0D) {
            setTotalTimer(other.getTotalTimer());
          }
          if (other.getTotalMoving() != 0D) {
            setTotalMoving(other.getTotalMoving());
          }
          if (other.getTotalStopped() != 0D) {
            setTotalStopped(other.getTotalStopped());
          }
          if (other.getTotalPaused() != 0D) {
            setTotalPaused(other.getTotalPaused());
          }
          if (other.getTotalAscent() != 0D) {
            setTotalAscent(other.getTotalAscent());
          }
          if (other.getTotalDescent() != 0D) {
            setTotalDescent(other.getTotalDescent());
          }
          if (other.getTotalDistance() != 0D) {
            setTotalDistance(other.getTotalDistance());
          }
          if (other.getTotalCalories() != 0D) {
            setTotalCalories(other.getTotalCalories());
          }
          if (other.getAvgHr() != 0) {
            setAvgHr(other.getAvgHr());
          }
          if (other.getMaxHr() != 0) {
            setMaxHr(other.getMaxHr());
          }
          if (other.getMinHr() != 0) {
            setMinHr(other.getMinHr());
          }
          if (other.getAvgCadence() != 0) {
            setAvgCadence(other.getAvgCadence());
          }
          if (other.getMaxCadence() != 0) {
            setMaxCadence(other.getMaxCadence());
          }
          if (other.getMinCadence() != 0) {
            setMinCadence(other.getMinCadence());
          }
          if (other.getAvgTemp() != 0) {
            setAvgTemp(other.getAvgTemp());
          }
          if (other.getMaxTemp() != 0) {
            setMaxTemp(other.getMaxTemp());
          }
          if (other.getMinTemp() != 0) {
            setMinTemp(other.getMinTemp());
          }
          if (other.getAvgSpeed() != 0D) {
            setAvgSpeed(other.getAvgSpeed());
          }
          if (other.getMaxSpeed() != 0D) {
            setMaxSpeed(other.getMaxSpeed());
          }
          if (other.getMinGradient() != 0) {
            setMinGradient(other.getMinGradient());
          }
          if (other.getMaxGradient() != 0) {
            setMaxGradient(other.getMaxGradient());
          }
          if (other.getAvgGradient() != 0) {
            setAvgGradient(other.getAvgGradient());
          }
          if (other.getNLaps() != 0) {
            setNLaps(other.getNLaps());
          }
          internalGetMutableHrvs().mergeFrom(
              other.internalGetHrvs());
          if (other.getTotalAscTime() != 0D) {
            setTotalAscTime(other.getTotalAscTime());
          }
          if (other.getTotalDescTime() != 0D) {
            setTotalDescTime(other.getTotalDescTime());
          }
          if (other.getTotalAscDist() != 0D) {
            setTotalAscDist(other.getTotalAscDist());
          }
          if (other.getTotalDescDist() != 0D) {
            setTotalDescDist(other.getTotalDescDist());
          }
          if (other.getPauseDistance() != 0D) {
            setPauseDistance(other.getPauseDistance());
          }
          if (other.getStopCount() != 0) {
            setStopCount(other.getStopCount());
          }
          if (other.getPauseCount() != 0) {
            setPauseCount(other.getPauseCount());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Summary parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ski.crunch.activity.model.ActivityOuterClass.Activity.Summary) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;
        private int bitField1_;

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.Boolean> hasAttributeMap_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
        internalGetHasAttributeMap() {
          if (hasAttributeMap_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                HasAttributeMapDefaultEntryHolder.defaultEntry);
          }
          return hasAttributeMap_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.Boolean>
        internalGetMutableHasAttributeMap() {
          onChanged();;
          if (hasAttributeMap_ == null) {
            hasAttributeMap_ = com.google.protobuf.MapField.newMapField(
                HasAttributeMapDefaultEntryHolder.defaultEntry);
          }
          if (!hasAttributeMap_.isMutable()) {
            hasAttributeMap_ = hasAttributeMap_.copy();
          }
          return hasAttributeMap_;
        }

        public int getHasAttributeMapCount() {
          return internalGetHasAttributeMap().getMap().size();
        }
        /**
         * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
         */

        public boolean containsHasAttributeMap(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetHasAttributeMap().getMap().containsKey(key);
        }
        /**
         * Use {@link #getHasAttributeMapMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Boolean> getHasAttributeMap() {
          return getHasAttributeMapMap();
        }
        /**
         * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
         */

        public java.util.Map<java.lang.String, java.lang.Boolean> getHasAttributeMapMap() {
          return internalGetHasAttributeMap().getMap();
        }
        /**
         * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
         */

        public boolean getHasAttributeMapOrDefault(
            java.lang.String key,
            boolean defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.Boolean> map =
              internalGetHasAttributeMap().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
         */

        public boolean getHasAttributeMapOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.Boolean> map =
              internalGetHasAttributeMap().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearHasAttributeMap() {
          internalGetMutableHasAttributeMap().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
         */

        public Builder removeHasAttributeMap(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableHasAttributeMap().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Boolean>
        getMutableHasAttributeMap() {
          return internalGetMutableHasAttributeMap().getMutableMap();
        }
        /**
         * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
         */
        public Builder putHasAttributeMap(
            java.lang.String key,
            boolean value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          
          internalGetMutableHasAttributeMap().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <code>map&lt;string, bool&gt; hasAttributeMap = 1;</code>
         */

        public Builder putAllHasAttributeMap(
            java.util.Map<java.lang.String, java.lang.Boolean> values) {
          internalGetMutableHasAttributeMap().getMutableMap()
              .putAll(values);
          return this;
        }

        private java.lang.Object startTs_ = "";
        /**
         * <code>string startTs = 2;</code>
         */
        public java.lang.String getStartTs() {
          java.lang.Object ref = startTs_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            startTs_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string startTs = 2;</code>
         */
        public com.google.protobuf.ByteString
            getStartTsBytes() {
          java.lang.Object ref = startTs_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            startTs_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string startTs = 2;</code>
         */
        public Builder setStartTs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          startTs_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string startTs = 2;</code>
         */
        public Builder clearStartTs() {
          
          startTs_ = getDefaultInstance().getStartTs();
          onChanged();
          return this;
        }
        /**
         * <code>string startTs = 2;</code>
         */
        public Builder setStartTsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          startTs_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object endTs_ = "";
        /**
         * <code>string endTs = 3;</code>
         */
        public java.lang.String getEndTs() {
          java.lang.Object ref = endTs_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            endTs_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string endTs = 3;</code>
         */
        public com.google.protobuf.ByteString
            getEndTsBytes() {
          java.lang.Object ref = endTs_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            endTs_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string endTs = 3;</code>
         */
        public Builder setEndTs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          endTs_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string endTs = 3;</code>
         */
        public Builder clearEndTs() {
          
          endTs_ = getDefaultInstance().getEndTs();
          onChanged();
          return this;
        }
        /**
         * <code>string endTs = 3;</code>
         */
        public Builder setEndTsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          endTs_ = value;
          onChanged();
          return this;
        }

        private double totalElapsed_ ;
        /**
         * <code>double totalElapsed = 4;</code>
         */
        public double getTotalElapsed() {
          return totalElapsed_;
        }
        /**
         * <code>double totalElapsed = 4;</code>
         */
        public Builder setTotalElapsed(double value) {
          
          totalElapsed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalElapsed = 4;</code>
         */
        public Builder clearTotalElapsed() {
          
          totalElapsed_ = 0D;
          onChanged();
          return this;
        }

        private double totalTimer_ ;
        /**
         * <code>double totalTimer = 5;</code>
         */
        public double getTotalTimer() {
          return totalTimer_;
        }
        /**
         * <code>double totalTimer = 5;</code>
         */
        public Builder setTotalTimer(double value) {
          
          totalTimer_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalTimer = 5;</code>
         */
        public Builder clearTotalTimer() {
          
          totalTimer_ = 0D;
          onChanged();
          return this;
        }

        private double totalMoving_ ;
        /**
         * <code>double totalMoving = 6;</code>
         */
        public double getTotalMoving() {
          return totalMoving_;
        }
        /**
         * <code>double totalMoving = 6;</code>
         */
        public Builder setTotalMoving(double value) {
          
          totalMoving_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalMoving = 6;</code>
         */
        public Builder clearTotalMoving() {
          
          totalMoving_ = 0D;
          onChanged();
          return this;
        }

        private double totalStopped_ ;
        /**
         * <code>double totalStopped = 7;</code>
         */
        public double getTotalStopped() {
          return totalStopped_;
        }
        /**
         * <code>double totalStopped = 7;</code>
         */
        public Builder setTotalStopped(double value) {
          
          totalStopped_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalStopped = 7;</code>
         */
        public Builder clearTotalStopped() {
          
          totalStopped_ = 0D;
          onChanged();
          return this;
        }

        private double totalPaused_ ;
        /**
         * <code>double totalPaused = 8;</code>
         */
        public double getTotalPaused() {
          return totalPaused_;
        }
        /**
         * <code>double totalPaused = 8;</code>
         */
        public Builder setTotalPaused(double value) {
          
          totalPaused_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalPaused = 8;</code>
         */
        public Builder clearTotalPaused() {
          
          totalPaused_ = 0D;
          onChanged();
          return this;
        }

        private double totalAscent_ ;
        /**
         * <code>double totalAscent = 9;</code>
         */
        public double getTotalAscent() {
          return totalAscent_;
        }
        /**
         * <code>double totalAscent = 9;</code>
         */
        public Builder setTotalAscent(double value) {
          
          totalAscent_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalAscent = 9;</code>
         */
        public Builder clearTotalAscent() {
          
          totalAscent_ = 0D;
          onChanged();
          return this;
        }

        private double totalDescent_ ;
        /**
         * <code>double totalDescent = 10;</code>
         */
        public double getTotalDescent() {
          return totalDescent_;
        }
        /**
         * <code>double totalDescent = 10;</code>
         */
        public Builder setTotalDescent(double value) {
          
          totalDescent_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalDescent = 10;</code>
         */
        public Builder clearTotalDescent() {
          
          totalDescent_ = 0D;
          onChanged();
          return this;
        }

        private double totalDistance_ ;
        /**
         * <code>double totalDistance = 11;</code>
         */
        public double getTotalDistance() {
          return totalDistance_;
        }
        /**
         * <code>double totalDistance = 11;</code>
         */
        public Builder setTotalDistance(double value) {
          
          totalDistance_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalDistance = 11;</code>
         */
        public Builder clearTotalDistance() {
          
          totalDistance_ = 0D;
          onChanged();
          return this;
        }

        private double totalCalories_ ;
        /**
         * <code>double totalCalories = 12;</code>
         */
        public double getTotalCalories() {
          return totalCalories_;
        }
        /**
         * <code>double totalCalories = 12;</code>
         */
        public Builder setTotalCalories(double value) {
          
          totalCalories_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalCalories = 12;</code>
         */
        public Builder clearTotalCalories() {
          
          totalCalories_ = 0D;
          onChanged();
          return this;
        }

        private int avgHr_ ;
        /**
         * <code>int32 avgHr = 13;</code>
         */
        public int getAvgHr() {
          return avgHr_;
        }
        /**
         * <code>int32 avgHr = 13;</code>
         */
        public Builder setAvgHr(int value) {
          
          avgHr_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 avgHr = 13;</code>
         */
        public Builder clearAvgHr() {
          
          avgHr_ = 0;
          onChanged();
          return this;
        }

        private int maxHr_ ;
        /**
         * <code>int32 maxHr = 14;</code>
         */
        public int getMaxHr() {
          return maxHr_;
        }
        /**
         * <code>int32 maxHr = 14;</code>
         */
        public Builder setMaxHr(int value) {
          
          maxHr_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 maxHr = 14;</code>
         */
        public Builder clearMaxHr() {
          
          maxHr_ = 0;
          onChanged();
          return this;
        }

        private int minHr_ ;
        /**
         * <code>int32 minHr = 15;</code>
         */
        public int getMinHr() {
          return minHr_;
        }
        /**
         * <code>int32 minHr = 15;</code>
         */
        public Builder setMinHr(int value) {
          
          minHr_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 minHr = 15;</code>
         */
        public Builder clearMinHr() {
          
          minHr_ = 0;
          onChanged();
          return this;
        }

        private int avgCadence_ ;
        /**
         * <code>int32 avgCadence = 16;</code>
         */
        public int getAvgCadence() {
          return avgCadence_;
        }
        /**
         * <code>int32 avgCadence = 16;</code>
         */
        public Builder setAvgCadence(int value) {
          
          avgCadence_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 avgCadence = 16;</code>
         */
        public Builder clearAvgCadence() {
          
          avgCadence_ = 0;
          onChanged();
          return this;
        }

        private int maxCadence_ ;
        /**
         * <code>int32 maxCadence = 17;</code>
         */
        public int getMaxCadence() {
          return maxCadence_;
        }
        /**
         * <code>int32 maxCadence = 17;</code>
         */
        public Builder setMaxCadence(int value) {
          
          maxCadence_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 maxCadence = 17;</code>
         */
        public Builder clearMaxCadence() {
          
          maxCadence_ = 0;
          onChanged();
          return this;
        }

        private int minCadence_ ;
        /**
         * <code>int32 minCadence = 18;</code>
         */
        public int getMinCadence() {
          return minCadence_;
        }
        /**
         * <code>int32 minCadence = 18;</code>
         */
        public Builder setMinCadence(int value) {
          
          minCadence_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 minCadence = 18;</code>
         */
        public Builder clearMinCadence() {
          
          minCadence_ = 0;
          onChanged();
          return this;
        }

        private int avgTemp_ ;
        /**
         * <code>int32 avgTemp = 19;</code>
         */
        public int getAvgTemp() {
          return avgTemp_;
        }
        /**
         * <code>int32 avgTemp = 19;</code>
         */
        public Builder setAvgTemp(int value) {
          
          avgTemp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 avgTemp = 19;</code>
         */
        public Builder clearAvgTemp() {
          
          avgTemp_ = 0;
          onChanged();
          return this;
        }

        private int maxTemp_ ;
        /**
         * <code>int32 maxTemp = 20;</code>
         */
        public int getMaxTemp() {
          return maxTemp_;
        }
        /**
         * <code>int32 maxTemp = 20;</code>
         */
        public Builder setMaxTemp(int value) {
          
          maxTemp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 maxTemp = 20;</code>
         */
        public Builder clearMaxTemp() {
          
          maxTemp_ = 0;
          onChanged();
          return this;
        }

        private int minTemp_ ;
        /**
         * <code>int32 minTemp = 21;</code>
         */
        public int getMinTemp() {
          return minTemp_;
        }
        /**
         * <code>int32 minTemp = 21;</code>
         */
        public Builder setMinTemp(int value) {
          
          minTemp_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 minTemp = 21;</code>
         */
        public Builder clearMinTemp() {
          
          minTemp_ = 0;
          onChanged();
          return this;
        }

        private double avgSpeed_ ;
        /**
         * <code>double avgSpeed = 22;</code>
         */
        public double getAvgSpeed() {
          return avgSpeed_;
        }
        /**
         * <code>double avgSpeed = 22;</code>
         */
        public Builder setAvgSpeed(double value) {
          
          avgSpeed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double avgSpeed = 22;</code>
         */
        public Builder clearAvgSpeed() {
          
          avgSpeed_ = 0D;
          onChanged();
          return this;
        }

        private double maxSpeed_ ;
        /**
         * <code>double maxSpeed = 23;</code>
         */
        public double getMaxSpeed() {
          return maxSpeed_;
        }
        /**
         * <code>double maxSpeed = 23;</code>
         */
        public Builder setMaxSpeed(double value) {
          
          maxSpeed_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double maxSpeed = 23;</code>
         */
        public Builder clearMaxSpeed() {
          
          maxSpeed_ = 0D;
          onChanged();
          return this;
        }

        private int minGradient_ ;
        /**
         * <code>int32 minGradient = 24;</code>
         */
        public int getMinGradient() {
          return minGradient_;
        }
        /**
         * <code>int32 minGradient = 24;</code>
         */
        public Builder setMinGradient(int value) {
          
          minGradient_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 minGradient = 24;</code>
         */
        public Builder clearMinGradient() {
          
          minGradient_ = 0;
          onChanged();
          return this;
        }

        private int maxGradient_ ;
        /**
         * <code>int32 maxGradient = 25;</code>
         */
        public int getMaxGradient() {
          return maxGradient_;
        }
        /**
         * <code>int32 maxGradient = 25;</code>
         */
        public Builder setMaxGradient(int value) {
          
          maxGradient_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 maxGradient = 25;</code>
         */
        public Builder clearMaxGradient() {
          
          maxGradient_ = 0;
          onChanged();
          return this;
        }

        private int avgGradient_ ;
        /**
         * <code>int32 avgGradient = 26;</code>
         */
        public int getAvgGradient() {
          return avgGradient_;
        }
        /**
         * <code>int32 avgGradient = 26;</code>
         */
        public Builder setAvgGradient(int value) {
          
          avgGradient_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 avgGradient = 26;</code>
         */
        public Builder clearAvgGradient() {
          
          avgGradient_ = 0;
          onChanged();
          return this;
        }

        private int nLaps_ ;
        /**
         * <code>int32 nLaps = 27;</code>
         */
        public int getNLaps() {
          return nLaps_;
        }
        /**
         * <code>int32 nLaps = 27;</code>
         */
        public Builder setNLaps(int value) {
          
          nLaps_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 nLaps = 27;</code>
         */
        public Builder clearNLaps() {
          
          nLaps_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.Double> hrvs_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
        internalGetHrvs() {
          if (hrvs_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                HrvsDefaultEntryHolder.defaultEntry);
          }
          return hrvs_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
        internalGetMutableHrvs() {
          onChanged();;
          if (hrvs_ == null) {
            hrvs_ = com.google.protobuf.MapField.newMapField(
                HrvsDefaultEntryHolder.defaultEntry);
          }
          if (!hrvs_.isMutable()) {
            hrvs_ = hrvs_.copy();
          }
          return hrvs_;
        }

        public int getHrvsCount() {
          return internalGetHrvs().getMap().size();
        }
        /**
         * <code>map&lt;string, double&gt; hrvs = 28;</code>
         */

        public boolean containsHrvs(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetHrvs().getMap().containsKey(key);
        }
        /**
         * Use {@link #getHrvsMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Double> getHrvs() {
          return getHrvsMap();
        }
        /**
         * <code>map&lt;string, double&gt; hrvs = 28;</code>
         */

        public java.util.Map<java.lang.String, java.lang.Double> getHrvsMap() {
          return internalGetHrvs().getMap();
        }
        /**
         * <code>map&lt;string, double&gt; hrvs = 28;</code>
         */

        public double getHrvsOrDefault(
            java.lang.String key,
            double defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.Double> map =
              internalGetHrvs().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <code>map&lt;string, double&gt; hrvs = 28;</code>
         */

        public double getHrvsOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.Double> map =
              internalGetHrvs().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearHrvs() {
          internalGetMutableHrvs().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <code>map&lt;string, double&gt; hrvs = 28;</code>
         */

        public Builder removeHrvs(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableHrvs().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Double>
        getMutableHrvs() {
          return internalGetMutableHrvs().getMutableMap();
        }
        /**
         * <code>map&lt;string, double&gt; hrvs = 28;</code>
         */
        public Builder putHrvs(
            java.lang.String key,
            double value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          
          internalGetMutableHrvs().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <code>map&lt;string, double&gt; hrvs = 28;</code>
         */

        public Builder putAllHrvs(
            java.util.Map<java.lang.String, java.lang.Double> values) {
          internalGetMutableHrvs().getMutableMap()
              .putAll(values);
          return this;
        }

        private double totalAscTime_ ;
        /**
         * <code>double totalAscTime = 29;</code>
         */
        public double getTotalAscTime() {
          return totalAscTime_;
        }
        /**
         * <code>double totalAscTime = 29;</code>
         */
        public Builder setTotalAscTime(double value) {
          
          totalAscTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalAscTime = 29;</code>
         */
        public Builder clearTotalAscTime() {
          
          totalAscTime_ = 0D;
          onChanged();
          return this;
        }

        private double totalDescTime_ ;
        /**
         * <code>double totalDescTime = 30;</code>
         */
        public double getTotalDescTime() {
          return totalDescTime_;
        }
        /**
         * <code>double totalDescTime = 30;</code>
         */
        public Builder setTotalDescTime(double value) {
          
          totalDescTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalDescTime = 30;</code>
         */
        public Builder clearTotalDescTime() {
          
          totalDescTime_ = 0D;
          onChanged();
          return this;
        }

        private double totalAscDist_ ;
        /**
         * <code>double totalAscDist = 31;</code>
         */
        public double getTotalAscDist() {
          return totalAscDist_;
        }
        /**
         * <code>double totalAscDist = 31;</code>
         */
        public Builder setTotalAscDist(double value) {
          
          totalAscDist_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalAscDist = 31;</code>
         */
        public Builder clearTotalAscDist() {
          
          totalAscDist_ = 0D;
          onChanged();
          return this;
        }

        private double totalDescDist_ ;
        /**
         * <code>double totalDescDist = 32;</code>
         */
        public double getTotalDescDist() {
          return totalDescDist_;
        }
        /**
         * <code>double totalDescDist = 32;</code>
         */
        public Builder setTotalDescDist(double value) {
          
          totalDescDist_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double totalDescDist = 32;</code>
         */
        public Builder clearTotalDescDist() {
          
          totalDescDist_ = 0D;
          onChanged();
          return this;
        }

        private double pauseDistance_ ;
        /**
         * <code>double pauseDistance = 33;</code>
         */
        public double getPauseDistance() {
          return pauseDistance_;
        }
        /**
         * <code>double pauseDistance = 33;</code>
         */
        public Builder setPauseDistance(double value) {
          
          pauseDistance_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double pauseDistance = 33;</code>
         */
        public Builder clearPauseDistance() {
          
          pauseDistance_ = 0D;
          onChanged();
          return this;
        }

        private int stopCount_ ;
        /**
         * <code>int32 stopCount = 34;</code>
         */
        public int getStopCount() {
          return stopCount_;
        }
        /**
         * <code>int32 stopCount = 34;</code>
         */
        public Builder setStopCount(int value) {
          
          stopCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 stopCount = 34;</code>
         */
        public Builder clearStopCount() {
          
          stopCount_ = 0;
          onChanged();
          return this;
        }

        private int pauseCount_ ;
        /**
         * <code>int32 pauseCount = 35;</code>
         */
        public int getPauseCount() {
          return pauseCount_;
        }
        /**
         * <code>int32 pauseCount = 35;</code>
         */
        public Builder setPauseCount(int value) {
          
          pauseCount_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 pauseCount = 35;</code>
         */
        public Builder clearPauseCount() {
          
          pauseCount_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Activity.Summary)
      }

      // @@protoc_insertion_point(class_scope:Activity.Summary)
      private static final ski.crunch.activity.model.ActivityOuterClass.Activity.Summary DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ski.crunch.activity.model.ActivityOuterClass.Activity.Summary();
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Summary getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Summary>
          PARSER = new com.google.protobuf.AbstractParser<Summary>() {
        public Summary parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Summary(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Summary> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Summary> getParserForType() {
        return PARSER;
      }

      public ski.crunch.activity.model.ActivityOuterClass.Activity.Summary getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SessionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Activity.Session)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.Activity.Sport sport = 1;</code>
       */
      int getSportValue();
      /**
       * <code>.Activity.Sport sport = 1;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.Sport getSport();

      /**
       * <code>.Activity.SubSport subSport = 2;</code>
       */
      int getSubSportValue();
      /**
       * <code>.Activity.SubSport subSport = 2;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport getSubSport();

      /**
       * <code>.Activity.Segment segment = 3;</code>
       */
      boolean hasSegment();
      /**
       * <code>.Activity.Segment segment = 3;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getSegment();
      /**
       * <code>.Activity.Segment segment = 3;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getSegmentOrBuilder();

      /**
       * <code>.Activity.Summary summary = 4;</code>
       */
      boolean hasSummary();
      /**
       * <code>.Activity.Summary summary = 4;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.Summary getSummary();
      /**
       * <code>.Activity.Summary summary = 4;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder getSummaryOrBuilder();
    }
    /**
     * Protobuf type {@code Activity.Session}
     */
    public  static final class Session extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Activity.Session)
        SessionOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Session.newBuilder() to construct.
      private Session(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Session() {
        sport_ = 0;
        subSport_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Session(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                int rawValue = input.readEnum();

                sport_ = rawValue;
                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                subSport_ = rawValue;
                break;
              }
              case 26: {
                ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder subBuilder = null;
                if (segment_ != null) {
                  subBuilder = segment_.toBuilder();
                }
                segment_ = input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(segment_);
                  segment_ = subBuilder.buildPartial();
                }

                break;
              }
              case 34: {
                ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder subBuilder = null;
                if (summary_ != null) {
                  subBuilder = summary_.toBuilder();
                }
                summary_ = input.readMessage(ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(summary_);
                  summary_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Session_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Session_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ski.crunch.activity.model.ActivityOuterClass.Activity.Session.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder.class);
      }

      public static final int SPORT_FIELD_NUMBER = 1;
      private int sport_;
      /**
       * <code>.Activity.Sport sport = 1;</code>
       */
      public int getSportValue() {
        return sport_;
      }
      /**
       * <code>.Activity.Sport sport = 1;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Sport getSport() {
        ski.crunch.activity.model.ActivityOuterClass.Activity.Sport result = ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.valueOf(sport_);
        return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.UNRECOGNIZED : result;
      }

      public static final int SUBSPORT_FIELD_NUMBER = 2;
      private int subSport_;
      /**
       * <code>.Activity.SubSport subSport = 2;</code>
       */
      public int getSubSportValue() {
        return subSport_;
      }
      /**
       * <code>.Activity.SubSport subSport = 2;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport getSubSport() {
        ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport result = ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.valueOf(subSport_);
        return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.UNRECOGNIZED : result;
      }

      public static final int SEGMENT_FIELD_NUMBER = 3;
      private ski.crunch.activity.model.ActivityOuterClass.Activity.Segment segment_;
      /**
       * <code>.Activity.Segment segment = 3;</code>
       */
      public boolean hasSegment() {
        return segment_ != null;
      }
      /**
       * <code>.Activity.Segment segment = 3;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getSegment() {
        return segment_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.getDefaultInstance() : segment_;
      }
      /**
       * <code>.Activity.Segment segment = 3;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getSegmentOrBuilder() {
        return getSegment();
      }

      public static final int SUMMARY_FIELD_NUMBER = 4;
      private ski.crunch.activity.model.ActivityOuterClass.Activity.Summary summary_;
      /**
       * <code>.Activity.Summary summary = 4;</code>
       */
      public boolean hasSummary() {
        return summary_ != null;
      }
      /**
       * <code>.Activity.Summary summary = 4;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Summary getSummary() {
        return summary_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.getDefaultInstance() : summary_;
      }
      /**
       * <code>.Activity.Summary summary = 4;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder getSummaryOrBuilder() {
        return getSummary();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sport_ != ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.GENERIC.getNumber()) {
          output.writeEnum(1, sport_);
        }
        if (subSport_ != ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.GENERIC_SUBSPORT.getNumber()) {
          output.writeEnum(2, subSport_);
        }
        if (segment_ != null) {
          output.writeMessage(3, getSegment());
        }
        if (summary_ != null) {
          output.writeMessage(4, getSummary());
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sport_ != ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.GENERIC.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, sport_);
        }
        if (subSport_ != ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.GENERIC_SUBSPORT.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, subSport_);
        }
        if (segment_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getSegment());
        }
        if (summary_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, getSummary());
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Session)) {
          return super.equals(obj);
        }
        ski.crunch.activity.model.ActivityOuterClass.Activity.Session other = (ski.crunch.activity.model.ActivityOuterClass.Activity.Session) obj;

        boolean result = true;
        result = result && sport_ == other.sport_;
        result = result && subSport_ == other.subSport_;
        result = result && (hasSegment() == other.hasSegment());
        if (hasSegment()) {
          result = result && getSegment()
              .equals(other.getSegment());
        }
        result = result && (hasSummary() == other.hasSummary());
        if (hasSummary()) {
          result = result && getSummary()
              .equals(other.getSummary());
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + SPORT_FIELD_NUMBER;
        hash = (53 * hash) + sport_;
        hash = (37 * hash) + SUBSPORT_FIELD_NUMBER;
        hash = (53 * hash) + subSport_;
        if (hasSegment()) {
          hash = (37 * hash) + SEGMENT_FIELD_NUMBER;
          hash = (53 * hash) + getSegment().hashCode();
        }
        if (hasSummary()) {
          hash = (37 * hash) + SUMMARY_FIELD_NUMBER;
          hash = (53 * hash) + getSummary().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(ski.crunch.activity.model.ActivityOuterClass.Activity.Session prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Activity.Session}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Activity.Session)
          ski.crunch.activity.model.ActivityOuterClass.Activity.SessionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Session_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Session_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ski.crunch.activity.model.ActivityOuterClass.Activity.Session.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder.class);
        }

        // Construct using ski.crunch.activity.model.ActivityOuterClass.Activity.Session.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          sport_ = 0;

          subSport_ = 0;

          if (segmentBuilder_ == null) {
            segment_ = null;
          } else {
            segment_ = null;
            segmentBuilder_ = null;
          }
          if (summaryBuilder_ == null) {
            summary_ = null;
          } else {
            summary_ = null;
            summaryBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Session_descriptor;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Session getDefaultInstanceForType() {
          return ski.crunch.activity.model.ActivityOuterClass.Activity.Session.getDefaultInstance();
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Session build() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Session result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Session buildPartial() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Session result = new ski.crunch.activity.model.ActivityOuterClass.Activity.Session(this);
          result.sport_ = sport_;
          result.subSport_ = subSport_;
          if (segmentBuilder_ == null) {
            result.segment_ = segment_;
          } else {
            result.segment_ = segmentBuilder_.build();
          }
          if (summaryBuilder_ == null) {
            result.summary_ = summary_;
          } else {
            result.summary_ = summaryBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Session) {
            return mergeFrom((ski.crunch.activity.model.ActivityOuterClass.Activity.Session)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ski.crunch.activity.model.ActivityOuterClass.Activity.Session other) {
          if (other == ski.crunch.activity.model.ActivityOuterClass.Activity.Session.getDefaultInstance()) return this;
          if (other.sport_ != 0) {
            setSportValue(other.getSportValue());
          }
          if (other.subSport_ != 0) {
            setSubSportValue(other.getSubSportValue());
          }
          if (other.hasSegment()) {
            mergeSegment(other.getSegment());
          }
          if (other.hasSummary()) {
            mergeSummary(other.getSummary());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Session parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ski.crunch.activity.model.ActivityOuterClass.Activity.Session) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int sport_ = 0;
        /**
         * <code>.Activity.Sport sport = 1;</code>
         */
        public int getSportValue() {
          return sport_;
        }
        /**
         * <code>.Activity.Sport sport = 1;</code>
         */
        public Builder setSportValue(int value) {
          sport_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.Activity.Sport sport = 1;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.Sport getSport() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Sport result = ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.valueOf(sport_);
          return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Sport.UNRECOGNIZED : result;
        }
        /**
         * <code>.Activity.Sport sport = 1;</code>
         */
        public Builder setSport(ski.crunch.activity.model.ActivityOuterClass.Activity.Sport value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          sport_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.Activity.Sport sport = 1;</code>
         */
        public Builder clearSport() {
          
          sport_ = 0;
          onChanged();
          return this;
        }

        private int subSport_ = 0;
        /**
         * <code>.Activity.SubSport subSport = 2;</code>
         */
        public int getSubSportValue() {
          return subSport_;
        }
        /**
         * <code>.Activity.SubSport subSport = 2;</code>
         */
        public Builder setSubSportValue(int value) {
          subSport_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.Activity.SubSport subSport = 2;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport getSubSport() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport result = ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.valueOf(subSport_);
          return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport.UNRECOGNIZED : result;
        }
        /**
         * <code>.Activity.SubSport subSport = 2;</code>
         */
        public Builder setSubSport(ski.crunch.activity.model.ActivityOuterClass.Activity.SubSport value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          subSport_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.Activity.SubSport subSport = 2;</code>
         */
        public Builder clearSubSport() {
          
          subSport_ = 0;
          onChanged();
          return this;
        }

        private ski.crunch.activity.model.ActivityOuterClass.Activity.Segment segment_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> segmentBuilder_;
        /**
         * <code>.Activity.Segment segment = 3;</code>
         */
        public boolean hasSegment() {
          return segmentBuilder_ != null || segment_ != null;
        }
        /**
         * <code>.Activity.Segment segment = 3;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getSegment() {
          if (segmentBuilder_ == null) {
            return segment_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.getDefaultInstance() : segment_;
          } else {
            return segmentBuilder_.getMessage();
          }
        }
        /**
         * <code>.Activity.Segment segment = 3;</code>
         */
        public Builder setSegment(ski.crunch.activity.model.ActivityOuterClass.Activity.Segment value) {
          if (segmentBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            segment_ = value;
            onChanged();
          } else {
            segmentBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.Activity.Segment segment = 3;</code>
         */
        public Builder setSegment(
            ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder builderForValue) {
          if (segmentBuilder_ == null) {
            segment_ = builderForValue.build();
            onChanged();
          } else {
            segmentBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.Activity.Segment segment = 3;</code>
         */
        public Builder mergeSegment(ski.crunch.activity.model.ActivityOuterClass.Activity.Segment value) {
          if (segmentBuilder_ == null) {
            if (segment_ != null) {
              segment_ =
                ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.newBuilder(segment_).mergeFrom(value).buildPartial();
            } else {
              segment_ = value;
            }
            onChanged();
          } else {
            segmentBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.Activity.Segment segment = 3;</code>
         */
        public Builder clearSegment() {
          if (segmentBuilder_ == null) {
            segment_ = null;
            onChanged();
          } else {
            segment_ = null;
            segmentBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.Activity.Segment segment = 3;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder getSegmentBuilder() {
          
          onChanged();
          return getSegmentFieldBuilder().getBuilder();
        }
        /**
         * <code>.Activity.Segment segment = 3;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getSegmentOrBuilder() {
          if (segmentBuilder_ != null) {
            return segmentBuilder_.getMessageOrBuilder();
          } else {
            return segment_ == null ?
                ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.getDefaultInstance() : segment_;
          }
        }
        /**
         * <code>.Activity.Segment segment = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
            getSegmentFieldBuilder() {
          if (segmentBuilder_ == null) {
            segmentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder>(
                    getSegment(),
                    getParentForChildren(),
                    isClean());
            segment_ = null;
          }
          return segmentBuilder_;
        }

        private ski.crunch.activity.model.ActivityOuterClass.Activity.Summary summary_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            ski.crunch.activity.model.ActivityOuterClass.Activity.Summary, ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder> summaryBuilder_;
        /**
         * <code>.Activity.Summary summary = 4;</code>
         */
        public boolean hasSummary() {
          return summaryBuilder_ != null || summary_ != null;
        }
        /**
         * <code>.Activity.Summary summary = 4;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.Summary getSummary() {
          if (summaryBuilder_ == null) {
            return summary_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.getDefaultInstance() : summary_;
          } else {
            return summaryBuilder_.getMessage();
          }
        }
        /**
         * <code>.Activity.Summary summary = 4;</code>
         */
        public Builder setSummary(ski.crunch.activity.model.ActivityOuterClass.Activity.Summary value) {
          if (summaryBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            summary_ = value;
            onChanged();
          } else {
            summaryBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.Activity.Summary summary = 4;</code>
         */
        public Builder setSummary(
            ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder builderForValue) {
          if (summaryBuilder_ == null) {
            summary_ = builderForValue.build();
            onChanged();
          } else {
            summaryBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.Activity.Summary summary = 4;</code>
         */
        public Builder mergeSummary(ski.crunch.activity.model.ActivityOuterClass.Activity.Summary value) {
          if (summaryBuilder_ == null) {
            if (summary_ != null) {
              summary_ =
                ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.newBuilder(summary_).mergeFrom(value).buildPartial();
            } else {
              summary_ = value;
            }
            onChanged();
          } else {
            summaryBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.Activity.Summary summary = 4;</code>
         */
        public Builder clearSummary() {
          if (summaryBuilder_ == null) {
            summary_ = null;
            onChanged();
          } else {
            summary_ = null;
            summaryBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.Activity.Summary summary = 4;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder getSummaryBuilder() {
          
          onChanged();
          return getSummaryFieldBuilder().getBuilder();
        }
        /**
         * <code>.Activity.Summary summary = 4;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder getSummaryOrBuilder() {
          if (summaryBuilder_ != null) {
            return summaryBuilder_.getMessageOrBuilder();
          } else {
            return summary_ == null ?
                ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.getDefaultInstance() : summary_;
          }
        }
        /**
         * <code>.Activity.Summary summary = 4;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            ski.crunch.activity.model.ActivityOuterClass.Activity.Summary, ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder> 
            getSummaryFieldBuilder() {
          if (summaryBuilder_ == null) {
            summaryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                ski.crunch.activity.model.ActivityOuterClass.Activity.Summary, ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder>(
                    getSummary(),
                    getParentForChildren(),
                    isClean());
            summary_ = null;
          }
          return summaryBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Activity.Session)
      }

      // @@protoc_insertion_point(class_scope:Activity.Session)
      private static final ski.crunch.activity.model.ActivityOuterClass.Activity.Session DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ski.crunch.activity.model.ActivityOuterClass.Activity.Session();
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Session getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Session>
          PARSER = new com.google.protobuf.AbstractParser<Session>() {
        public Session parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Session(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Session> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Session> getParserForType() {
        return PARSER;
      }

      public ski.crunch.activity.model.ActivityOuterClass.Activity.Session getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ValuesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Activity.Values)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated string ts = 1;</code>
       */
      java.util.List<java.lang.String>
          getTsList();
      /**
       * <code>repeated string ts = 1;</code>
       */
      int getTsCount();
      /**
       * <code>repeated string ts = 1;</code>
       */
      java.lang.String getTs(int index);
      /**
       * <code>repeated string ts = 1;</code>
       */
      com.google.protobuf.ByteString
          getTsBytes(int index);

      /**
       * <code>repeated int32 hr = 2;</code>
       */
      java.util.List<java.lang.Integer> getHrList();
      /**
       * <code>repeated int32 hr = 2;</code>
       */
      int getHrCount();
      /**
       * <code>repeated int32 hr = 2;</code>
       */
      int getHr(int index);

      /**
       * <code>repeated double lat = 3;</code>
       */
      java.util.List<java.lang.Double> getLatList();
      /**
       * <code>repeated double lat = 3;</code>
       */
      int getLatCount();
      /**
       * <code>repeated double lat = 3;</code>
       */
      double getLat(int index);

      /**
       * <code>repeated double lon = 4;</code>
       */
      java.util.List<java.lang.Double> getLonList();
      /**
       * <code>repeated double lon = 4;</code>
       */
      int getLonCount();
      /**
       * <code>repeated double lon = 4;</code>
       */
      double getLon(int index);

      /**
       * <code>repeated double speed = 5;</code>
       */
      java.util.List<java.lang.Double> getSpeedList();
      /**
       * <code>repeated double speed = 5;</code>
       */
      int getSpeedCount();
      /**
       * <code>repeated double speed = 5;</code>
       */
      double getSpeed(int index);

      /**
       * <code>repeated double altitude = 6;</code>
       */
      java.util.List<java.lang.Double> getAltitudeList();
      /**
       * <code>repeated double altitude = 6;</code>
       */
      int getAltitudeCount();
      /**
       * <code>repeated double altitude = 6;</code>
       */
      double getAltitude(int index);

      /**
       * <code>repeated double grade = 7;</code>
       */
      java.util.List<java.lang.Double> getGradeList();
      /**
       * <code>repeated double grade = 7;</code>
       */
      int getGradeCount();
      /**
       * <code>repeated double grade = 7;</code>
       */
      double getGrade(int index);

      /**
       * <code>repeated double distance = 8;</code>
       */
      java.util.List<java.lang.Double> getDistanceList();
      /**
       * <code>repeated double distance = 8;</code>
       */
      int getDistanceCount();
      /**
       * <code>repeated double distance = 8;</code>
       */
      double getDistance(int index);

      /**
       * <code>repeated double temperature = 9;</code>
       */
      java.util.List<java.lang.Double> getTemperatureList();
      /**
       * <code>repeated double temperature = 9;</code>
       */
      int getTemperatureCount();
      /**
       * <code>repeated double temperature = 9;</code>
       */
      double getTemperature(int index);

      /**
       * <code>repeated bool moving = 10;</code>
       */
      java.util.List<java.lang.Boolean> getMovingList();
      /**
       * <code>repeated bool moving = 10;</code>
       */
      int getMovingCount();
      /**
       * <code>repeated bool moving = 10;</code>
       */
      boolean getMoving(int index);

      /**
       * <code>repeated int32 cadence = 11;</code>
       */
      java.util.List<java.lang.Integer> getCadenceList();
      /**
       * <code>repeated int32 cadence = 11;</code>
       */
      int getCadenceCount();
      /**
       * <code>repeated int32 cadence = 11;</code>
       */
      int getCadence(int index);

      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>map&lt;string, double&gt; hrvs = 12;</code>
       */
      int getHrvsCount();
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>map&lt;string, double&gt; hrvs = 12;</code>
       */
      boolean containsHrvs(
          java.lang.String key);
      /**
       * Use {@link #getHrvsMap()} instead.
       */
      @java.lang.Deprecated
      java.util.Map<java.lang.String, java.lang.Double>
      getHrvs();
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>map&lt;string, double&gt; hrvs = 12;</code>
       */
      java.util.Map<java.lang.String, java.lang.Double>
      getHrvsMap();
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>map&lt;string, double&gt; hrvs = 12;</code>
       */

      double getHrvsOrDefault(
          java.lang.String key,
          double defaultValue);
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>map&lt;string, double&gt; hrvs = 12;</code>
       */

      double getHrvsOrThrow(
          java.lang.String key);

      /**
       * <code>repeated double hrv = 13;</code>
       */
      java.util.List<java.lang.Double> getHrvList();
      /**
       * <code>repeated double hrv = 13;</code>
       */
      int getHrvCount();
      /**
       * <code>repeated double hrv = 13;</code>
       */
      double getHrv(int index);

      /**
       * <code>repeated double vertical_speed = 14;</code>
       */
      java.util.List<java.lang.Double> getVerticalSpeedList();
      /**
       * <code>repeated double vertical_speed = 14;</code>
       */
      int getVerticalSpeedCount();
      /**
       * <code>repeated double vertical_speed = 14;</code>
       */
      double getVerticalSpeed(int index);
    }
    /**
     * Protobuf type {@code Activity.Values}
     */
    public  static final class Values extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Activity.Values)
        ValuesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Values.newBuilder() to construct.
      private Values(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Values() {
        ts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        hr_ = java.util.Collections.emptyList();
        lat_ = java.util.Collections.emptyList();
        lon_ = java.util.Collections.emptyList();
        speed_ = java.util.Collections.emptyList();
        altitude_ = java.util.Collections.emptyList();
        grade_ = java.util.Collections.emptyList();
        distance_ = java.util.Collections.emptyList();
        temperature_ = java.util.Collections.emptyList();
        moving_ = java.util.Collections.emptyList();
        cadence_ = java.util.Collections.emptyList();
        hrv_ = java.util.Collections.emptyList();
        verticalSpeed_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Values(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                  ts_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00000001;
                }
                ts_.add(s);
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  hr_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                hr_.add(input.readInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  hr_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  hr_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 25: {
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                  lat_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                lat_.add(input.readDouble());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                  lat_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  lat_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 33: {
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                  lon_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000008;
                }
                lon_.add(input.readDouble());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                  lon_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  lon_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 41: {
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                  speed_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000010;
                }
                speed_.add(input.readDouble());
                break;
              }
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                  speed_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  speed_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 49: {
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                  altitude_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000020;
                }
                altitude_.add(input.readDouble());
                break;
              }
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                  altitude_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000020;
                }
                while (input.getBytesUntilLimit() > 0) {
                  altitude_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 57: {
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                  grade_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000040;
                }
                grade_.add(input.readDouble());
                break;
              }
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                  grade_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000040;
                }
                while (input.getBytesUntilLimit() > 0) {
                  grade_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 65: {
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                  distance_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000080;
                }
                distance_.add(input.readDouble());
                break;
              }
              case 66: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                  distance_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000080;
                }
                while (input.getBytesUntilLimit() > 0) {
                  distance_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 73: {
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                  temperature_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000100;
                }
                temperature_.add(input.readDouble());
                break;
              }
              case 74: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                  temperature_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00000100;
                }
                while (input.getBytesUntilLimit() > 0) {
                  temperature_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 80: {
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                  moving_ = new java.util.ArrayList<java.lang.Boolean>();
                  mutable_bitField0_ |= 0x00000200;
                }
                moving_.add(input.readBool());
                break;
              }
              case 82: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                  moving_ = new java.util.ArrayList<java.lang.Boolean>();
                  mutable_bitField0_ |= 0x00000200;
                }
                while (input.getBytesUntilLimit() > 0) {
                  moving_.add(input.readBool());
                }
                input.popLimit(limit);
                break;
              }
              case 88: {
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                  cadence_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000400;
                }
                cadence_.add(input.readInt32());
                break;
              }
              case 90: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                  cadence_ = new java.util.ArrayList<java.lang.Integer>();
                  mutable_bitField0_ |= 0x00000400;
                }
                while (input.getBytesUntilLimit() > 0) {
                  cadence_.add(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 98: {
                if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                  hrvs_ = com.google.protobuf.MapField.newMapField(
                      HrvsDefaultEntryHolder.defaultEntry);
                  mutable_bitField0_ |= 0x00000800;
                }
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
                hrvs__ = input.readMessage(
                    HrvsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                hrvs_.getMutableMap().put(
                    hrvs__.getKey(), hrvs__.getValue());
                break;
              }
              case 105: {
                if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                  hrv_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00001000;
                }
                hrv_.add(input.readDouble());
                break;
              }
              case 106: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                  hrv_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00001000;
                }
                while (input.getBytesUntilLimit() > 0) {
                  hrv_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 113: {
                if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                  verticalSpeed_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00002000;
                }
                verticalSpeed_.add(input.readDouble());
                break;
              }
              case 114: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                  verticalSpeed_ = new java.util.ArrayList<java.lang.Double>();
                  mutable_bitField0_ |= 0x00002000;
                }
                while (input.getBytesUntilLimit() > 0) {
                  verticalSpeed_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
            ts_ = ts_.getUnmodifiableView();
          }
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            hr_ = java.util.Collections.unmodifiableList(hr_);
          }
          if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
            lat_ = java.util.Collections.unmodifiableList(lat_);
          }
          if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
            lon_ = java.util.Collections.unmodifiableList(lon_);
          }
          if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
            speed_ = java.util.Collections.unmodifiableList(speed_);
          }
          if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
            altitude_ = java.util.Collections.unmodifiableList(altitude_);
          }
          if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
            grade_ = java.util.Collections.unmodifiableList(grade_);
          }
          if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
            distance_ = java.util.Collections.unmodifiableList(distance_);
          }
          if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
            temperature_ = java.util.Collections.unmodifiableList(temperature_);
          }
          if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
            moving_ = java.util.Collections.unmodifiableList(moving_);
          }
          if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
            cadence_ = java.util.Collections.unmodifiableList(cadence_);
          }
          if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
            hrv_ = java.util.Collections.unmodifiableList(hrv_);
          }
          if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
            verticalSpeed_ = java.util.Collections.unmodifiableList(verticalSpeed_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Values_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 12:
            return internalGetHrvs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Values_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ski.crunch.activity.model.ActivityOuterClass.Activity.Values.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Values.Builder.class);
      }

      public static final int TS_FIELD_NUMBER = 1;
      private com.google.protobuf.LazyStringList ts_;
      /**
       * <code>repeated string ts = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getTsList() {
        return ts_;
      }
      /**
       * <code>repeated string ts = 1;</code>
       */
      public int getTsCount() {
        return ts_.size();
      }
      /**
       * <code>repeated string ts = 1;</code>
       */
      public java.lang.String getTs(int index) {
        return ts_.get(index);
      }
      /**
       * <code>repeated string ts = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTsBytes(int index) {
        return ts_.getByteString(index);
      }

      public static final int HR_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Integer> hr_;
      /**
       * <code>repeated int32 hr = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getHrList() {
        return hr_;
      }
      /**
       * <code>repeated int32 hr = 2;</code>
       */
      public int getHrCount() {
        return hr_.size();
      }
      /**
       * <code>repeated int32 hr = 2;</code>
       */
      public int getHr(int index) {
        return hr_.get(index);
      }
      private int hrMemoizedSerializedSize = -1;

      public static final int LAT_FIELD_NUMBER = 3;
      private java.util.List<java.lang.Double> lat_;
      /**
       * <code>repeated double lat = 3;</code>
       */
      public java.util.List<java.lang.Double>
          getLatList() {
        return lat_;
      }
      /**
       * <code>repeated double lat = 3;</code>
       */
      public int getLatCount() {
        return lat_.size();
      }
      /**
       * <code>repeated double lat = 3;</code>
       */
      public double getLat(int index) {
        return lat_.get(index);
      }
      private int latMemoizedSerializedSize = -1;

      public static final int LON_FIELD_NUMBER = 4;
      private java.util.List<java.lang.Double> lon_;
      /**
       * <code>repeated double lon = 4;</code>
       */
      public java.util.List<java.lang.Double>
          getLonList() {
        return lon_;
      }
      /**
       * <code>repeated double lon = 4;</code>
       */
      public int getLonCount() {
        return lon_.size();
      }
      /**
       * <code>repeated double lon = 4;</code>
       */
      public double getLon(int index) {
        return lon_.get(index);
      }
      private int lonMemoizedSerializedSize = -1;

      public static final int SPEED_FIELD_NUMBER = 5;
      private java.util.List<java.lang.Double> speed_;
      /**
       * <code>repeated double speed = 5;</code>
       */
      public java.util.List<java.lang.Double>
          getSpeedList() {
        return speed_;
      }
      /**
       * <code>repeated double speed = 5;</code>
       */
      public int getSpeedCount() {
        return speed_.size();
      }
      /**
       * <code>repeated double speed = 5;</code>
       */
      public double getSpeed(int index) {
        return speed_.get(index);
      }
      private int speedMemoizedSerializedSize = -1;

      public static final int ALTITUDE_FIELD_NUMBER = 6;
      private java.util.List<java.lang.Double> altitude_;
      /**
       * <code>repeated double altitude = 6;</code>
       */
      public java.util.List<java.lang.Double>
          getAltitudeList() {
        return altitude_;
      }
      /**
       * <code>repeated double altitude = 6;</code>
       */
      public int getAltitudeCount() {
        return altitude_.size();
      }
      /**
       * <code>repeated double altitude = 6;</code>
       */
      public double getAltitude(int index) {
        return altitude_.get(index);
      }
      private int altitudeMemoizedSerializedSize = -1;

      public static final int GRADE_FIELD_NUMBER = 7;
      private java.util.List<java.lang.Double> grade_;
      /**
       * <code>repeated double grade = 7;</code>
       */
      public java.util.List<java.lang.Double>
          getGradeList() {
        return grade_;
      }
      /**
       * <code>repeated double grade = 7;</code>
       */
      public int getGradeCount() {
        return grade_.size();
      }
      /**
       * <code>repeated double grade = 7;</code>
       */
      public double getGrade(int index) {
        return grade_.get(index);
      }
      private int gradeMemoizedSerializedSize = -1;

      public static final int DISTANCE_FIELD_NUMBER = 8;
      private java.util.List<java.lang.Double> distance_;
      /**
       * <code>repeated double distance = 8;</code>
       */
      public java.util.List<java.lang.Double>
          getDistanceList() {
        return distance_;
      }
      /**
       * <code>repeated double distance = 8;</code>
       */
      public int getDistanceCount() {
        return distance_.size();
      }
      /**
       * <code>repeated double distance = 8;</code>
       */
      public double getDistance(int index) {
        return distance_.get(index);
      }
      private int distanceMemoizedSerializedSize = -1;

      public static final int TEMPERATURE_FIELD_NUMBER = 9;
      private java.util.List<java.lang.Double> temperature_;
      /**
       * <code>repeated double temperature = 9;</code>
       */
      public java.util.List<java.lang.Double>
          getTemperatureList() {
        return temperature_;
      }
      /**
       * <code>repeated double temperature = 9;</code>
       */
      public int getTemperatureCount() {
        return temperature_.size();
      }
      /**
       * <code>repeated double temperature = 9;</code>
       */
      public double getTemperature(int index) {
        return temperature_.get(index);
      }
      private int temperatureMemoizedSerializedSize = -1;

      public static final int MOVING_FIELD_NUMBER = 10;
      private java.util.List<java.lang.Boolean> moving_;
      /**
       * <code>repeated bool moving = 10;</code>
       */
      public java.util.List<java.lang.Boolean>
          getMovingList() {
        return moving_;
      }
      /**
       * <code>repeated bool moving = 10;</code>
       */
      public int getMovingCount() {
        return moving_.size();
      }
      /**
       * <code>repeated bool moving = 10;</code>
       */
      public boolean getMoving(int index) {
        return moving_.get(index);
      }
      private int movingMemoizedSerializedSize = -1;

      public static final int CADENCE_FIELD_NUMBER = 11;
      private java.util.List<java.lang.Integer> cadence_;
      /**
       * <code>repeated int32 cadence = 11;</code>
       */
      public java.util.List<java.lang.Integer>
          getCadenceList() {
        return cadence_;
      }
      /**
       * <code>repeated int32 cadence = 11;</code>
       */
      public int getCadenceCount() {
        return cadence_.size();
      }
      /**
       * <code>repeated int32 cadence = 11;</code>
       */
      public int getCadence(int index) {
        return cadence_.get(index);
      }
      private int cadenceMemoizedSerializedSize = -1;

      public static final int HRVS_FIELD_NUMBER = 12;
      private static final class HrvsDefaultEntryHolder {
        static final com.google.protobuf.MapEntry<
            java.lang.String, java.lang.Double> defaultEntry =
                com.google.protobuf.MapEntry
                .<java.lang.String, java.lang.Double>newDefaultInstance(
                    ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Values_HrvsEntry_descriptor, 
                    com.google.protobuf.WireFormat.FieldType.STRING,
                    "",
                    com.google.protobuf.WireFormat.FieldType.DOUBLE,
                    0D);
      }
      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Double> hrvs_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
      internalGetHrvs() {
        if (hrvs_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              HrvsDefaultEntryHolder.defaultEntry);
        }
        return hrvs_;
      }

      public int getHrvsCount() {
        return internalGetHrvs().getMap().size();
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>map&lt;string, double&gt; hrvs = 12;</code>
       */

      public boolean containsHrvs(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetHrvs().getMap().containsKey(key);
      }
      /**
       * Use {@link #getHrvsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Double> getHrvs() {
        return getHrvsMap();
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>map&lt;string, double&gt; hrvs = 12;</code>
       */

      public java.util.Map<java.lang.String, java.lang.Double> getHrvsMap() {
        return internalGetHrvs().getMap();
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>map&lt;string, double&gt; hrvs = 12;</code>
       */

      public double getHrvsOrDefault(
          java.lang.String key,
          double defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetHrvs().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>map&lt;string, double&gt; hrvs = 12;</code>
       */

      public double getHrvsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.Double> map =
            internalGetHrvs().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public static final int HRV_FIELD_NUMBER = 13;
      private java.util.List<java.lang.Double> hrv_;
      /**
       * <code>repeated double hrv = 13;</code>
       */
      public java.util.List<java.lang.Double>
          getHrvList() {
        return hrv_;
      }
      /**
       * <code>repeated double hrv = 13;</code>
       */
      public int getHrvCount() {
        return hrv_.size();
      }
      /**
       * <code>repeated double hrv = 13;</code>
       */
      public double getHrv(int index) {
        return hrv_.get(index);
      }
      private int hrvMemoizedSerializedSize = -1;

      public static final int VERTICAL_SPEED_FIELD_NUMBER = 14;
      private java.util.List<java.lang.Double> verticalSpeed_;
      /**
       * <code>repeated double vertical_speed = 14;</code>
       */
      public java.util.List<java.lang.Double>
          getVerticalSpeedList() {
        return verticalSpeed_;
      }
      /**
       * <code>repeated double vertical_speed = 14;</code>
       */
      public int getVerticalSpeedCount() {
        return verticalSpeed_.size();
      }
      /**
       * <code>repeated double vertical_speed = 14;</code>
       */
      public double getVerticalSpeed(int index) {
        return verticalSpeed_.get(index);
      }
      private int verticalSpeedMemoizedSerializedSize = -1;

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        for (int i = 0; i < ts_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, ts_.getRaw(i));
        }
        if (getHrList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(hrMemoizedSerializedSize);
        }
        for (int i = 0; i < hr_.size(); i++) {
          output.writeInt32NoTag(hr_.get(i));
        }
        if (getLatList().size() > 0) {
          output.writeUInt32NoTag(26);
          output.writeUInt32NoTag(latMemoizedSerializedSize);
        }
        for (int i = 0; i < lat_.size(); i++) {
          output.writeDoubleNoTag(lat_.get(i));
        }
        if (getLonList().size() > 0) {
          output.writeUInt32NoTag(34);
          output.writeUInt32NoTag(lonMemoizedSerializedSize);
        }
        for (int i = 0; i < lon_.size(); i++) {
          output.writeDoubleNoTag(lon_.get(i));
        }
        if (getSpeedList().size() > 0) {
          output.writeUInt32NoTag(42);
          output.writeUInt32NoTag(speedMemoizedSerializedSize);
        }
        for (int i = 0; i < speed_.size(); i++) {
          output.writeDoubleNoTag(speed_.get(i));
        }
        if (getAltitudeList().size() > 0) {
          output.writeUInt32NoTag(50);
          output.writeUInt32NoTag(altitudeMemoizedSerializedSize);
        }
        for (int i = 0; i < altitude_.size(); i++) {
          output.writeDoubleNoTag(altitude_.get(i));
        }
        if (getGradeList().size() > 0) {
          output.writeUInt32NoTag(58);
          output.writeUInt32NoTag(gradeMemoizedSerializedSize);
        }
        for (int i = 0; i < grade_.size(); i++) {
          output.writeDoubleNoTag(grade_.get(i));
        }
        if (getDistanceList().size() > 0) {
          output.writeUInt32NoTag(66);
          output.writeUInt32NoTag(distanceMemoizedSerializedSize);
        }
        for (int i = 0; i < distance_.size(); i++) {
          output.writeDoubleNoTag(distance_.get(i));
        }
        if (getTemperatureList().size() > 0) {
          output.writeUInt32NoTag(74);
          output.writeUInt32NoTag(temperatureMemoizedSerializedSize);
        }
        for (int i = 0; i < temperature_.size(); i++) {
          output.writeDoubleNoTag(temperature_.get(i));
        }
        if (getMovingList().size() > 0) {
          output.writeUInt32NoTag(82);
          output.writeUInt32NoTag(movingMemoizedSerializedSize);
        }
        for (int i = 0; i < moving_.size(); i++) {
          output.writeBoolNoTag(moving_.get(i));
        }
        if (getCadenceList().size() > 0) {
          output.writeUInt32NoTag(90);
          output.writeUInt32NoTag(cadenceMemoizedSerializedSize);
        }
        for (int i = 0; i < cadence_.size(); i++) {
          output.writeInt32NoTag(cadence_.get(i));
        }
        com.google.protobuf.GeneratedMessageV3
          .serializeStringMapTo(
            output,
            internalGetHrvs(),
            HrvsDefaultEntryHolder.defaultEntry,
            12);
        if (getHrvList().size() > 0) {
          output.writeUInt32NoTag(106);
          output.writeUInt32NoTag(hrvMemoizedSerializedSize);
        }
        for (int i = 0; i < hrv_.size(); i++) {
          output.writeDoubleNoTag(hrv_.get(i));
        }
        if (getVerticalSpeedList().size() > 0) {
          output.writeUInt32NoTag(114);
          output.writeUInt32NoTag(verticalSpeedMemoizedSerializedSize);
        }
        for (int i = 0; i < verticalSpeed_.size(); i++) {
          output.writeDoubleNoTag(verticalSpeed_.get(i));
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < ts_.size(); i++) {
            dataSize += computeStringSizeNoTag(ts_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getTsList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < hr_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(hr_.get(i));
          }
          size += dataSize;
          if (!getHrList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          hrMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getLatList().size();
          size += dataSize;
          if (!getLatList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          latMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getLonList().size();
          size += dataSize;
          if (!getLonList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          lonMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getSpeedList().size();
          size += dataSize;
          if (!getSpeedList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          speedMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getAltitudeList().size();
          size += dataSize;
          if (!getAltitudeList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          altitudeMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getGradeList().size();
          size += dataSize;
          if (!getGradeList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          gradeMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getDistanceList().size();
          size += dataSize;
          if (!getDistanceList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          distanceMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getTemperatureList().size();
          size += dataSize;
          if (!getTemperatureList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          temperatureMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 1 * getMovingList().size();
          size += dataSize;
          if (!getMovingList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          movingMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < cadence_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(cadence_.get(i));
          }
          size += dataSize;
          if (!getCadenceList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          cadenceMemoizedSerializedSize = dataSize;
        }
        for (java.util.Map.Entry<java.lang.String, java.lang.Double> entry
             : internalGetHrvs().getMap().entrySet()) {
          com.google.protobuf.MapEntry<java.lang.String, java.lang.Double>
          hrvs__ = HrvsDefaultEntryHolder.defaultEntry.newBuilderForType()
              .setKey(entry.getKey())
              .setValue(entry.getValue())
              .build();
          size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(12, hrvs__);
        }
        {
          int dataSize = 0;
          dataSize = 8 * getHrvList().size();
          size += dataSize;
          if (!getHrvList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          hrvMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getVerticalSpeedList().size();
          size += dataSize;
          if (!getVerticalSpeedList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          verticalSpeedMemoizedSerializedSize = dataSize;
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Values)) {
          return super.equals(obj);
        }
        ski.crunch.activity.model.ActivityOuterClass.Activity.Values other = (ski.crunch.activity.model.ActivityOuterClass.Activity.Values) obj;

        boolean result = true;
        result = result && getTsList()
            .equals(other.getTsList());
        result = result && getHrList()
            .equals(other.getHrList());
        result = result && getLatList()
            .equals(other.getLatList());
        result = result && getLonList()
            .equals(other.getLonList());
        result = result && getSpeedList()
            .equals(other.getSpeedList());
        result = result && getAltitudeList()
            .equals(other.getAltitudeList());
        result = result && getGradeList()
            .equals(other.getGradeList());
        result = result && getDistanceList()
            .equals(other.getDistanceList());
        result = result && getTemperatureList()
            .equals(other.getTemperatureList());
        result = result && getMovingList()
            .equals(other.getMovingList());
        result = result && getCadenceList()
            .equals(other.getCadenceList());
        result = result && internalGetHrvs().equals(
            other.internalGetHrvs());
        result = result && getHrvList()
            .equals(other.getHrvList());
        result = result && getVerticalSpeedList()
            .equals(other.getVerticalSpeedList());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getTsCount() > 0) {
          hash = (37 * hash) + TS_FIELD_NUMBER;
          hash = (53 * hash) + getTsList().hashCode();
        }
        if (getHrCount() > 0) {
          hash = (37 * hash) + HR_FIELD_NUMBER;
          hash = (53 * hash) + getHrList().hashCode();
        }
        if (getLatCount() > 0) {
          hash = (37 * hash) + LAT_FIELD_NUMBER;
          hash = (53 * hash) + getLatList().hashCode();
        }
        if (getLonCount() > 0) {
          hash = (37 * hash) + LON_FIELD_NUMBER;
          hash = (53 * hash) + getLonList().hashCode();
        }
        if (getSpeedCount() > 0) {
          hash = (37 * hash) + SPEED_FIELD_NUMBER;
          hash = (53 * hash) + getSpeedList().hashCode();
        }
        if (getAltitudeCount() > 0) {
          hash = (37 * hash) + ALTITUDE_FIELD_NUMBER;
          hash = (53 * hash) + getAltitudeList().hashCode();
        }
        if (getGradeCount() > 0) {
          hash = (37 * hash) + GRADE_FIELD_NUMBER;
          hash = (53 * hash) + getGradeList().hashCode();
        }
        if (getDistanceCount() > 0) {
          hash = (37 * hash) + DISTANCE_FIELD_NUMBER;
          hash = (53 * hash) + getDistanceList().hashCode();
        }
        if (getTemperatureCount() > 0) {
          hash = (37 * hash) + TEMPERATURE_FIELD_NUMBER;
          hash = (53 * hash) + getTemperatureList().hashCode();
        }
        if (getMovingCount() > 0) {
          hash = (37 * hash) + MOVING_FIELD_NUMBER;
          hash = (53 * hash) + getMovingList().hashCode();
        }
        if (getCadenceCount() > 0) {
          hash = (37 * hash) + CADENCE_FIELD_NUMBER;
          hash = (53 * hash) + getCadenceList().hashCode();
        }
        if (!internalGetHrvs().getMap().isEmpty()) {
          hash = (37 * hash) + HRVS_FIELD_NUMBER;
          hash = (53 * hash) + internalGetHrvs().hashCode();
        }
        if (getHrvCount() > 0) {
          hash = (37 * hash) + HRV_FIELD_NUMBER;
          hash = (53 * hash) + getHrvList().hashCode();
        }
        if (getVerticalSpeedCount() > 0) {
          hash = (37 * hash) + VERTICAL_SPEED_FIELD_NUMBER;
          hash = (53 * hash) + getVerticalSpeedList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(ski.crunch.activity.model.ActivityOuterClass.Activity.Values prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Activity.Values}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Activity.Values)
          ski.crunch.activity.model.ActivityOuterClass.Activity.ValuesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Values_descriptor;
        }

        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMapField(
            int number) {
          switch (number) {
            case 12:
              return internalGetHrvs();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        @SuppressWarnings({"rawtypes"})
        protected com.google.protobuf.MapField internalGetMutableMapField(
            int number) {
          switch (number) {
            case 12:
              return internalGetMutableHrvs();
            default:
              throw new RuntimeException(
                  "Invalid map field number: " + number);
          }
        }
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Values_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ski.crunch.activity.model.ActivityOuterClass.Activity.Values.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Values.Builder.class);
        }

        // Construct using ski.crunch.activity.model.ActivityOuterClass.Activity.Values.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          ts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          hr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          lat_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          lon_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          speed_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          altitude_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          grade_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          distance_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          temperature_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          moving_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          cadence_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          internalGetMutableHrvs().clear();
          hrv_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          verticalSpeed_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Values_descriptor;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Values getDefaultInstanceForType() {
          return ski.crunch.activity.model.ActivityOuterClass.Activity.Values.getDefaultInstance();
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Values build() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Values result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Values buildPartial() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Values result = new ski.crunch.activity.model.ActivityOuterClass.Activity.Values(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            ts_ = ts_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.ts_ = ts_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            hr_ = java.util.Collections.unmodifiableList(hr_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.hr_ = hr_;
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            lat_ = java.util.Collections.unmodifiableList(lat_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.lat_ = lat_;
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            lon_ = java.util.Collections.unmodifiableList(lon_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.lon_ = lon_;
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            speed_ = java.util.Collections.unmodifiableList(speed_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.speed_ = speed_;
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            altitude_ = java.util.Collections.unmodifiableList(altitude_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.altitude_ = altitude_;
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            grade_ = java.util.Collections.unmodifiableList(grade_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.grade_ = grade_;
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            distance_ = java.util.Collections.unmodifiableList(distance_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.distance_ = distance_;
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            temperature_ = java.util.Collections.unmodifiableList(temperature_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.temperature_ = temperature_;
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            moving_ = java.util.Collections.unmodifiableList(moving_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.moving_ = moving_;
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            cadence_ = java.util.Collections.unmodifiableList(cadence_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.cadence_ = cadence_;
          result.hrvs_ = internalGetHrvs();
          result.hrvs_.makeImmutable();
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            hrv_ = java.util.Collections.unmodifiableList(hrv_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.hrv_ = hrv_;
          if (((bitField0_ & 0x00002000) == 0x00002000)) {
            verticalSpeed_ = java.util.Collections.unmodifiableList(verticalSpeed_);
            bitField0_ = (bitField0_ & ~0x00002000);
          }
          result.verticalSpeed_ = verticalSpeed_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Values) {
            return mergeFrom((ski.crunch.activity.model.ActivityOuterClass.Activity.Values)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ski.crunch.activity.model.ActivityOuterClass.Activity.Values other) {
          if (other == ski.crunch.activity.model.ActivityOuterClass.Activity.Values.getDefaultInstance()) return this;
          if (!other.ts_.isEmpty()) {
            if (ts_.isEmpty()) {
              ts_ = other.ts_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTsIsMutable();
              ts_.addAll(other.ts_);
            }
            onChanged();
          }
          if (!other.hr_.isEmpty()) {
            if (hr_.isEmpty()) {
              hr_ = other.hr_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureHrIsMutable();
              hr_.addAll(other.hr_);
            }
            onChanged();
          }
          if (!other.lat_.isEmpty()) {
            if (lat_.isEmpty()) {
              lat_ = other.lat_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureLatIsMutable();
              lat_.addAll(other.lat_);
            }
            onChanged();
          }
          if (!other.lon_.isEmpty()) {
            if (lon_.isEmpty()) {
              lon_ = other.lon_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureLonIsMutable();
              lon_.addAll(other.lon_);
            }
            onChanged();
          }
          if (!other.speed_.isEmpty()) {
            if (speed_.isEmpty()) {
              speed_ = other.speed_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSpeedIsMutable();
              speed_.addAll(other.speed_);
            }
            onChanged();
          }
          if (!other.altitude_.isEmpty()) {
            if (altitude_.isEmpty()) {
              altitude_ = other.altitude_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureAltitudeIsMutable();
              altitude_.addAll(other.altitude_);
            }
            onChanged();
          }
          if (!other.grade_.isEmpty()) {
            if (grade_.isEmpty()) {
              grade_ = other.grade_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureGradeIsMutable();
              grade_.addAll(other.grade_);
            }
            onChanged();
          }
          if (!other.distance_.isEmpty()) {
            if (distance_.isEmpty()) {
              distance_ = other.distance_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureDistanceIsMutable();
              distance_.addAll(other.distance_);
            }
            onChanged();
          }
          if (!other.temperature_.isEmpty()) {
            if (temperature_.isEmpty()) {
              temperature_ = other.temperature_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureTemperatureIsMutable();
              temperature_.addAll(other.temperature_);
            }
            onChanged();
          }
          if (!other.moving_.isEmpty()) {
            if (moving_.isEmpty()) {
              moving_ = other.moving_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureMovingIsMutable();
              moving_.addAll(other.moving_);
            }
            onChanged();
          }
          if (!other.cadence_.isEmpty()) {
            if (cadence_.isEmpty()) {
              cadence_ = other.cadence_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureCadenceIsMutable();
              cadence_.addAll(other.cadence_);
            }
            onChanged();
          }
          internalGetMutableHrvs().mergeFrom(
              other.internalGetHrvs());
          if (!other.hrv_.isEmpty()) {
            if (hrv_.isEmpty()) {
              hrv_ = other.hrv_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureHrvIsMutable();
              hrv_.addAll(other.hrv_);
            }
            onChanged();
          }
          if (!other.verticalSpeed_.isEmpty()) {
            if (verticalSpeed_.isEmpty()) {
              verticalSpeed_ = other.verticalSpeed_;
              bitField0_ = (bitField0_ & ~0x00002000);
            } else {
              ensureVerticalSpeedIsMutable();
              verticalSpeed_.addAll(other.verticalSpeed_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Values parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ski.crunch.activity.model.ActivityOuterClass.Activity.Values) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.LazyStringList ts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureTsIsMutable() {
          if (!((bitField0_ & 0x00000001) == 0x00000001)) {
            ts_ = new com.google.protobuf.LazyStringArrayList(ts_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated string ts = 1;</code>
         */
        public com.google.protobuf.ProtocolStringList
            getTsList() {
          return ts_.getUnmodifiableView();
        }
        /**
         * <code>repeated string ts = 1;</code>
         */
        public int getTsCount() {
          return ts_.size();
        }
        /**
         * <code>repeated string ts = 1;</code>
         */
        public java.lang.String getTs(int index) {
          return ts_.get(index);
        }
        /**
         * <code>repeated string ts = 1;</code>
         */
        public com.google.protobuf.ByteString
            getTsBytes(int index) {
          return ts_.getByteString(index);
        }
        /**
         * <code>repeated string ts = 1;</code>
         */
        public Builder setTs(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureTsIsMutable();
          ts_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string ts = 1;</code>
         */
        public Builder addTs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureTsIsMutable();
          ts_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string ts = 1;</code>
         */
        public Builder addAllTs(
            java.lang.Iterable<java.lang.String> values) {
          ensureTsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, ts_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string ts = 1;</code>
         */
        public Builder clearTs() {
          ts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string ts = 1;</code>
         */
        public Builder addTsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureTsIsMutable();
          ts_.add(value);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> hr_ = java.util.Collections.emptyList();
        private void ensureHrIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            hr_ = new java.util.ArrayList<java.lang.Integer>(hr_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated int32 hr = 2;</code>
         */
        public java.util.List<java.lang.Integer>
            getHrList() {
          return java.util.Collections.unmodifiableList(hr_);
        }
        /**
         * <code>repeated int32 hr = 2;</code>
         */
        public int getHrCount() {
          return hr_.size();
        }
        /**
         * <code>repeated int32 hr = 2;</code>
         */
        public int getHr(int index) {
          return hr_.get(index);
        }
        /**
         * <code>repeated int32 hr = 2;</code>
         */
        public Builder setHr(
            int index, int value) {
          ensureHrIsMutable();
          hr_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 hr = 2;</code>
         */
        public Builder addHr(int value) {
          ensureHrIsMutable();
          hr_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 hr = 2;</code>
         */
        public Builder addAllHr(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureHrIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hr_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 hr = 2;</code>
         */
        public Builder clearHr() {
          hr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> lat_ = java.util.Collections.emptyList();
        private void ensureLatIsMutable() {
          if (!((bitField0_ & 0x00000004) == 0x00000004)) {
            lat_ = new java.util.ArrayList<java.lang.Double>(lat_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated double lat = 3;</code>
         */
        public java.util.List<java.lang.Double>
            getLatList() {
          return java.util.Collections.unmodifiableList(lat_);
        }
        /**
         * <code>repeated double lat = 3;</code>
         */
        public int getLatCount() {
          return lat_.size();
        }
        /**
         * <code>repeated double lat = 3;</code>
         */
        public double getLat(int index) {
          return lat_.get(index);
        }
        /**
         * <code>repeated double lat = 3;</code>
         */
        public Builder setLat(
            int index, double value) {
          ensureLatIsMutable();
          lat_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double lat = 3;</code>
         */
        public Builder addLat(double value) {
          ensureLatIsMutable();
          lat_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double lat = 3;</code>
         */
        public Builder addAllLat(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureLatIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lat_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double lat = 3;</code>
         */
        public Builder clearLat() {
          lat_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> lon_ = java.util.Collections.emptyList();
        private void ensureLonIsMutable() {
          if (!((bitField0_ & 0x00000008) == 0x00000008)) {
            lon_ = new java.util.ArrayList<java.lang.Double>(lon_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated double lon = 4;</code>
         */
        public java.util.List<java.lang.Double>
            getLonList() {
          return java.util.Collections.unmodifiableList(lon_);
        }
        /**
         * <code>repeated double lon = 4;</code>
         */
        public int getLonCount() {
          return lon_.size();
        }
        /**
         * <code>repeated double lon = 4;</code>
         */
        public double getLon(int index) {
          return lon_.get(index);
        }
        /**
         * <code>repeated double lon = 4;</code>
         */
        public Builder setLon(
            int index, double value) {
          ensureLonIsMutable();
          lon_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double lon = 4;</code>
         */
        public Builder addLon(double value) {
          ensureLonIsMutable();
          lon_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double lon = 4;</code>
         */
        public Builder addAllLon(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureLonIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, lon_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double lon = 4;</code>
         */
        public Builder clearLon() {
          lon_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> speed_ = java.util.Collections.emptyList();
        private void ensureSpeedIsMutable() {
          if (!((bitField0_ & 0x00000010) == 0x00000010)) {
            speed_ = new java.util.ArrayList<java.lang.Double>(speed_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated double speed = 5;</code>
         */
        public java.util.List<java.lang.Double>
            getSpeedList() {
          return java.util.Collections.unmodifiableList(speed_);
        }
        /**
         * <code>repeated double speed = 5;</code>
         */
        public int getSpeedCount() {
          return speed_.size();
        }
        /**
         * <code>repeated double speed = 5;</code>
         */
        public double getSpeed(int index) {
          return speed_.get(index);
        }
        /**
         * <code>repeated double speed = 5;</code>
         */
        public Builder setSpeed(
            int index, double value) {
          ensureSpeedIsMutable();
          speed_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double speed = 5;</code>
         */
        public Builder addSpeed(double value) {
          ensureSpeedIsMutable();
          speed_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double speed = 5;</code>
         */
        public Builder addAllSpeed(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureSpeedIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, speed_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double speed = 5;</code>
         */
        public Builder clearSpeed() {
          speed_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> altitude_ = java.util.Collections.emptyList();
        private void ensureAltitudeIsMutable() {
          if (!((bitField0_ & 0x00000020) == 0x00000020)) {
            altitude_ = new java.util.ArrayList<java.lang.Double>(altitude_);
            bitField0_ |= 0x00000020;
           }
        }
        /**
         * <code>repeated double altitude = 6;</code>
         */
        public java.util.List<java.lang.Double>
            getAltitudeList() {
          return java.util.Collections.unmodifiableList(altitude_);
        }
        /**
         * <code>repeated double altitude = 6;</code>
         */
        public int getAltitudeCount() {
          return altitude_.size();
        }
        /**
         * <code>repeated double altitude = 6;</code>
         */
        public double getAltitude(int index) {
          return altitude_.get(index);
        }
        /**
         * <code>repeated double altitude = 6;</code>
         */
        public Builder setAltitude(
            int index, double value) {
          ensureAltitudeIsMutable();
          altitude_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double altitude = 6;</code>
         */
        public Builder addAltitude(double value) {
          ensureAltitudeIsMutable();
          altitude_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double altitude = 6;</code>
         */
        public Builder addAllAltitude(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureAltitudeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, altitude_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double altitude = 6;</code>
         */
        public Builder clearAltitude() {
          altitude_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> grade_ = java.util.Collections.emptyList();
        private void ensureGradeIsMutable() {
          if (!((bitField0_ & 0x00000040) == 0x00000040)) {
            grade_ = new java.util.ArrayList<java.lang.Double>(grade_);
            bitField0_ |= 0x00000040;
           }
        }
        /**
         * <code>repeated double grade = 7;</code>
         */
        public java.util.List<java.lang.Double>
            getGradeList() {
          return java.util.Collections.unmodifiableList(grade_);
        }
        /**
         * <code>repeated double grade = 7;</code>
         */
        public int getGradeCount() {
          return grade_.size();
        }
        /**
         * <code>repeated double grade = 7;</code>
         */
        public double getGrade(int index) {
          return grade_.get(index);
        }
        /**
         * <code>repeated double grade = 7;</code>
         */
        public Builder setGrade(
            int index, double value) {
          ensureGradeIsMutable();
          grade_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double grade = 7;</code>
         */
        public Builder addGrade(double value) {
          ensureGradeIsMutable();
          grade_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double grade = 7;</code>
         */
        public Builder addAllGrade(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureGradeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, grade_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double grade = 7;</code>
         */
        public Builder clearGrade() {
          grade_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> distance_ = java.util.Collections.emptyList();
        private void ensureDistanceIsMutable() {
          if (!((bitField0_ & 0x00000080) == 0x00000080)) {
            distance_ = new java.util.ArrayList<java.lang.Double>(distance_);
            bitField0_ |= 0x00000080;
           }
        }
        /**
         * <code>repeated double distance = 8;</code>
         */
        public java.util.List<java.lang.Double>
            getDistanceList() {
          return java.util.Collections.unmodifiableList(distance_);
        }
        /**
         * <code>repeated double distance = 8;</code>
         */
        public int getDistanceCount() {
          return distance_.size();
        }
        /**
         * <code>repeated double distance = 8;</code>
         */
        public double getDistance(int index) {
          return distance_.get(index);
        }
        /**
         * <code>repeated double distance = 8;</code>
         */
        public Builder setDistance(
            int index, double value) {
          ensureDistanceIsMutable();
          distance_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double distance = 8;</code>
         */
        public Builder addDistance(double value) {
          ensureDistanceIsMutable();
          distance_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double distance = 8;</code>
         */
        public Builder addAllDistance(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureDistanceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, distance_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double distance = 8;</code>
         */
        public Builder clearDistance() {
          distance_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> temperature_ = java.util.Collections.emptyList();
        private void ensureTemperatureIsMutable() {
          if (!((bitField0_ & 0x00000100) == 0x00000100)) {
            temperature_ = new java.util.ArrayList<java.lang.Double>(temperature_);
            bitField0_ |= 0x00000100;
           }
        }
        /**
         * <code>repeated double temperature = 9;</code>
         */
        public java.util.List<java.lang.Double>
            getTemperatureList() {
          return java.util.Collections.unmodifiableList(temperature_);
        }
        /**
         * <code>repeated double temperature = 9;</code>
         */
        public int getTemperatureCount() {
          return temperature_.size();
        }
        /**
         * <code>repeated double temperature = 9;</code>
         */
        public double getTemperature(int index) {
          return temperature_.get(index);
        }
        /**
         * <code>repeated double temperature = 9;</code>
         */
        public Builder setTemperature(
            int index, double value) {
          ensureTemperatureIsMutable();
          temperature_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double temperature = 9;</code>
         */
        public Builder addTemperature(double value) {
          ensureTemperatureIsMutable();
          temperature_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double temperature = 9;</code>
         */
        public Builder addAllTemperature(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureTemperatureIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, temperature_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double temperature = 9;</code>
         */
        public Builder clearTemperature() {
          temperature_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Boolean> moving_ = java.util.Collections.emptyList();
        private void ensureMovingIsMutable() {
          if (!((bitField0_ & 0x00000200) == 0x00000200)) {
            moving_ = new java.util.ArrayList<java.lang.Boolean>(moving_);
            bitField0_ |= 0x00000200;
           }
        }
        /**
         * <code>repeated bool moving = 10;</code>
         */
        public java.util.List<java.lang.Boolean>
            getMovingList() {
          return java.util.Collections.unmodifiableList(moving_);
        }
        /**
         * <code>repeated bool moving = 10;</code>
         */
        public int getMovingCount() {
          return moving_.size();
        }
        /**
         * <code>repeated bool moving = 10;</code>
         */
        public boolean getMoving(int index) {
          return moving_.get(index);
        }
        /**
         * <code>repeated bool moving = 10;</code>
         */
        public Builder setMoving(
            int index, boolean value) {
          ensureMovingIsMutable();
          moving_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool moving = 10;</code>
         */
        public Builder addMoving(boolean value) {
          ensureMovingIsMutable();
          moving_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool moving = 10;</code>
         */
        public Builder addAllMoving(
            java.lang.Iterable<? extends java.lang.Boolean> values) {
          ensureMovingIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, moving_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool moving = 10;</code>
         */
        public Builder clearMoving() {
          moving_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Integer> cadence_ = java.util.Collections.emptyList();
        private void ensureCadenceIsMutable() {
          if (!((bitField0_ & 0x00000400) == 0x00000400)) {
            cadence_ = new java.util.ArrayList<java.lang.Integer>(cadence_);
            bitField0_ |= 0x00000400;
           }
        }
        /**
         * <code>repeated int32 cadence = 11;</code>
         */
        public java.util.List<java.lang.Integer>
            getCadenceList() {
          return java.util.Collections.unmodifiableList(cadence_);
        }
        /**
         * <code>repeated int32 cadence = 11;</code>
         */
        public int getCadenceCount() {
          return cadence_.size();
        }
        /**
         * <code>repeated int32 cadence = 11;</code>
         */
        public int getCadence(int index) {
          return cadence_.get(index);
        }
        /**
         * <code>repeated int32 cadence = 11;</code>
         */
        public Builder setCadence(
            int index, int value) {
          ensureCadenceIsMutable();
          cadence_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 cadence = 11;</code>
         */
        public Builder addCadence(int value) {
          ensureCadenceIsMutable();
          cadence_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 cadence = 11;</code>
         */
        public Builder addAllCadence(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureCadenceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cadence_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 cadence = 11;</code>
         */
        public Builder clearCadence() {
          cadence_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
          return this;
        }

        private com.google.protobuf.MapField<
            java.lang.String, java.lang.Double> hrvs_;
        private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
        internalGetHrvs() {
          if (hrvs_ == null) {
            return com.google.protobuf.MapField.emptyMapField(
                HrvsDefaultEntryHolder.defaultEntry);
          }
          return hrvs_;
        }
        private com.google.protobuf.MapField<java.lang.String, java.lang.Double>
        internalGetMutableHrvs() {
          onChanged();;
          if (hrvs_ == null) {
            hrvs_ = com.google.protobuf.MapField.newMapField(
                HrvsDefaultEntryHolder.defaultEntry);
          }
          if (!hrvs_.isMutable()) {
            hrvs_ = hrvs_.copy();
          }
          return hrvs_;
        }

        public int getHrvsCount() {
          return internalGetHrvs().getMap().size();
        }
        /**
         * <pre>
         *deprecated
         * </pre>
         *
         * <code>map&lt;string, double&gt; hrvs = 12;</code>
         */

        public boolean containsHrvs(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          return internalGetHrvs().getMap().containsKey(key);
        }
        /**
         * Use {@link #getHrvsMap()} instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Double> getHrvs() {
          return getHrvsMap();
        }
        /**
         * <pre>
         *deprecated
         * </pre>
         *
         * <code>map&lt;string, double&gt; hrvs = 12;</code>
         */

        public java.util.Map<java.lang.String, java.lang.Double> getHrvsMap() {
          return internalGetHrvs().getMap();
        }
        /**
         * <pre>
         *deprecated
         * </pre>
         *
         * <code>map&lt;string, double&gt; hrvs = 12;</code>
         */

        public double getHrvsOrDefault(
            java.lang.String key,
            double defaultValue) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.Double> map =
              internalGetHrvs().getMap();
          return map.containsKey(key) ? map.get(key) : defaultValue;
        }
        /**
         * <pre>
         *deprecated
         * </pre>
         *
         * <code>map&lt;string, double&gt; hrvs = 12;</code>
         */

        public double getHrvsOrThrow(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          java.util.Map<java.lang.String, java.lang.Double> map =
              internalGetHrvs().getMap();
          if (!map.containsKey(key)) {
            throw new java.lang.IllegalArgumentException();
          }
          return map.get(key);
        }

        public Builder clearHrvs() {
          internalGetMutableHrvs().getMutableMap()
              .clear();
          return this;
        }
        /**
         * <pre>
         *deprecated
         * </pre>
         *
         * <code>map&lt;string, double&gt; hrvs = 12;</code>
         */

        public Builder removeHrvs(
            java.lang.String key) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          internalGetMutableHrvs().getMutableMap()
              .remove(key);
          return this;
        }
        /**
         * Use alternate mutation accessors instead.
         */
        @java.lang.Deprecated
        public java.util.Map<java.lang.String, java.lang.Double>
        getMutableHrvs() {
          return internalGetMutableHrvs().getMutableMap();
        }
        /**
         * <pre>
         *deprecated
         * </pre>
         *
         * <code>map&lt;string, double&gt; hrvs = 12;</code>
         */
        public Builder putHrvs(
            java.lang.String key,
            double value) {
          if (key == null) { throw new java.lang.NullPointerException(); }
          
          internalGetMutableHrvs().getMutableMap()
              .put(key, value);
          return this;
        }
        /**
         * <pre>
         *deprecated
         * </pre>
         *
         * <code>map&lt;string, double&gt; hrvs = 12;</code>
         */

        public Builder putAllHrvs(
            java.util.Map<java.lang.String, java.lang.Double> values) {
          internalGetMutableHrvs().getMutableMap()
              .putAll(values);
          return this;
        }

        private java.util.List<java.lang.Double> hrv_ = java.util.Collections.emptyList();
        private void ensureHrvIsMutable() {
          if (!((bitField0_ & 0x00001000) == 0x00001000)) {
            hrv_ = new java.util.ArrayList<java.lang.Double>(hrv_);
            bitField0_ |= 0x00001000;
           }
        }
        /**
         * <code>repeated double hrv = 13;</code>
         */
        public java.util.List<java.lang.Double>
            getHrvList() {
          return java.util.Collections.unmodifiableList(hrv_);
        }
        /**
         * <code>repeated double hrv = 13;</code>
         */
        public int getHrvCount() {
          return hrv_.size();
        }
        /**
         * <code>repeated double hrv = 13;</code>
         */
        public double getHrv(int index) {
          return hrv_.get(index);
        }
        /**
         * <code>repeated double hrv = 13;</code>
         */
        public Builder setHrv(
            int index, double value) {
          ensureHrvIsMutable();
          hrv_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double hrv = 13;</code>
         */
        public Builder addHrv(double value) {
          ensureHrvIsMutable();
          hrv_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double hrv = 13;</code>
         */
        public Builder addAllHrv(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureHrvIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, hrv_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double hrv = 13;</code>
         */
        public Builder clearHrv() {
          hrv_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> verticalSpeed_ = java.util.Collections.emptyList();
        private void ensureVerticalSpeedIsMutable() {
          if (!((bitField0_ & 0x00002000) == 0x00002000)) {
            verticalSpeed_ = new java.util.ArrayList<java.lang.Double>(verticalSpeed_);
            bitField0_ |= 0x00002000;
           }
        }
        /**
         * <code>repeated double vertical_speed = 14;</code>
         */
        public java.util.List<java.lang.Double>
            getVerticalSpeedList() {
          return java.util.Collections.unmodifiableList(verticalSpeed_);
        }
        /**
         * <code>repeated double vertical_speed = 14;</code>
         */
        public int getVerticalSpeedCount() {
          return verticalSpeed_.size();
        }
        /**
         * <code>repeated double vertical_speed = 14;</code>
         */
        public double getVerticalSpeed(int index) {
          return verticalSpeed_.get(index);
        }
        /**
         * <code>repeated double vertical_speed = 14;</code>
         */
        public Builder setVerticalSpeed(
            int index, double value) {
          ensureVerticalSpeedIsMutable();
          verticalSpeed_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double vertical_speed = 14;</code>
         */
        public Builder addVerticalSpeed(double value) {
          ensureVerticalSpeedIsMutable();
          verticalSpeed_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double vertical_speed = 14;</code>
         */
        public Builder addAllVerticalSpeed(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureVerticalSpeedIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, verticalSpeed_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double vertical_speed = 14;</code>
         */
        public Builder clearVerticalSpeed() {
          verticalSpeed_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00002000);
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Activity.Values)
      }

      // @@protoc_insertion_point(class_scope:Activity.Values)
      private static final ski.crunch.activity.model.ActivityOuterClass.Activity.Values DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ski.crunch.activity.model.ActivityOuterClass.Activity.Values();
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Values getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Values>
          PARSER = new com.google.protobuf.AbstractParser<Values>() {
        public Values parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Values(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Values> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Values> getParserForType() {
        return PARSER;
      }

      public ski.crunch.activity.model.ActivityOuterClass.Activity.Values getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface FitEventOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Activity.FitEvent)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>int32 startIdx = 1;</code>
       */
      int getStartIdx();

      /**
       * <code>int32 endIdx = 2;</code>
       */
      int getEndIdx();

      /**
       * <code>string ts = 3;</code>
       */
      java.lang.String getTs();
      /**
       * <code>string ts = 3;</code>
       */
      com.google.protobuf.ByteString
          getTsBytes();

      /**
       * <code>string startTs = 4;</code>
       */
      java.lang.String getStartTs();
      /**
       * <code>string startTs = 4;</code>
       */
      com.google.protobuf.ByteString
          getStartTsBytes();

      /**
       * <code>string event = 5;</code>
       */
      java.lang.String getEvent();
      /**
       * <code>string event = 5;</code>
       */
      com.google.protobuf.ByteString
          getEventBytes();

      /**
       * <code>.Activity.EventType eventType = 6;</code>
       */
      int getEventTypeValue();
      /**
       * <code>.Activity.EventType eventType = 6;</code>
       */
      ski.crunch.activity.model.ActivityOuterClass.Activity.EventType getEventType();

      /**
       * <code>double timerTime = 7;</code>
       */
      double getTimerTime();

      /**
       * <code>double elapsedTime = 8;</code>
       */
      double getElapsedTime();

      /**
       * <code>double movingTime = 9;</code>
       */
      double getMovingTime();

      /**
       * <code>string trigger = 10;</code>
       */
      java.lang.String getTrigger();
      /**
       * <code>string trigger = 10;</code>
       */
      com.google.protobuf.ByteString
          getTriggerBytes();
    }
    /**
     * Protobuf type {@code Activity.FitEvent}
     */
    public  static final class FitEvent extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Activity.FitEvent)
        FitEventOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use FitEvent.newBuilder() to construct.
      private FitEvent(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private FitEvent() {
        startIdx_ = 0;
        endIdx_ = 0;
        ts_ = "";
        startTs_ = "";
        event_ = "";
        eventType_ = 0;
        timerTime_ = 0D;
        elapsedTime_ = 0D;
        movingTime_ = 0D;
        trigger_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private FitEvent(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                startIdx_ = input.readInt32();
                break;
              }
              case 16: {

                endIdx_ = input.readInt32();
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                ts_ = s;
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                startTs_ = s;
                break;
              }
              case 42: {
                java.lang.String s = input.readStringRequireUtf8();

                event_ = s;
                break;
              }
              case 48: {
                int rawValue = input.readEnum();

                eventType_ = rawValue;
                break;
              }
              case 57: {

                timerTime_ = input.readDouble();
                break;
              }
              case 65: {

                elapsedTime_ = input.readDouble();
                break;
              }
              case 73: {

                movingTime_ = input.readDouble();
                break;
              }
              case 82: {
                java.lang.String s = input.readStringRequireUtf8();

                trigger_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_FitEvent_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_FitEvent_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.class, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder.class);
      }

      public static final int STARTIDX_FIELD_NUMBER = 1;
      private int startIdx_;
      /**
       * <code>int32 startIdx = 1;</code>
       */
      public int getStartIdx() {
        return startIdx_;
      }

      public static final int ENDIDX_FIELD_NUMBER = 2;
      private int endIdx_;
      /**
       * <code>int32 endIdx = 2;</code>
       */
      public int getEndIdx() {
        return endIdx_;
      }

      public static final int TS_FIELD_NUMBER = 3;
      private volatile java.lang.Object ts_;
      /**
       * <code>string ts = 3;</code>
       */
      public java.lang.String getTs() {
        java.lang.Object ref = ts_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          ts_ = s;
          return s;
        }
      }
      /**
       * <code>string ts = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTsBytes() {
        java.lang.Object ref = ts_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ts_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STARTTS_FIELD_NUMBER = 4;
      private volatile java.lang.Object startTs_;
      /**
       * <code>string startTs = 4;</code>
       */
      public java.lang.String getStartTs() {
        java.lang.Object ref = startTs_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          startTs_ = s;
          return s;
        }
      }
      /**
       * <code>string startTs = 4;</code>
       */
      public com.google.protobuf.ByteString
          getStartTsBytes() {
        java.lang.Object ref = startTs_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          startTs_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EVENT_FIELD_NUMBER = 5;
      private volatile java.lang.Object event_;
      /**
       * <code>string event = 5;</code>
       */
      public java.lang.String getEvent() {
        java.lang.Object ref = event_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          event_ = s;
          return s;
        }
      }
      /**
       * <code>string event = 5;</code>
       */
      public com.google.protobuf.ByteString
          getEventBytes() {
        java.lang.Object ref = event_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          event_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int EVENTTYPE_FIELD_NUMBER = 6;
      private int eventType_;
      /**
       * <code>.Activity.EventType eventType = 6;</code>
       */
      public int getEventTypeValue() {
        return eventType_;
      }
      /**
       * <code>.Activity.EventType eventType = 6;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.EventType getEventType() {
        ski.crunch.activity.model.ActivityOuterClass.Activity.EventType result = ski.crunch.activity.model.ActivityOuterClass.Activity.EventType.valueOf(eventType_);
        return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.EventType.UNRECOGNIZED : result;
      }

      public static final int TIMERTIME_FIELD_NUMBER = 7;
      private double timerTime_;
      /**
       * <code>double timerTime = 7;</code>
       */
      public double getTimerTime() {
        return timerTime_;
      }

      public static final int ELAPSEDTIME_FIELD_NUMBER = 8;
      private double elapsedTime_;
      /**
       * <code>double elapsedTime = 8;</code>
       */
      public double getElapsedTime() {
        return elapsedTime_;
      }

      public static final int MOVINGTIME_FIELD_NUMBER = 9;
      private double movingTime_;
      /**
       * <code>double movingTime = 9;</code>
       */
      public double getMovingTime() {
        return movingTime_;
      }

      public static final int TRIGGER_FIELD_NUMBER = 10;
      private volatile java.lang.Object trigger_;
      /**
       * <code>string trigger = 10;</code>
       */
      public java.lang.String getTrigger() {
        java.lang.Object ref = trigger_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          trigger_ = s;
          return s;
        }
      }
      /**
       * <code>string trigger = 10;</code>
       */
      public com.google.protobuf.ByteString
          getTriggerBytes() {
        java.lang.Object ref = trigger_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          trigger_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (startIdx_ != 0) {
          output.writeInt32(1, startIdx_);
        }
        if (endIdx_ != 0) {
          output.writeInt32(2, endIdx_);
        }
        if (!getTsBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, ts_);
        }
        if (!getStartTsBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, startTs_);
        }
        if (!getEventBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 5, event_);
        }
        if (eventType_ != ski.crunch.activity.model.ActivityOuterClass.Activity.EventType.START.getNumber()) {
          output.writeEnum(6, eventType_);
        }
        if (timerTime_ != 0D) {
          output.writeDouble(7, timerTime_);
        }
        if (elapsedTime_ != 0D) {
          output.writeDouble(8, elapsedTime_);
        }
        if (movingTime_ != 0D) {
          output.writeDouble(9, movingTime_);
        }
        if (!getTriggerBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 10, trigger_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (startIdx_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, startIdx_);
        }
        if (endIdx_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(2, endIdx_);
        }
        if (!getTsBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, ts_);
        }
        if (!getStartTsBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, startTs_);
        }
        if (!getEventBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, event_);
        }
        if (eventType_ != ski.crunch.activity.model.ActivityOuterClass.Activity.EventType.START.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(6, eventType_);
        }
        if (timerTime_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(7, timerTime_);
        }
        if (elapsedTime_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(8, elapsedTime_);
        }
        if (movingTime_ != 0D) {
          size += com.google.protobuf.CodedOutputStream
            .computeDoubleSize(9, movingTime_);
        }
        if (!getTriggerBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(10, trigger_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent)) {
          return super.equals(obj);
        }
        ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent other = (ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent) obj;

        boolean result = true;
        result = result && (getStartIdx()
            == other.getStartIdx());
        result = result && (getEndIdx()
            == other.getEndIdx());
        result = result && getTs()
            .equals(other.getTs());
        result = result && getStartTs()
            .equals(other.getStartTs());
        result = result && getEvent()
            .equals(other.getEvent());
        result = result && eventType_ == other.eventType_;
        result = result && (
            java.lang.Double.doubleToLongBits(getTimerTime())
            == java.lang.Double.doubleToLongBits(
                other.getTimerTime()));
        result = result && (
            java.lang.Double.doubleToLongBits(getElapsedTime())
            == java.lang.Double.doubleToLongBits(
                other.getElapsedTime()));
        result = result && (
            java.lang.Double.doubleToLongBits(getMovingTime())
            == java.lang.Double.doubleToLongBits(
                other.getMovingTime()));
        result = result && getTrigger()
            .equals(other.getTrigger());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + STARTIDX_FIELD_NUMBER;
        hash = (53 * hash) + getStartIdx();
        hash = (37 * hash) + ENDIDX_FIELD_NUMBER;
        hash = (53 * hash) + getEndIdx();
        hash = (37 * hash) + TS_FIELD_NUMBER;
        hash = (53 * hash) + getTs().hashCode();
        hash = (37 * hash) + STARTTS_FIELD_NUMBER;
        hash = (53 * hash) + getStartTs().hashCode();
        hash = (37 * hash) + EVENT_FIELD_NUMBER;
        hash = (53 * hash) + getEvent().hashCode();
        hash = (37 * hash) + EVENTTYPE_FIELD_NUMBER;
        hash = (53 * hash) + eventType_;
        hash = (37 * hash) + TIMERTIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getTimerTime()));
        hash = (37 * hash) + ELAPSEDTIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getElapsedTime()));
        hash = (37 * hash) + MOVINGTIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            java.lang.Double.doubleToLongBits(getMovingTime()));
        hash = (37 * hash) + TRIGGER_FIELD_NUMBER;
        hash = (53 * hash) + getTrigger().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Activity.FitEvent}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Activity.FitEvent)
          ski.crunch.activity.model.ActivityOuterClass.Activity.FitEventOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_FitEvent_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_FitEvent_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.class, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder.class);
        }

        // Construct using ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          startIdx_ = 0;

          endIdx_ = 0;

          ts_ = "";

          startTs_ = "";

          event_ = "";

          eventType_ = 0;

          timerTime_ = 0D;

          elapsedTime_ = 0D;

          movingTime_ = 0D;

          trigger_ = "";

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_FitEvent_descriptor;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent getDefaultInstanceForType() {
          return ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.getDefaultInstance();
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent build() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent buildPartial() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent result = new ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent(this);
          result.startIdx_ = startIdx_;
          result.endIdx_ = endIdx_;
          result.ts_ = ts_;
          result.startTs_ = startTs_;
          result.event_ = event_;
          result.eventType_ = eventType_;
          result.timerTime_ = timerTime_;
          result.elapsedTime_ = elapsedTime_;
          result.movingTime_ = movingTime_;
          result.trigger_ = trigger_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent) {
            return mergeFrom((ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent other) {
          if (other == ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.getDefaultInstance()) return this;
          if (other.getStartIdx() != 0) {
            setStartIdx(other.getStartIdx());
          }
          if (other.getEndIdx() != 0) {
            setEndIdx(other.getEndIdx());
          }
          if (!other.getTs().isEmpty()) {
            ts_ = other.ts_;
            onChanged();
          }
          if (!other.getStartTs().isEmpty()) {
            startTs_ = other.startTs_;
            onChanged();
          }
          if (!other.getEvent().isEmpty()) {
            event_ = other.event_;
            onChanged();
          }
          if (other.eventType_ != 0) {
            setEventTypeValue(other.getEventTypeValue());
          }
          if (other.getTimerTime() != 0D) {
            setTimerTime(other.getTimerTime());
          }
          if (other.getElapsedTime() != 0D) {
            setElapsedTime(other.getElapsedTime());
          }
          if (other.getMovingTime() != 0D) {
            setMovingTime(other.getMovingTime());
          }
          if (!other.getTrigger().isEmpty()) {
            trigger_ = other.trigger_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private int startIdx_ ;
        /**
         * <code>int32 startIdx = 1;</code>
         */
        public int getStartIdx() {
          return startIdx_;
        }
        /**
         * <code>int32 startIdx = 1;</code>
         */
        public Builder setStartIdx(int value) {
          
          startIdx_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 startIdx = 1;</code>
         */
        public Builder clearStartIdx() {
          
          startIdx_ = 0;
          onChanged();
          return this;
        }

        private int endIdx_ ;
        /**
         * <code>int32 endIdx = 2;</code>
         */
        public int getEndIdx() {
          return endIdx_;
        }
        /**
         * <code>int32 endIdx = 2;</code>
         */
        public Builder setEndIdx(int value) {
          
          endIdx_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>int32 endIdx = 2;</code>
         */
        public Builder clearEndIdx() {
          
          endIdx_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object ts_ = "";
        /**
         * <code>string ts = 3;</code>
         */
        public java.lang.String getTs() {
          java.lang.Object ref = ts_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            ts_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string ts = 3;</code>
         */
        public com.google.protobuf.ByteString
            getTsBytes() {
          java.lang.Object ref = ts_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            ts_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string ts = 3;</code>
         */
        public Builder setTs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          ts_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string ts = 3;</code>
         */
        public Builder clearTs() {
          
          ts_ = getDefaultInstance().getTs();
          onChanged();
          return this;
        }
        /**
         * <code>string ts = 3;</code>
         */
        public Builder setTsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          ts_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object startTs_ = "";
        /**
         * <code>string startTs = 4;</code>
         */
        public java.lang.String getStartTs() {
          java.lang.Object ref = startTs_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            startTs_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string startTs = 4;</code>
         */
        public com.google.protobuf.ByteString
            getStartTsBytes() {
          java.lang.Object ref = startTs_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            startTs_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string startTs = 4;</code>
         */
        public Builder setStartTs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          startTs_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string startTs = 4;</code>
         */
        public Builder clearStartTs() {
          
          startTs_ = getDefaultInstance().getStartTs();
          onChanged();
          return this;
        }
        /**
         * <code>string startTs = 4;</code>
         */
        public Builder setStartTsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          startTs_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object event_ = "";
        /**
         * <code>string event = 5;</code>
         */
        public java.lang.String getEvent() {
          java.lang.Object ref = event_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            event_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string event = 5;</code>
         */
        public com.google.protobuf.ByteString
            getEventBytes() {
          java.lang.Object ref = event_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            event_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string event = 5;</code>
         */
        public Builder setEvent(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          event_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string event = 5;</code>
         */
        public Builder clearEvent() {
          
          event_ = getDefaultInstance().getEvent();
          onChanged();
          return this;
        }
        /**
         * <code>string event = 5;</code>
         */
        public Builder setEventBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          event_ = value;
          onChanged();
          return this;
        }

        private int eventType_ = 0;
        /**
         * <code>.Activity.EventType eventType = 6;</code>
         */
        public int getEventTypeValue() {
          return eventType_;
        }
        /**
         * <code>.Activity.EventType eventType = 6;</code>
         */
        public Builder setEventTypeValue(int value) {
          eventType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.Activity.EventType eventType = 6;</code>
         */
        public ski.crunch.activity.model.ActivityOuterClass.Activity.EventType getEventType() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.EventType result = ski.crunch.activity.model.ActivityOuterClass.Activity.EventType.valueOf(eventType_);
          return result == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.EventType.UNRECOGNIZED : result;
        }
        /**
         * <code>.Activity.EventType eventType = 6;</code>
         */
        public Builder setEventType(ski.crunch.activity.model.ActivityOuterClass.Activity.EventType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          eventType_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.Activity.EventType eventType = 6;</code>
         */
        public Builder clearEventType() {
          
          eventType_ = 0;
          onChanged();
          return this;
        }

        private double timerTime_ ;
        /**
         * <code>double timerTime = 7;</code>
         */
        public double getTimerTime() {
          return timerTime_;
        }
        /**
         * <code>double timerTime = 7;</code>
         */
        public Builder setTimerTime(double value) {
          
          timerTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double timerTime = 7;</code>
         */
        public Builder clearTimerTime() {
          
          timerTime_ = 0D;
          onChanged();
          return this;
        }

        private double elapsedTime_ ;
        /**
         * <code>double elapsedTime = 8;</code>
         */
        public double getElapsedTime() {
          return elapsedTime_;
        }
        /**
         * <code>double elapsedTime = 8;</code>
         */
        public Builder setElapsedTime(double value) {
          
          elapsedTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double elapsedTime = 8;</code>
         */
        public Builder clearElapsedTime() {
          
          elapsedTime_ = 0D;
          onChanged();
          return this;
        }

        private double movingTime_ ;
        /**
         * <code>double movingTime = 9;</code>
         */
        public double getMovingTime() {
          return movingTime_;
        }
        /**
         * <code>double movingTime = 9;</code>
         */
        public Builder setMovingTime(double value) {
          
          movingTime_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>double movingTime = 9;</code>
         */
        public Builder clearMovingTime() {
          
          movingTime_ = 0D;
          onChanged();
          return this;
        }

        private java.lang.Object trigger_ = "";
        /**
         * <code>string trigger = 10;</code>
         */
        public java.lang.String getTrigger() {
          java.lang.Object ref = trigger_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            trigger_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string trigger = 10;</code>
         */
        public com.google.protobuf.ByteString
            getTriggerBytes() {
          java.lang.Object ref = trigger_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            trigger_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string trigger = 10;</code>
         */
        public Builder setTrigger(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          trigger_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string trigger = 10;</code>
         */
        public Builder clearTrigger() {
          
          trigger_ = getDefaultInstance().getTrigger();
          onChanged();
          return this;
        }
        /**
         * <code>string trigger = 10;</code>
         */
        public Builder setTriggerBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          trigger_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Activity.FitEvent)
      }

      // @@protoc_insertion_point(class_scope:Activity.FitEvent)
      private static final ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent();
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<FitEvent>
          PARSER = new com.google.protobuf.AbstractParser<FitEvent>() {
        public FitEvent parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new FitEvent(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<FitEvent> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<FitEvent> getParserForType() {
        return PARSER;
      }

      public ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface SegmentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:Activity.Segment)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>string startTs = 1;</code>
       */
      java.lang.String getStartTs();
      /**
       * <code>string startTs = 1;</code>
       */
      com.google.protobuf.ByteString
          getStartTsBytes();

      /**
       * <code>string stopTs = 2;</code>
       */
      java.lang.String getStopTs();
      /**
       * <code>string stopTs = 2;</code>
       */
      com.google.protobuf.ByteString
          getStopTsBytes();

      /**
       * <code>string startIdx = 3;</code>
       */
      java.lang.String getStartIdx();
      /**
       * <code>string startIdx = 3;</code>
       */
      com.google.protobuf.ByteString
          getStartIdxBytes();

      /**
       * <code>string stopIdx = 4;</code>
       */
      java.lang.String getStopIdx();
      /**
       * <code>string stopIdx = 4;</code>
       */
      com.google.protobuf.ByteString
          getStopIdxBytes();
    }
    /**
     * Protobuf type {@code Activity.Segment}
     */
    public  static final class Segment extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:Activity.Segment)
        SegmentOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Segment.newBuilder() to construct.
      private Segment(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Segment() {
        startTs_ = "";
        stopTs_ = "";
        startIdx_ = "";
        stopIdx_ = "";
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Segment(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                startTs_ = s;
                break;
              }
              case 18: {
                java.lang.String s = input.readStringRequireUtf8();

                stopTs_ = s;
                break;
              }
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();

                startIdx_ = s;
                break;
              }
              case 34: {
                java.lang.String s = input.readStringRequireUtf8();

                stopIdx_ = s;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Segment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Segment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder.class);
      }

      public static final int STARTTS_FIELD_NUMBER = 1;
      private volatile java.lang.Object startTs_;
      /**
       * <code>string startTs = 1;</code>
       */
      public java.lang.String getStartTs() {
        java.lang.Object ref = startTs_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          startTs_ = s;
          return s;
        }
      }
      /**
       * <code>string startTs = 1;</code>
       */
      public com.google.protobuf.ByteString
          getStartTsBytes() {
        java.lang.Object ref = startTs_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          startTs_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STOPTS_FIELD_NUMBER = 2;
      private volatile java.lang.Object stopTs_;
      /**
       * <code>string stopTs = 2;</code>
       */
      public java.lang.String getStopTs() {
        java.lang.Object ref = stopTs_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stopTs_ = s;
          return s;
        }
      }
      /**
       * <code>string stopTs = 2;</code>
       */
      public com.google.protobuf.ByteString
          getStopTsBytes() {
        java.lang.Object ref = stopTs_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stopTs_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STARTIDX_FIELD_NUMBER = 3;
      private volatile java.lang.Object startIdx_;
      /**
       * <code>string startIdx = 3;</code>
       */
      public java.lang.String getStartIdx() {
        java.lang.Object ref = startIdx_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          startIdx_ = s;
          return s;
        }
      }
      /**
       * <code>string startIdx = 3;</code>
       */
      public com.google.protobuf.ByteString
          getStartIdxBytes() {
        java.lang.Object ref = startIdx_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          startIdx_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int STOPIDX_FIELD_NUMBER = 4;
      private volatile java.lang.Object stopIdx_;
      /**
       * <code>string stopIdx = 4;</code>
       */
      public java.lang.String getStopIdx() {
        java.lang.Object ref = stopIdx_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          stopIdx_ = s;
          return s;
        }
      }
      /**
       * <code>string stopIdx = 4;</code>
       */
      public com.google.protobuf.ByteString
          getStopIdxBytes() {
        java.lang.Object ref = stopIdx_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          stopIdx_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getStartTsBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, startTs_);
        }
        if (!getStopTsBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 2, stopTs_);
        }
        if (!getStartIdxBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 3, startIdx_);
        }
        if (!getStopIdxBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 4, stopIdx_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getStartTsBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, startTs_);
        }
        if (!getStopTsBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, stopTs_);
        }
        if (!getStartIdxBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, startIdx_);
        }
        if (!getStopIdxBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, stopIdx_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Segment)) {
          return super.equals(obj);
        }
        ski.crunch.activity.model.ActivityOuterClass.Activity.Segment other = (ski.crunch.activity.model.ActivityOuterClass.Activity.Segment) obj;

        boolean result = true;
        result = result && getStartTs()
            .equals(other.getStartTs());
        result = result && getStopTs()
            .equals(other.getStopTs());
        result = result && getStartIdx()
            .equals(other.getStartIdx());
        result = result && getStopIdx()
            .equals(other.getStopIdx());
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + STARTTS_FIELD_NUMBER;
        hash = (53 * hash) + getStartTs().hashCode();
        hash = (37 * hash) + STOPTS_FIELD_NUMBER;
        hash = (53 * hash) + getStopTs().hashCode();
        hash = (37 * hash) + STARTIDX_FIELD_NUMBER;
        hash = (53 * hash) + getStartIdx().hashCode();
        hash = (37 * hash) + STOPIDX_FIELD_NUMBER;
        hash = (53 * hash) + getStopIdx().hashCode();
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(ski.crunch.activity.model.ActivityOuterClass.Activity.Segment prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code Activity.Segment}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:Activity.Segment)
          ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Segment_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Segment_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder.class);
        }

        // Construct using ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          startTs_ = "";

          stopTs_ = "";

          startIdx_ = "";

          stopIdx_ = "";

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_Segment_descriptor;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getDefaultInstanceForType() {
          return ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.getDefaultInstance();
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment build() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment buildPartial() {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment result = new ski.crunch.activity.model.ActivityOuterClass.Activity.Segment(this);
          result.startTs_ = startTs_;
          result.stopTs_ = stopTs_;
          result.startIdx_ = startIdx_;
          result.stopIdx_ = stopIdx_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof ski.crunch.activity.model.ActivityOuterClass.Activity.Segment) {
            return mergeFrom((ski.crunch.activity.model.ActivityOuterClass.Activity.Segment)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(ski.crunch.activity.model.ActivityOuterClass.Activity.Segment other) {
          if (other == ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.getDefaultInstance()) return this;
          if (!other.getStartTs().isEmpty()) {
            startTs_ = other.startTs_;
            onChanged();
          }
          if (!other.getStopTs().isEmpty()) {
            stopTs_ = other.stopTs_;
            onChanged();
          }
          if (!other.getStartIdx().isEmpty()) {
            startIdx_ = other.startIdx_;
            onChanged();
          }
          if (!other.getStopIdx().isEmpty()) {
            stopIdx_ = other.stopIdx_;
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (ski.crunch.activity.model.ActivityOuterClass.Activity.Segment) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private java.lang.Object startTs_ = "";
        /**
         * <code>string startTs = 1;</code>
         */
        public java.lang.String getStartTs() {
          java.lang.Object ref = startTs_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            startTs_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string startTs = 1;</code>
         */
        public com.google.protobuf.ByteString
            getStartTsBytes() {
          java.lang.Object ref = startTs_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            startTs_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string startTs = 1;</code>
         */
        public Builder setStartTs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          startTs_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string startTs = 1;</code>
         */
        public Builder clearStartTs() {
          
          startTs_ = getDefaultInstance().getStartTs();
          onChanged();
          return this;
        }
        /**
         * <code>string startTs = 1;</code>
         */
        public Builder setStartTsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          startTs_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object stopTs_ = "";
        /**
         * <code>string stopTs = 2;</code>
         */
        public java.lang.String getStopTs() {
          java.lang.Object ref = stopTs_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            stopTs_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string stopTs = 2;</code>
         */
        public com.google.protobuf.ByteString
            getStopTsBytes() {
          java.lang.Object ref = stopTs_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stopTs_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string stopTs = 2;</code>
         */
        public Builder setStopTs(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          stopTs_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string stopTs = 2;</code>
         */
        public Builder clearStopTs() {
          
          stopTs_ = getDefaultInstance().getStopTs();
          onChanged();
          return this;
        }
        /**
         * <code>string stopTs = 2;</code>
         */
        public Builder setStopTsBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          stopTs_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object startIdx_ = "";
        /**
         * <code>string startIdx = 3;</code>
         */
        public java.lang.String getStartIdx() {
          java.lang.Object ref = startIdx_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            startIdx_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string startIdx = 3;</code>
         */
        public com.google.protobuf.ByteString
            getStartIdxBytes() {
          java.lang.Object ref = startIdx_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            startIdx_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string startIdx = 3;</code>
         */
        public Builder setStartIdx(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          startIdx_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string startIdx = 3;</code>
         */
        public Builder clearStartIdx() {
          
          startIdx_ = getDefaultInstance().getStartIdx();
          onChanged();
          return this;
        }
        /**
         * <code>string startIdx = 3;</code>
         */
        public Builder setStartIdxBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          startIdx_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object stopIdx_ = "";
        /**
         * <code>string stopIdx = 4;</code>
         */
        public java.lang.String getStopIdx() {
          java.lang.Object ref = stopIdx_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            stopIdx_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>string stopIdx = 4;</code>
         */
        public com.google.protobuf.ByteString
            getStopIdxBytes() {
          java.lang.Object ref = stopIdx_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            stopIdx_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>string stopIdx = 4;</code>
         */
        public Builder setStopIdx(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          stopIdx_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>string stopIdx = 4;</code>
         */
        public Builder clearStopIdx() {
          
          stopIdx_ = getDefaultInstance().getStopIdx();
          onChanged();
          return this;
        }
        /**
         * <code>string stopIdx = 4;</code>
         */
        public Builder setStopIdxBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          stopIdx_ = value;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:Activity.Segment)
      }

      // @@protoc_insertion_point(class_scope:Activity.Segment)
      private static final ski.crunch.activity.model.ActivityOuterClass.Activity.Segment DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new ski.crunch.activity.model.ActivityOuterClass.Activity.Segment();
      }

      public static ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Segment>
          PARSER = new com.google.protobuf.AbstractParser<Segment>() {
        public Segment parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Segment(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Segment> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Segment> getParserForType() {
        return PARSER;
      }

      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int META_FIELD_NUMBER = 1;
    private ski.crunch.activity.model.ActivityOuterClass.Activity.Meta meta_;
    /**
     * <code>.Activity.Meta meta = 1;</code>
     */
    public boolean hasMeta() {
      return meta_ != null;
    }
    /**
     * <code>.Activity.Meta meta = 1;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.Meta getMeta() {
      return meta_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.getDefaultInstance() : meta_;
    }
    /**
     * <code>.Activity.Meta meta = 1;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.MetaOrBuilder getMetaOrBuilder() {
      return getMeta();
    }

    public static final int USERDATA_FIELD_NUMBER = 2;
    private ski.crunch.activity.model.ActivityOuterClass.Activity.UserData userData_;
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>.Activity.UserData userData = 2;</code>
     */
    public boolean hasUserData() {
      return userData_ != null;
    }
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>.Activity.UserData userData = 2;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.UserData getUserData() {
      return userData_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.getDefaultInstance() : userData_;
    }
    /**
     * <pre>
     *deprecated
     * </pre>
     *
     * <code>.Activity.UserData userData = 2;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.UserDataOrBuilder getUserDataOrBuilder() {
      return getUserData();
    }

    public static final int SUMMARY_FIELD_NUMBER = 3;
    private ski.crunch.activity.model.ActivityOuterClass.Activity.Summary summary_;
    /**
     * <code>.Activity.Summary summary = 3;</code>
     */
    public boolean hasSummary() {
      return summary_ != null;
    }
    /**
     * <code>.Activity.Summary summary = 3;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.Summary getSummary() {
      return summary_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.getDefaultInstance() : summary_;
    }
    /**
     * <code>.Activity.Summary summary = 3;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder getSummaryOrBuilder() {
      return getSummary();
    }

    public static final int VALUES_FIELD_NUMBER = 4;
    private ski.crunch.activity.model.ActivityOuterClass.Activity.Values values_;
    /**
     * <code>.Activity.Values values = 4;</code>
     */
    public boolean hasValues() {
      return values_ != null;
    }
    /**
     * <code>.Activity.Values values = 4;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.Values getValues() {
      return values_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Values.getDefaultInstance() : values_;
    }
    /**
     * <code>.Activity.Values values = 4;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.ValuesOrBuilder getValuesOrBuilder() {
      return getValues();
    }

    public static final int EVENTS_FIELD_NUMBER = 5;
    private java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent> events_;
    /**
     * <code>repeated .Activity.FitEvent events = 5;</code>
     */
    public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent> getEventsList() {
      return events_;
    }
    /**
     * <code>repeated .Activity.FitEvent events = 5;</code>
     */
    public java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.FitEventOrBuilder> 
        getEventsOrBuilderList() {
      return events_;
    }
    /**
     * <code>repeated .Activity.FitEvent events = 5;</code>
     */
    public int getEventsCount() {
      return events_.size();
    }
    /**
     * <code>repeated .Activity.FitEvent events = 5;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent getEvents(int index) {
      return events_.get(index);
    }
    /**
     * <code>repeated .Activity.FitEvent events = 5;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.FitEventOrBuilder getEventsOrBuilder(
        int index) {
      return events_.get(index);
    }

    public static final int ID_FIELD_NUMBER = 6;
    private volatile java.lang.Object id_;
    /**
     * <code>string id = 6;</code>
     */
    public java.lang.String getId() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        id_ = s;
        return s;
      }
    }
    /**
     * <code>string id = 6;</code>
     */
    public com.google.protobuf.ByteString
        getIdBytes() {
      java.lang.Object ref = id_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        id_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SESSIONS_FIELD_NUMBER = 7;
    private java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Session> sessions_;
    /**
     * <code>repeated .Activity.Session sessions = 7;</code>
     */
    public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Session> getSessionsList() {
      return sessions_;
    }
    /**
     * <code>repeated .Activity.Session sessions = 7;</code>
     */
    public java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SessionOrBuilder> 
        getSessionsOrBuilderList() {
      return sessions_;
    }
    /**
     * <code>repeated .Activity.Session sessions = 7;</code>
     */
    public int getSessionsCount() {
      return sessions_.size();
    }
    /**
     * <code>repeated .Activity.Session sessions = 7;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.Session getSessions(int index) {
      return sessions_.get(index);
    }
    /**
     * <code>repeated .Activity.Session sessions = 7;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.SessionOrBuilder getSessionsOrBuilder(
        int index) {
      return sessions_.get(index);
    }

    public static final int PAUSES_FIELD_NUMBER = 8;
    private java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> pauses_;
    /**
     * <code>repeated .Activity.Segment pauses = 8;</code>
     */
    public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> getPausesList() {
      return pauses_;
    }
    /**
     * <code>repeated .Activity.Segment pauses = 8;</code>
     */
    public java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
        getPausesOrBuilderList() {
      return pauses_;
    }
    /**
     * <code>repeated .Activity.Segment pauses = 8;</code>
     */
    public int getPausesCount() {
      return pauses_.size();
    }
    /**
     * <code>repeated .Activity.Segment pauses = 8;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getPauses(int index) {
      return pauses_.get(index);
    }
    /**
     * <code>repeated .Activity.Segment pauses = 8;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getPausesOrBuilder(
        int index) {
      return pauses_.get(index);
    }

    public static final int LAPS_FIELD_NUMBER = 9;
    private java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> laps_;
    /**
     * <code>repeated .Activity.Segment laps = 9;</code>
     */
    public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> getLapsList() {
      return laps_;
    }
    /**
     * <code>repeated .Activity.Segment laps = 9;</code>
     */
    public java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
        getLapsOrBuilderList() {
      return laps_;
    }
    /**
     * <code>repeated .Activity.Segment laps = 9;</code>
     */
    public int getLapsCount() {
      return laps_.size();
    }
    /**
     * <code>repeated .Activity.Segment laps = 9;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getLaps(int index) {
      return laps_.get(index);
    }
    /**
     * <code>repeated .Activity.Segment laps = 9;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getLapsOrBuilder(
        int index) {
      return laps_.get(index);
    }

    public static final int STOPS_FIELD_NUMBER = 10;
    private java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> stops_;
    /**
     * <code>repeated .Activity.Segment stops = 10;</code>
     */
    public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> getStopsList() {
      return stops_;
    }
    /**
     * <code>repeated .Activity.Segment stops = 10;</code>
     */
    public java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
        getStopsOrBuilderList() {
      return stops_;
    }
    /**
     * <code>repeated .Activity.Segment stops = 10;</code>
     */
    public int getStopsCount() {
      return stops_.size();
    }
    /**
     * <code>repeated .Activity.Segment stops = 10;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getStops(int index) {
      return stops_.get(index);
    }
    /**
     * <code>repeated .Activity.Segment stops = 10;</code>
     */
    public ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getStopsOrBuilder(
        int index) {
      return stops_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (meta_ != null) {
        output.writeMessage(1, getMeta());
      }
      if (userData_ != null) {
        output.writeMessage(2, getUserData());
      }
      if (summary_ != null) {
        output.writeMessage(3, getSummary());
      }
      if (values_ != null) {
        output.writeMessage(4, getValues());
      }
      for (int i = 0; i < events_.size(); i++) {
        output.writeMessage(5, events_.get(i));
      }
      if (!getIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, id_);
      }
      for (int i = 0; i < sessions_.size(); i++) {
        output.writeMessage(7, sessions_.get(i));
      }
      for (int i = 0; i < pauses_.size(); i++) {
        output.writeMessage(8, pauses_.get(i));
      }
      for (int i = 0; i < laps_.size(); i++) {
        output.writeMessage(9, laps_.get(i));
      }
      for (int i = 0; i < stops_.size(); i++) {
        output.writeMessage(10, stops_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (meta_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMeta());
      }
      if (userData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getUserData());
      }
      if (summary_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getSummary());
      }
      if (values_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getValues());
      }
      for (int i = 0; i < events_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, events_.get(i));
      }
      if (!getIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, id_);
      }
      for (int i = 0; i < sessions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, sessions_.get(i));
      }
      for (int i = 0; i < pauses_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, pauses_.get(i));
      }
      for (int i = 0; i < laps_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, laps_.get(i));
      }
      for (int i = 0; i < stops_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, stops_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ski.crunch.activity.model.ActivityOuterClass.Activity)) {
        return super.equals(obj);
      }
      ski.crunch.activity.model.ActivityOuterClass.Activity other = (ski.crunch.activity.model.ActivityOuterClass.Activity) obj;

      boolean result = true;
      result = result && (hasMeta() == other.hasMeta());
      if (hasMeta()) {
        result = result && getMeta()
            .equals(other.getMeta());
      }
      result = result && (hasUserData() == other.hasUserData());
      if (hasUserData()) {
        result = result && getUserData()
            .equals(other.getUserData());
      }
      result = result && (hasSummary() == other.hasSummary());
      if (hasSummary()) {
        result = result && getSummary()
            .equals(other.getSummary());
      }
      result = result && (hasValues() == other.hasValues());
      if (hasValues()) {
        result = result && getValues()
            .equals(other.getValues());
      }
      result = result && getEventsList()
          .equals(other.getEventsList());
      result = result && getId()
          .equals(other.getId());
      result = result && getSessionsList()
          .equals(other.getSessionsList());
      result = result && getPausesList()
          .equals(other.getPausesList());
      result = result && getLapsList()
          .equals(other.getLapsList());
      result = result && getStopsList()
          .equals(other.getStopsList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMeta()) {
        hash = (37 * hash) + META_FIELD_NUMBER;
        hash = (53 * hash) + getMeta().hashCode();
      }
      if (hasUserData()) {
        hash = (37 * hash) + USERDATA_FIELD_NUMBER;
        hash = (53 * hash) + getUserData().hashCode();
      }
      if (hasSummary()) {
        hash = (37 * hash) + SUMMARY_FIELD_NUMBER;
        hash = (53 * hash) + getSummary().hashCode();
      }
      if (hasValues()) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValues().hashCode();
      }
      if (getEventsCount() > 0) {
        hash = (37 * hash) + EVENTS_FIELD_NUMBER;
        hash = (53 * hash) + getEventsList().hashCode();
      }
      hash = (37 * hash) + ID_FIELD_NUMBER;
      hash = (53 * hash) + getId().hashCode();
      if (getSessionsCount() > 0) {
        hash = (37 * hash) + SESSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getSessionsList().hashCode();
      }
      if (getPausesCount() > 0) {
        hash = (37 * hash) + PAUSES_FIELD_NUMBER;
        hash = (53 * hash) + getPausesList().hashCode();
      }
      if (getLapsCount() > 0) {
        hash = (37 * hash) + LAPS_FIELD_NUMBER;
        hash = (53 * hash) + getLapsList().hashCode();
      }
      if (getStopsCount() > 0) {
        hash = (37 * hash) + STOPS_FIELD_NUMBER;
        hash = (53 * hash) + getStopsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ski.crunch.activity.model.ActivityOuterClass.Activity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ski.crunch.activity.model.ActivityOuterClass.Activity prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Activity}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Activity)
        ski.crunch.activity.model.ActivityOuterClass.ActivityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ski.crunch.activity.model.ActivityOuterClass.Activity.class, ski.crunch.activity.model.ActivityOuterClass.Activity.Builder.class);
      }

      // Construct using ski.crunch.activity.model.ActivityOuterClass.Activity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEventsFieldBuilder();
          getSessionsFieldBuilder();
          getPausesFieldBuilder();
          getLapsFieldBuilder();
          getStopsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (metaBuilder_ == null) {
          meta_ = null;
        } else {
          meta_ = null;
          metaBuilder_ = null;
        }
        if (userDataBuilder_ == null) {
          userData_ = null;
        } else {
          userData_ = null;
          userDataBuilder_ = null;
        }
        if (summaryBuilder_ == null) {
          summary_ = null;
        } else {
          summary_ = null;
          summaryBuilder_ = null;
        }
        if (valuesBuilder_ == null) {
          values_ = null;
        } else {
          values_ = null;
          valuesBuilder_ = null;
        }
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          eventsBuilder_.clear();
        }
        id_ = "";

        if (sessionsBuilder_ == null) {
          sessions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          sessionsBuilder_.clear();
        }
        if (pausesBuilder_ == null) {
          pauses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          pausesBuilder_.clear();
        }
        if (lapsBuilder_ == null) {
          laps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
        } else {
          lapsBuilder_.clear();
        }
        if (stopsBuilder_ == null) {
          stops_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
        } else {
          stopsBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ski.crunch.activity.model.ActivityOuterClass.internal_static_Activity_descriptor;
      }

      public ski.crunch.activity.model.ActivityOuterClass.Activity getDefaultInstanceForType() {
        return ski.crunch.activity.model.ActivityOuterClass.Activity.getDefaultInstance();
      }

      public ski.crunch.activity.model.ActivityOuterClass.Activity build() {
        ski.crunch.activity.model.ActivityOuterClass.Activity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ski.crunch.activity.model.ActivityOuterClass.Activity buildPartial() {
        ski.crunch.activity.model.ActivityOuterClass.Activity result = new ski.crunch.activity.model.ActivityOuterClass.Activity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (metaBuilder_ == null) {
          result.meta_ = meta_;
        } else {
          result.meta_ = metaBuilder_.build();
        }
        if (userDataBuilder_ == null) {
          result.userData_ = userData_;
        } else {
          result.userData_ = userDataBuilder_.build();
        }
        if (summaryBuilder_ == null) {
          result.summary_ = summary_;
        } else {
          result.summary_ = summaryBuilder_.build();
        }
        if (valuesBuilder_ == null) {
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        if (eventsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            events_ = java.util.Collections.unmodifiableList(events_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.events_ = events_;
        } else {
          result.events_ = eventsBuilder_.build();
        }
        result.id_ = id_;
        if (sessionsBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040)) {
            sessions_ = java.util.Collections.unmodifiableList(sessions_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.sessions_ = sessions_;
        } else {
          result.sessions_ = sessionsBuilder_.build();
        }
        if (pausesBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080)) {
            pauses_ = java.util.Collections.unmodifiableList(pauses_);
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.pauses_ = pauses_;
        } else {
          result.pauses_ = pausesBuilder_.build();
        }
        if (lapsBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100)) {
            laps_ = java.util.Collections.unmodifiableList(laps_);
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.laps_ = laps_;
        } else {
          result.laps_ = lapsBuilder_.build();
        }
        if (stopsBuilder_ == null) {
          if (((bitField0_ & 0x00000200) == 0x00000200)) {
            stops_ = java.util.Collections.unmodifiableList(stops_);
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.stops_ = stops_;
        } else {
          result.stops_ = stopsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ski.crunch.activity.model.ActivityOuterClass.Activity) {
          return mergeFrom((ski.crunch.activity.model.ActivityOuterClass.Activity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ski.crunch.activity.model.ActivityOuterClass.Activity other) {
        if (other == ski.crunch.activity.model.ActivityOuterClass.Activity.getDefaultInstance()) return this;
        if (other.hasMeta()) {
          mergeMeta(other.getMeta());
        }
        if (other.hasUserData()) {
          mergeUserData(other.getUserData());
        }
        if (other.hasSummary()) {
          mergeSummary(other.getSummary());
        }
        if (other.hasValues()) {
          mergeValues(other.getValues());
        }
        if (eventsBuilder_ == null) {
          if (!other.events_.isEmpty()) {
            if (events_.isEmpty()) {
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureEventsIsMutable();
              events_.addAll(other.events_);
            }
            onChanged();
          }
        } else {
          if (!other.events_.isEmpty()) {
            if (eventsBuilder_.isEmpty()) {
              eventsBuilder_.dispose();
              eventsBuilder_ = null;
              events_ = other.events_;
              bitField0_ = (bitField0_ & ~0x00000010);
              eventsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEventsFieldBuilder() : null;
            } else {
              eventsBuilder_.addAllMessages(other.events_);
            }
          }
        }
        if (!other.getId().isEmpty()) {
          id_ = other.id_;
          onChanged();
        }
        if (sessionsBuilder_ == null) {
          if (!other.sessions_.isEmpty()) {
            if (sessions_.isEmpty()) {
              sessions_ = other.sessions_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureSessionsIsMutable();
              sessions_.addAll(other.sessions_);
            }
            onChanged();
          }
        } else {
          if (!other.sessions_.isEmpty()) {
            if (sessionsBuilder_.isEmpty()) {
              sessionsBuilder_.dispose();
              sessionsBuilder_ = null;
              sessions_ = other.sessions_;
              bitField0_ = (bitField0_ & ~0x00000040);
              sessionsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSessionsFieldBuilder() : null;
            } else {
              sessionsBuilder_.addAllMessages(other.sessions_);
            }
          }
        }
        if (pausesBuilder_ == null) {
          if (!other.pauses_.isEmpty()) {
            if (pauses_.isEmpty()) {
              pauses_ = other.pauses_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensurePausesIsMutable();
              pauses_.addAll(other.pauses_);
            }
            onChanged();
          }
        } else {
          if (!other.pauses_.isEmpty()) {
            if (pausesBuilder_.isEmpty()) {
              pausesBuilder_.dispose();
              pausesBuilder_ = null;
              pauses_ = other.pauses_;
              bitField0_ = (bitField0_ & ~0x00000080);
              pausesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getPausesFieldBuilder() : null;
            } else {
              pausesBuilder_.addAllMessages(other.pauses_);
            }
          }
        }
        if (lapsBuilder_ == null) {
          if (!other.laps_.isEmpty()) {
            if (laps_.isEmpty()) {
              laps_ = other.laps_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureLapsIsMutable();
              laps_.addAll(other.laps_);
            }
            onChanged();
          }
        } else {
          if (!other.laps_.isEmpty()) {
            if (lapsBuilder_.isEmpty()) {
              lapsBuilder_.dispose();
              lapsBuilder_ = null;
              laps_ = other.laps_;
              bitField0_ = (bitField0_ & ~0x00000100);
              lapsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLapsFieldBuilder() : null;
            } else {
              lapsBuilder_.addAllMessages(other.laps_);
            }
          }
        }
        if (stopsBuilder_ == null) {
          if (!other.stops_.isEmpty()) {
            if (stops_.isEmpty()) {
              stops_ = other.stops_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureStopsIsMutable();
              stops_.addAll(other.stops_);
            }
            onChanged();
          }
        } else {
          if (!other.stops_.isEmpty()) {
            if (stopsBuilder_.isEmpty()) {
              stopsBuilder_.dispose();
              stopsBuilder_ = null;
              stops_ = other.stops_;
              bitField0_ = (bitField0_ & ~0x00000200);
              stopsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getStopsFieldBuilder() : null;
            } else {
              stopsBuilder_.addAllMessages(other.stops_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ski.crunch.activity.model.ActivityOuterClass.Activity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ski.crunch.activity.model.ActivityOuterClass.Activity) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private ski.crunch.activity.model.ActivityOuterClass.Activity.Meta meta_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Meta, ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.MetaOrBuilder> metaBuilder_;
      /**
       * <code>.Activity.Meta meta = 1;</code>
       */
      public boolean hasMeta() {
        return metaBuilder_ != null || meta_ != null;
      }
      /**
       * <code>.Activity.Meta meta = 1;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Meta getMeta() {
        if (metaBuilder_ == null) {
          return meta_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.getDefaultInstance() : meta_;
        } else {
          return metaBuilder_.getMessage();
        }
      }
      /**
       * <code>.Activity.Meta meta = 1;</code>
       */
      public Builder setMeta(ski.crunch.activity.model.ActivityOuterClass.Activity.Meta value) {
        if (metaBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          meta_ = value;
          onChanged();
        } else {
          metaBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Activity.Meta meta = 1;</code>
       */
      public Builder setMeta(
          ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.Builder builderForValue) {
        if (metaBuilder_ == null) {
          meta_ = builderForValue.build();
          onChanged();
        } else {
          metaBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Activity.Meta meta = 1;</code>
       */
      public Builder mergeMeta(ski.crunch.activity.model.ActivityOuterClass.Activity.Meta value) {
        if (metaBuilder_ == null) {
          if (meta_ != null) {
            meta_ =
              ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.newBuilder(meta_).mergeFrom(value).buildPartial();
          } else {
            meta_ = value;
          }
          onChanged();
        } else {
          metaBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Activity.Meta meta = 1;</code>
       */
      public Builder clearMeta() {
        if (metaBuilder_ == null) {
          meta_ = null;
          onChanged();
        } else {
          meta_ = null;
          metaBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Activity.Meta meta = 1;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.Builder getMetaBuilder() {
        
        onChanged();
        return getMetaFieldBuilder().getBuilder();
      }
      /**
       * <code>.Activity.Meta meta = 1;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.MetaOrBuilder getMetaOrBuilder() {
        if (metaBuilder_ != null) {
          return metaBuilder_.getMessageOrBuilder();
        } else {
          return meta_ == null ?
              ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.getDefaultInstance() : meta_;
        }
      }
      /**
       * <code>.Activity.Meta meta = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Meta, ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.MetaOrBuilder> 
          getMetaFieldBuilder() {
        if (metaBuilder_ == null) {
          metaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ski.crunch.activity.model.ActivityOuterClass.Activity.Meta, ski.crunch.activity.model.ActivityOuterClass.Activity.Meta.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.MetaOrBuilder>(
                  getMeta(),
                  getParentForChildren(),
                  isClean());
          meta_ = null;
        }
        return metaBuilder_;
      }

      private ski.crunch.activity.model.ActivityOuterClass.Activity.UserData userData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.UserData, ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.UserDataOrBuilder> userDataBuilder_;
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>.Activity.UserData userData = 2;</code>
       */
      public boolean hasUserData() {
        return userDataBuilder_ != null || userData_ != null;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>.Activity.UserData userData = 2;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.UserData getUserData() {
        if (userDataBuilder_ == null) {
          return userData_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.getDefaultInstance() : userData_;
        } else {
          return userDataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>.Activity.UserData userData = 2;</code>
       */
      public Builder setUserData(ski.crunch.activity.model.ActivityOuterClass.Activity.UserData value) {
        if (userDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          userData_ = value;
          onChanged();
        } else {
          userDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>.Activity.UserData userData = 2;</code>
       */
      public Builder setUserData(
          ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.Builder builderForValue) {
        if (userDataBuilder_ == null) {
          userData_ = builderForValue.build();
          onChanged();
        } else {
          userDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>.Activity.UserData userData = 2;</code>
       */
      public Builder mergeUserData(ski.crunch.activity.model.ActivityOuterClass.Activity.UserData value) {
        if (userDataBuilder_ == null) {
          if (userData_ != null) {
            userData_ =
              ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.newBuilder(userData_).mergeFrom(value).buildPartial();
          } else {
            userData_ = value;
          }
          onChanged();
        } else {
          userDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>.Activity.UserData userData = 2;</code>
       */
      public Builder clearUserData() {
        if (userDataBuilder_ == null) {
          userData_ = null;
          onChanged();
        } else {
          userData_ = null;
          userDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>.Activity.UserData userData = 2;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.Builder getUserDataBuilder() {
        
        onChanged();
        return getUserDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>.Activity.UserData userData = 2;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.UserDataOrBuilder getUserDataOrBuilder() {
        if (userDataBuilder_ != null) {
          return userDataBuilder_.getMessageOrBuilder();
        } else {
          return userData_ == null ?
              ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.getDefaultInstance() : userData_;
        }
      }
      /**
       * <pre>
       *deprecated
       * </pre>
       *
       * <code>.Activity.UserData userData = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.UserData, ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.UserDataOrBuilder> 
          getUserDataFieldBuilder() {
        if (userDataBuilder_ == null) {
          userDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ski.crunch.activity.model.ActivityOuterClass.Activity.UserData, ski.crunch.activity.model.ActivityOuterClass.Activity.UserData.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.UserDataOrBuilder>(
                  getUserData(),
                  getParentForChildren(),
                  isClean());
          userData_ = null;
        }
        return userDataBuilder_;
      }

      private ski.crunch.activity.model.ActivityOuterClass.Activity.Summary summary_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Summary, ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder> summaryBuilder_;
      /**
       * <code>.Activity.Summary summary = 3;</code>
       */
      public boolean hasSummary() {
        return summaryBuilder_ != null || summary_ != null;
      }
      /**
       * <code>.Activity.Summary summary = 3;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Summary getSummary() {
        if (summaryBuilder_ == null) {
          return summary_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.getDefaultInstance() : summary_;
        } else {
          return summaryBuilder_.getMessage();
        }
      }
      /**
       * <code>.Activity.Summary summary = 3;</code>
       */
      public Builder setSummary(ski.crunch.activity.model.ActivityOuterClass.Activity.Summary value) {
        if (summaryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          summary_ = value;
          onChanged();
        } else {
          summaryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Activity.Summary summary = 3;</code>
       */
      public Builder setSummary(
          ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder builderForValue) {
        if (summaryBuilder_ == null) {
          summary_ = builderForValue.build();
          onChanged();
        } else {
          summaryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Activity.Summary summary = 3;</code>
       */
      public Builder mergeSummary(ski.crunch.activity.model.ActivityOuterClass.Activity.Summary value) {
        if (summaryBuilder_ == null) {
          if (summary_ != null) {
            summary_ =
              ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.newBuilder(summary_).mergeFrom(value).buildPartial();
          } else {
            summary_ = value;
          }
          onChanged();
        } else {
          summaryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Activity.Summary summary = 3;</code>
       */
      public Builder clearSummary() {
        if (summaryBuilder_ == null) {
          summary_ = null;
          onChanged();
        } else {
          summary_ = null;
          summaryBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Activity.Summary summary = 3;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder getSummaryBuilder() {
        
        onChanged();
        return getSummaryFieldBuilder().getBuilder();
      }
      /**
       * <code>.Activity.Summary summary = 3;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder getSummaryOrBuilder() {
        if (summaryBuilder_ != null) {
          return summaryBuilder_.getMessageOrBuilder();
        } else {
          return summary_ == null ?
              ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.getDefaultInstance() : summary_;
        }
      }
      /**
       * <code>.Activity.Summary summary = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Summary, ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder> 
          getSummaryFieldBuilder() {
        if (summaryBuilder_ == null) {
          summaryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ski.crunch.activity.model.ActivityOuterClass.Activity.Summary, ski.crunch.activity.model.ActivityOuterClass.Activity.Summary.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SummaryOrBuilder>(
                  getSummary(),
                  getParentForChildren(),
                  isClean());
          summary_ = null;
        }
        return summaryBuilder_;
      }

      private ski.crunch.activity.model.ActivityOuterClass.Activity.Values values_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Values, ski.crunch.activity.model.ActivityOuterClass.Activity.Values.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.ValuesOrBuilder> valuesBuilder_;
      /**
       * <code>.Activity.Values values = 4;</code>
       */
      public boolean hasValues() {
        return valuesBuilder_ != null || values_ != null;
      }
      /**
       * <code>.Activity.Values values = 4;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Values getValues() {
        if (valuesBuilder_ == null) {
          return values_ == null ? ski.crunch.activity.model.ActivityOuterClass.Activity.Values.getDefaultInstance() : values_;
        } else {
          return valuesBuilder_.getMessage();
        }
      }
      /**
       * <code>.Activity.Values values = 4;</code>
       */
      public Builder setValues(ski.crunch.activity.model.ActivityOuterClass.Activity.Values value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          values_ = value;
          onChanged();
        } else {
          valuesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.Activity.Values values = 4;</code>
       */
      public Builder setValues(
          ski.crunch.activity.model.ActivityOuterClass.Activity.Values.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          values_ = builderForValue.build();
          onChanged();
        } else {
          valuesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.Activity.Values values = 4;</code>
       */
      public Builder mergeValues(ski.crunch.activity.model.ActivityOuterClass.Activity.Values value) {
        if (valuesBuilder_ == null) {
          if (values_ != null) {
            values_ =
              ski.crunch.activity.model.ActivityOuterClass.Activity.Values.newBuilder(values_).mergeFrom(value).buildPartial();
          } else {
            values_ = value;
          }
          onChanged();
        } else {
          valuesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.Activity.Values values = 4;</code>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = null;
          onChanged();
        } else {
          values_ = null;
          valuesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.Activity.Values values = 4;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Values.Builder getValuesBuilder() {
        
        onChanged();
        return getValuesFieldBuilder().getBuilder();
      }
      /**
       * <code>.Activity.Values values = 4;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.ValuesOrBuilder getValuesOrBuilder() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilder();
        } else {
          return values_ == null ?
              ski.crunch.activity.model.ActivityOuterClass.Activity.Values.getDefaultInstance() : values_;
        }
      }
      /**
       * <code>.Activity.Values values = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Values, ski.crunch.activity.model.ActivityOuterClass.Activity.Values.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.ValuesOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              ski.crunch.activity.model.ActivityOuterClass.Activity.Values, ski.crunch.activity.model.ActivityOuterClass.Activity.Values.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.ValuesOrBuilder>(
                  getValues(),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }

      private java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent> events_ =
        java.util.Collections.emptyList();
      private void ensureEventsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          events_ = new java.util.ArrayList<ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent>(events_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEventOrBuilder> eventsBuilder_;

      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent> getEventsList() {
        if (eventsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(events_);
        } else {
          return eventsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public int getEventsCount() {
        if (eventsBuilder_ == null) {
          return events_.size();
        } else {
          return eventsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent getEvents(int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);
        } else {
          return eventsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public Builder setEvents(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.set(index, value);
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public Builder setEvents(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.set(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public Builder addEvents(ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public Builder addEvents(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent value) {
        if (eventsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEventsIsMutable();
          events_.add(index, value);
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public Builder addEvents(
          ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public Builder addEvents(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder builderForValue) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.add(index, builderForValue.build());
          onChanged();
        } else {
          eventsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public Builder addAllEvents(
          java.lang.Iterable<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent> values) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, events_);
          onChanged();
        } else {
          eventsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public Builder clearEvents() {
        if (eventsBuilder_ == null) {
          events_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          eventsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public Builder removeEvents(int index) {
        if (eventsBuilder_ == null) {
          ensureEventsIsMutable();
          events_.remove(index);
          onChanged();
        } else {
          eventsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder getEventsBuilder(
          int index) {
        return getEventsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.FitEventOrBuilder getEventsOrBuilder(
          int index) {
        if (eventsBuilder_ == null) {
          return events_.get(index);  } else {
          return eventsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.FitEventOrBuilder> 
           getEventsOrBuilderList() {
        if (eventsBuilder_ != null) {
          return eventsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(events_);
        }
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder addEventsBuilder() {
        return getEventsFieldBuilder().addBuilder(
            ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder addEventsBuilder(
          int index) {
        return getEventsFieldBuilder().addBuilder(
            index, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.getDefaultInstance());
      }
      /**
       * <code>repeated .Activity.FitEvent events = 5;</code>
       */
      public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder> 
           getEventsBuilderList() {
        return getEventsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEventOrBuilder> 
          getEventsFieldBuilder() {
        if (eventsBuilder_ == null) {
          eventsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEvent.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.FitEventOrBuilder>(
                  events_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          events_ = null;
        }
        return eventsBuilder_;
      }

      private java.lang.Object id_ = "";
      /**
       * <code>string id = 6;</code>
       */
      public java.lang.String getId() {
        java.lang.Object ref = id_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          id_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string id = 6;</code>
       */
      public com.google.protobuf.ByteString
          getIdBytes() {
        java.lang.Object ref = id_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          id_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string id = 6;</code>
       */
      public Builder setId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        id_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string id = 6;</code>
       */
      public Builder clearId() {
        
        id_ = getDefaultInstance().getId();
        onChanged();
        return this;
      }
      /**
       * <code>string id = 6;</code>
       */
      public Builder setIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        id_ = value;
        onChanged();
        return this;
      }

      private java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Session> sessions_ =
        java.util.Collections.emptyList();
      private void ensureSessionsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          sessions_ = new java.util.ArrayList<ski.crunch.activity.model.ActivityOuterClass.Activity.Session>(sessions_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Session, ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SessionOrBuilder> sessionsBuilder_;

      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Session> getSessionsList() {
        if (sessionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sessions_);
        } else {
          return sessionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public int getSessionsCount() {
        if (sessionsBuilder_ == null) {
          return sessions_.size();
        } else {
          return sessionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Session getSessions(int index) {
        if (sessionsBuilder_ == null) {
          return sessions_.get(index);
        } else {
          return sessionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public Builder setSessions(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Session value) {
        if (sessionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSessionsIsMutable();
          sessions_.set(index, value);
          onChanged();
        } else {
          sessionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public Builder setSessions(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder builderForValue) {
        if (sessionsBuilder_ == null) {
          ensureSessionsIsMutable();
          sessions_.set(index, builderForValue.build());
          onChanged();
        } else {
          sessionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public Builder addSessions(ski.crunch.activity.model.ActivityOuterClass.Activity.Session value) {
        if (sessionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSessionsIsMutable();
          sessions_.add(value);
          onChanged();
        } else {
          sessionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public Builder addSessions(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Session value) {
        if (sessionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSessionsIsMutable();
          sessions_.add(index, value);
          onChanged();
        } else {
          sessionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public Builder addSessions(
          ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder builderForValue) {
        if (sessionsBuilder_ == null) {
          ensureSessionsIsMutable();
          sessions_.add(builderForValue.build());
          onChanged();
        } else {
          sessionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public Builder addSessions(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder builderForValue) {
        if (sessionsBuilder_ == null) {
          ensureSessionsIsMutable();
          sessions_.add(index, builderForValue.build());
          onChanged();
        } else {
          sessionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public Builder addAllSessions(
          java.lang.Iterable<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.Session> values) {
        if (sessionsBuilder_ == null) {
          ensureSessionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sessions_);
          onChanged();
        } else {
          sessionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public Builder clearSessions() {
        if (sessionsBuilder_ == null) {
          sessions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          sessionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public Builder removeSessions(int index) {
        if (sessionsBuilder_ == null) {
          ensureSessionsIsMutable();
          sessions_.remove(index);
          onChanged();
        } else {
          sessionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder getSessionsBuilder(
          int index) {
        return getSessionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.SessionOrBuilder getSessionsOrBuilder(
          int index) {
        if (sessionsBuilder_ == null) {
          return sessions_.get(index);  } else {
          return sessionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SessionOrBuilder> 
           getSessionsOrBuilderList() {
        if (sessionsBuilder_ != null) {
          return sessionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sessions_);
        }
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder addSessionsBuilder() {
        return getSessionsFieldBuilder().addBuilder(
            ski.crunch.activity.model.ActivityOuterClass.Activity.Session.getDefaultInstance());
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder addSessionsBuilder(
          int index) {
        return getSessionsFieldBuilder().addBuilder(
            index, ski.crunch.activity.model.ActivityOuterClass.Activity.Session.getDefaultInstance());
      }
      /**
       * <code>repeated .Activity.Session sessions = 7;</code>
       */
      public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder> 
           getSessionsBuilderList() {
        return getSessionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Session, ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SessionOrBuilder> 
          getSessionsFieldBuilder() {
        if (sessionsBuilder_ == null) {
          sessionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ski.crunch.activity.model.ActivityOuterClass.Activity.Session, ski.crunch.activity.model.ActivityOuterClass.Activity.Session.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SessionOrBuilder>(
                  sessions_,
                  ((bitField0_ & 0x00000040) == 0x00000040),
                  getParentForChildren(),
                  isClean());
          sessions_ = null;
        }
        return sessionsBuilder_;
      }

      private java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> pauses_ =
        java.util.Collections.emptyList();
      private void ensurePausesIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          pauses_ = new java.util.ArrayList<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment>(pauses_);
          bitField0_ |= 0x00000080;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> pausesBuilder_;

      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> getPausesList() {
        if (pausesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(pauses_);
        } else {
          return pausesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public int getPausesCount() {
        if (pausesBuilder_ == null) {
          return pauses_.size();
        } else {
          return pausesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getPauses(int index) {
        if (pausesBuilder_ == null) {
          return pauses_.get(index);
        } else {
          return pausesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public Builder setPauses(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment value) {
        if (pausesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePausesIsMutable();
          pauses_.set(index, value);
          onChanged();
        } else {
          pausesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public Builder setPauses(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder builderForValue) {
        if (pausesBuilder_ == null) {
          ensurePausesIsMutable();
          pauses_.set(index, builderForValue.build());
          onChanged();
        } else {
          pausesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public Builder addPauses(ski.crunch.activity.model.ActivityOuterClass.Activity.Segment value) {
        if (pausesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePausesIsMutable();
          pauses_.add(value);
          onChanged();
        } else {
          pausesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public Builder addPauses(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment value) {
        if (pausesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePausesIsMutable();
          pauses_.add(index, value);
          onChanged();
        } else {
          pausesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public Builder addPauses(
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder builderForValue) {
        if (pausesBuilder_ == null) {
          ensurePausesIsMutable();
          pauses_.add(builderForValue.build());
          onChanged();
        } else {
          pausesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public Builder addPauses(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder builderForValue) {
        if (pausesBuilder_ == null) {
          ensurePausesIsMutable();
          pauses_.add(index, builderForValue.build());
          onChanged();
        } else {
          pausesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public Builder addAllPauses(
          java.lang.Iterable<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> values) {
        if (pausesBuilder_ == null) {
          ensurePausesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, pauses_);
          onChanged();
        } else {
          pausesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public Builder clearPauses() {
        if (pausesBuilder_ == null) {
          pauses_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
        } else {
          pausesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public Builder removePauses(int index) {
        if (pausesBuilder_ == null) {
          ensurePausesIsMutable();
          pauses_.remove(index);
          onChanged();
        } else {
          pausesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder getPausesBuilder(
          int index) {
        return getPausesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getPausesOrBuilder(
          int index) {
        if (pausesBuilder_ == null) {
          return pauses_.get(index);  } else {
          return pausesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
           getPausesOrBuilderList() {
        if (pausesBuilder_ != null) {
          return pausesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(pauses_);
        }
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder addPausesBuilder() {
        return getPausesFieldBuilder().addBuilder(
            ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.getDefaultInstance());
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder addPausesBuilder(
          int index) {
        return getPausesFieldBuilder().addBuilder(
            index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.getDefaultInstance());
      }
      /**
       * <code>repeated .Activity.Segment pauses = 8;</code>
       */
      public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder> 
           getPausesBuilderList() {
        return getPausesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
          getPausesFieldBuilder() {
        if (pausesBuilder_ == null) {
          pausesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder>(
                  pauses_,
                  ((bitField0_ & 0x00000080) == 0x00000080),
                  getParentForChildren(),
                  isClean());
          pauses_ = null;
        }
        return pausesBuilder_;
      }

      private java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> laps_ =
        java.util.Collections.emptyList();
      private void ensureLapsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          laps_ = new java.util.ArrayList<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment>(laps_);
          bitField0_ |= 0x00000100;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> lapsBuilder_;

      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> getLapsList() {
        if (lapsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(laps_);
        } else {
          return lapsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public int getLapsCount() {
        if (lapsBuilder_ == null) {
          return laps_.size();
        } else {
          return lapsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getLaps(int index) {
        if (lapsBuilder_ == null) {
          return laps_.get(index);
        } else {
          return lapsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public Builder setLaps(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment value) {
        if (lapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLapsIsMutable();
          laps_.set(index, value);
          onChanged();
        } else {
          lapsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public Builder setLaps(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder builderForValue) {
        if (lapsBuilder_ == null) {
          ensureLapsIsMutable();
          laps_.set(index, builderForValue.build());
          onChanged();
        } else {
          lapsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public Builder addLaps(ski.crunch.activity.model.ActivityOuterClass.Activity.Segment value) {
        if (lapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLapsIsMutable();
          laps_.add(value);
          onChanged();
        } else {
          lapsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public Builder addLaps(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment value) {
        if (lapsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLapsIsMutable();
          laps_.add(index, value);
          onChanged();
        } else {
          lapsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public Builder addLaps(
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder builderForValue) {
        if (lapsBuilder_ == null) {
          ensureLapsIsMutable();
          laps_.add(builderForValue.build());
          onChanged();
        } else {
          lapsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public Builder addLaps(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder builderForValue) {
        if (lapsBuilder_ == null) {
          ensureLapsIsMutable();
          laps_.add(index, builderForValue.build());
          onChanged();
        } else {
          lapsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public Builder addAllLaps(
          java.lang.Iterable<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> values) {
        if (lapsBuilder_ == null) {
          ensureLapsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, laps_);
          onChanged();
        } else {
          lapsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public Builder clearLaps() {
        if (lapsBuilder_ == null) {
          laps_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
        } else {
          lapsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public Builder removeLaps(int index) {
        if (lapsBuilder_ == null) {
          ensureLapsIsMutable();
          laps_.remove(index);
          onChanged();
        } else {
          lapsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder getLapsBuilder(
          int index) {
        return getLapsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getLapsOrBuilder(
          int index) {
        if (lapsBuilder_ == null) {
          return laps_.get(index);  } else {
          return lapsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
           getLapsOrBuilderList() {
        if (lapsBuilder_ != null) {
          return lapsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(laps_);
        }
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder addLapsBuilder() {
        return getLapsFieldBuilder().addBuilder(
            ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.getDefaultInstance());
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder addLapsBuilder(
          int index) {
        return getLapsFieldBuilder().addBuilder(
            index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.getDefaultInstance());
      }
      /**
       * <code>repeated .Activity.Segment laps = 9;</code>
       */
      public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder> 
           getLapsBuilderList() {
        return getLapsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
          getLapsFieldBuilder() {
        if (lapsBuilder_ == null) {
          lapsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder>(
                  laps_,
                  ((bitField0_ & 0x00000100) == 0x00000100),
                  getParentForChildren(),
                  isClean());
          laps_ = null;
        }
        return lapsBuilder_;
      }

      private java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> stops_ =
        java.util.Collections.emptyList();
      private void ensureStopsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          stops_ = new java.util.ArrayList<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment>(stops_);
          bitField0_ |= 0x00000200;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> stopsBuilder_;

      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> getStopsList() {
        if (stopsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(stops_);
        } else {
          return stopsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public int getStopsCount() {
        if (stopsBuilder_ == null) {
          return stops_.size();
        } else {
          return stopsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment getStops(int index) {
        if (stopsBuilder_ == null) {
          return stops_.get(index);
        } else {
          return stopsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public Builder setStops(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment value) {
        if (stopsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStopsIsMutable();
          stops_.set(index, value);
          onChanged();
        } else {
          stopsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public Builder setStops(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder builderForValue) {
        if (stopsBuilder_ == null) {
          ensureStopsIsMutable();
          stops_.set(index, builderForValue.build());
          onChanged();
        } else {
          stopsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public Builder addStops(ski.crunch.activity.model.ActivityOuterClass.Activity.Segment value) {
        if (stopsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStopsIsMutable();
          stops_.add(value);
          onChanged();
        } else {
          stopsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public Builder addStops(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment value) {
        if (stopsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureStopsIsMutable();
          stops_.add(index, value);
          onChanged();
        } else {
          stopsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public Builder addStops(
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder builderForValue) {
        if (stopsBuilder_ == null) {
          ensureStopsIsMutable();
          stops_.add(builderForValue.build());
          onChanged();
        } else {
          stopsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public Builder addStops(
          int index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder builderForValue) {
        if (stopsBuilder_ == null) {
          ensureStopsIsMutable();
          stops_.add(index, builderForValue.build());
          onChanged();
        } else {
          stopsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public Builder addAllStops(
          java.lang.Iterable<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.Segment> values) {
        if (stopsBuilder_ == null) {
          ensureStopsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stops_);
          onChanged();
        } else {
          stopsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public Builder clearStops() {
        if (stopsBuilder_ == null) {
          stops_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
        } else {
          stopsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public Builder removeStops(int index) {
        if (stopsBuilder_ == null) {
          ensureStopsIsMutable();
          stops_.remove(index);
          onChanged();
        } else {
          stopsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder getStopsBuilder(
          int index) {
        return getStopsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder getStopsOrBuilder(
          int index) {
        if (stopsBuilder_ == null) {
          return stops_.get(index);  } else {
          return stopsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public java.util.List<? extends ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
           getStopsOrBuilderList() {
        if (stopsBuilder_ != null) {
          return stopsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(stops_);
        }
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder addStopsBuilder() {
        return getStopsFieldBuilder().addBuilder(
            ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.getDefaultInstance());
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder addStopsBuilder(
          int index) {
        return getStopsFieldBuilder().addBuilder(
            index, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.getDefaultInstance());
      }
      /**
       * <code>repeated .Activity.Segment stops = 10;</code>
       */
      public java.util.List<ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder> 
           getStopsBuilderList() {
        return getStopsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder> 
          getStopsFieldBuilder() {
        if (stopsBuilder_ == null) {
          stopsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              ski.crunch.activity.model.ActivityOuterClass.Activity.Segment, ski.crunch.activity.model.ActivityOuterClass.Activity.Segment.Builder, ski.crunch.activity.model.ActivityOuterClass.Activity.SegmentOrBuilder>(
                  stops_,
                  ((bitField0_ & 0x00000200) == 0x00000200),
                  getParentForChildren(),
                  isClean());
          stops_ = null;
        }
        return stopsBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Activity)
    }

    // @@protoc_insertion_point(class_scope:Activity)
    private static final ski.crunch.activity.model.ActivityOuterClass.Activity DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ski.crunch.activity.model.ActivityOuterClass.Activity();
    }

    public static ski.crunch.activity.model.ActivityOuterClass.Activity getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Activity>
        PARSER = new com.google.protobuf.AbstractParser<Activity>() {
      public Activity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Activity(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Activity> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Activity> getParserForType() {
      return PARSER;
    }

    public ski.crunch.activity.model.ActivityOuterClass.Activity getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_Meta_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_Meta_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_UserData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_UserData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_Weather_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_Weather_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_Summary_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_Summary_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_Summary_HasAttributeMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_Summary_HasAttributeMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_Summary_HrvsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_Summary_HrvsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_Session_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_Session_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_Values_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_Values_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_Values_HrvsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_Values_HrvsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_FitEvent_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_FitEvent_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Activity_Segment_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Activity_Segment_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016Activity.proto\"\233*\n\010Activity\022\034\n\004meta\030\001 " +
      "\001(\0132\016.Activity.Meta\022$\n\010userData\030\002 \001(\0132\022." +
      "Activity.UserData\022\"\n\007summary\030\003 \001(\0132\021.Act" +
      "ivity.Summary\022 \n\006values\030\004 \001(\0132\020.Activity" +
      ".Values\022\"\n\006events\030\005 \003(\0132\022.Activity.FitEv" +
      "ent\022\n\n\002id\030\006 \001(\t\022#\n\010sessions\030\007 \003(\0132\021.Acti" +
      "vity.Session\022!\n\006pauses\030\010 \003(\0132\021.Activity." +
      "Segment\022\037\n\004laps\030\t \003(\0132\021.Activity.Segment" +
      "\022 \n\005stops\030\n \003(\0132\021.Activity.Segment\032\212\002\n\004M" +
      "eta\022\021\n\tcreatedTs\030\001 \001(\t\022/\n\014manufacturer\030\002" +
      " \001(\0162\031.Activity.FitManufacturer\022\017\n\007produ" +
      "ct\030\003 \001(\005\022\017\n\007version\030\004 \001(\001\022\016\n\006source\030\005 \001(" +
      "\t\022\020\n\010uploadTs\030\006 \001(\t\022\036\n\005sport\030\007 \001(\0162\017.Act" +
      "ivity.Sport\022$\n\010subSport\030\010 \001(\0162\022.Activity" +
      ".SubSport\022\020\n\010location\030\t \001(\t\022\"\n\007weather\030\n" +
      " \001(\0132\021.Activity.Weather\032M\n\010UserData\022\017\n\007f" +
      "eeling\030\001 \001(\005\022\r\n\005notes\030\002 \001(\t\022\014\n\004tags\030\003 \003(" +
      "\t\022\023\n\013userWeather\030\004 \001(\t\032\t\n\007Weather\032\343\006\n\007Su" +
      "mmary\022?\n\017hasAttributeMap\030\001 \003(\0132&.Activit" +
      "y.Summary.HasAttributeMapEntry\022\017\n\007startT" +
      "s\030\002 \001(\t\022\r\n\005endTs\030\003 \001(\t\022\024\n\014totalElapsed\030\004" +
      " \001(\001\022\022\n\ntotalTimer\030\005 \001(\001\022\023\n\013totalMoving\030" +
      "\006 \001(\001\022\024\n\014totalStopped\030\007 \001(\001\022\023\n\013totalPaus" +
      "ed\030\010 \001(\001\022\023\n\013totalAscent\030\t \001(\001\022\024\n\014totalDe" +
      "scent\030\n \001(\001\022\025\n\rtotalDistance\030\013 \001(\001\022\025\n\rto" +
      "talCalories\030\014 \001(\001\022\r\n\005avgHr\030\r \001(\005\022\r\n\005maxH" +
      "r\030\016 \001(\005\022\r\n\005minHr\030\017 \001(\005\022\022\n\navgCadence\030\020 \001" +
      "(\005\022\022\n\nmaxCadence\030\021 \001(\005\022\022\n\nminCadence\030\022 \001" +
      "(\005\022\017\n\007avgTemp\030\023 \001(\005\022\017\n\007maxTemp\030\024 \001(\005\022\017\n\007" +
      "minTemp\030\025 \001(\005\022\020\n\010avgSpeed\030\026 \001(\001\022\020\n\010maxSp" +
      "eed\030\027 \001(\001\022\023\n\013minGradient\030\030 \001(\005\022\023\n\013maxGra" +
      "dient\030\031 \001(\005\022\023\n\013avgGradient\030\032 \001(\005\022\r\n\005nLap" +
      "s\030\033 \001(\005\022)\n\004hrvs\030\034 \003(\0132\033.Activity.Summary" +
      ".HrvsEntry\022\024\n\014totalAscTime\030\035 \001(\001\022\025\n\rtota" +
      "lDescTime\030\036 \001(\001\022\024\n\014totalAscDist\030\037 \001(\001\022\025\n" +
      "\rtotalDescDist\030  \001(\001\022\025\n\rpauseDistance\030! " +
      "\001(\001\022\021\n\tstopCount\030\" \001(\005\022\022\n\npauseCount\030# \001" +
      "(\005\0326\n\024HasAttributeMapEntry\022\013\n\003key\030\001 \001(\t\022" +
      "\r\n\005value\030\002 \001(\010:\0028\001\032+\n\tHrvsEntry\022\013\n\003key\030\001" +
      " \001(\t\022\r\n\005value\030\002 \001(\001:\0028\001\032\227\001\n\007Session\022\036\n\005s" +
      "port\030\001 \001(\0162\017.Activity.Sport\022$\n\010subSport\030" +
      "\002 \001(\0162\022.Activity.SubSport\022\"\n\007segment\030\003 \001" +
      "(\0132\021.Activity.Segment\022\"\n\007summary\030\004 \001(\0132\021" +
      ".Activity.Summary\032\256\002\n\006Values\022\n\n\002ts\030\001 \003(\t" +
      "\022\n\n\002hr\030\002 \003(\005\022\013\n\003lat\030\003 \003(\001\022\013\n\003lon\030\004 \003(\001\022\r" +
      "\n\005speed\030\005 \003(\001\022\020\n\010altitude\030\006 \003(\001\022\r\n\005grade" +
      "\030\007 \003(\001\022\020\n\010distance\030\010 \003(\001\022\023\n\013temperature\030" +
      "\t \003(\001\022\016\n\006moving\030\n \003(\010\022\017\n\007cadence\030\013 \003(\005\022(" +
      "\n\004hrvs\030\014 \003(\0132\032.Activity.Values.HrvsEntry" +
      "\022\013\n\003hrv\030\r \003(\001\022\026\n\016vertical_speed\030\016 \003(\001\032+\n" +
      "\tHrvsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\001:\002" +
      "8\001\032\315\001\n\010FitEvent\022\020\n\010startIdx\030\001 \001(\005\022\016\n\006end" +
      "Idx\030\002 \001(\005\022\n\n\002ts\030\003 \001(\t\022\017\n\007startTs\030\004 \001(\t\022\r" +
      "\n\005event\030\005 \001(\t\022&\n\teventType\030\006 \001(\0162\023.Activ" +
      "ity.EventType\022\021\n\ttimerTime\030\007 \001(\001\022\023\n\013elap" +
      "sedTime\030\010 \001(\001\022\022\n\nmovingTime\030\t \001(\001\022\017\n\007tri" +
      "gger\030\n \001(\t\032M\n\007Segment\022\017\n\007startTs\030\001 \001(\t\022\016" +
      "\n\006stopTs\030\002 \001(\t\022\020\n\010startIdx\030\003 \001(\t\022\017\n\007stop" +
      "Idx\030\004 \001(\t\"\337\017\n\017FitManufacturer\022\013\n\007UNKNOWN" +
      "\020\000\022\n\n\006GARMIN\020\001\022\026\n\022GARMIN_FR405_ANTFS\020\002\022\n" +
      "\n\006ZEPHYR\020\003\022\n\n\006DAYTON\020\004\022\007\n\003IDT\020\005\022\007\n\003SRM\020\006" +
      "\022\t\n\005QUARQ\020\007\022\t\n\005IBIKE\020\010\022\t\n\005SARIS\020\t\022\014\n\010SPA" +
      "RK_HK\020\n\022\n\n\006TANITA\020\013\022\014\n\010ECHOWELL\020\014\022\022\n\016DYN" +
      "ASTREAM_OEM\020\r\022\014\n\010NAUTILUS\020\016\022\016\n\nDYNASTREA" +
      "M\020\017\022\t\n\005TIMEX\020\020\022\r\n\tMETRIGEAR\020\021\022\t\n\005XELIC\020\022" +
      "\022\n\n\006BEURER\020\023\022\017\n\013CARDIOSPORT\020\024\022\013\n\007A_AND_D" +
      "\020\025\022\007\n\003HMM\020\026\022\n\n\006SUUNTO\020\027\022\024\n\020THITA_ELEKTRO" +
      "NIK\020\030\022\n\n\006GPULSE\020\031\022\020\n\014CLEAN_MOBILE\020\032\022\017\n\013P" +
      "EDAL_BRAIN\020\033\022\r\n\tPEAKSWARE\020\034\022\013\n\007SAXONAR\020\035" +
      "\022\022\n\016LEMOND_FITNESS\020\036\022\n\n\006DEXCOM\020\037\022\021\n\rWAHO" +
      "O_FITNESS\020 \022\022\n\016OCTANE_FITNESS\020!\022\020\n\014ARCHI" +
      "NOETICS\020\"\022\020\n\014THE_HURT_BOX\020#\022\023\n\017CITIZEN_S" +
      "YSTEMS\020$\022\014\n\010MAGELLAN\020%\022\n\n\006OSYNCE\020&\022\t\n\005HO" +
      "LUX\020\'\022\014\n\010CONCEPT2\020(\022\022\n\016ONE_GIANT_LEAP\020*\022" +
      "\016\n\nACE_SENSOR\020+\022\021\n\rBRIM_BROTHERS\020,\022\n\n\006XP" +
      "LOVA\020-\022\026\n\022PERCEPTION_DIGITAL\020.\022\016\n\nBF1SYS" +
      "TEMS\020/\022\013\n\007PIONEER\0200\022\013\n\007SPANTEC\0201\022\016\n\nMETA" +
      "LOGICS\0202\022\013\n\007I4IIIIS\0203\022\017\n\013SEIKO_EPSON\0204\022\023" +
      "\n\017SEIKO_EPSON_OEM\0205\022\017\n\013IFOR_POWELL\0206\022\022\n\016" +
      "MAXWELL_GUIDER\0207\022\r\n\tSTAR_TRAC\0208\022\r\n\tBREAK" +
      "AWAY\0209\022\032\n\026ALATECH_TECHNOLOGY_LTD\020:\022\031\n\025MI" +
      "O_TECHNOLOGY_EUROPE\020;\022\t\n\005ROTOR\020<\022\014\n\010GEON" +
      "AUTE\020=\022\013\n\007ID_BIKE\020>\022\017\n\013SPECIALIZED\020?\022\010\n\004" +
      "WTEK\020@\022\030\n\024PHYSICAL_ENTERPRISES\020A\022\032\n\026NORT" +
      "H_POLE_ENGINEERING\020B\022\t\n\005BKOOL\020C\022\n\n\006CATEY" +
      "E\020D\022\022\n\016STAGES_CYCLING\020E\022\016\n\nSIGMASPORT\020F\022" +
      "\n\n\006TOMTOM\020G\022\r\n\tPERIPEDAL\020H\022\014\n\010WATTBIKE\020I" +
      "\022\010\n\004MOXY\020L\022\016\n\nCICLOSPORT\020M\022\r\n\tPOWERBAHN\020" +
      "N\022\026\n\022ACORN_PROJECTS_APS\020O\022\014\n\010LIFEBEAM\020P\022" +
      "\r\n\tBONTRAGER\020Q\022\n\n\006WELLGO\020R\022\013\n\007SCOSCHE\020S\022" +
      "\n\n\006MAGURA\020T\022\013\n\007WOODWAY\020U\022\t\n\005ELITE\020V\022\025\n\021N" +
      "IELSEN_KELLERMAN\020W\022\013\n\007DK_CITY\020X\022\010\n\004TACX\020" +
      "Y\022\030\n\024DIRECTION_TECHNOLOGY\020Z\022\014\n\010MAGTONIC\020" +
      "[\022\021\n\rONEPARTCARBON\020\\\022\034\n\030INSIDE_RIDE_TECH" +
      "NOLOGIES\020]\022\023\n\017SOUND_OF_MOTION\020^\022\t\n\005STRYD" +
      "\020_\022\007\n\003ICG\020`\022\013\n\007MIPULSE\020a\022\021\n\rBSX_ATHLETIC" +
      "S\020b\022\010\n\004LOOK\020c\022\022\n\016CAMPAGNOLO_SRL\020d\022\023\n\017BOD" +
      "Y_BIKE_SMART\020e\022\017\n\013PRAXISWORKS\020f\022\025\n\021LIMIT" +
      "S_TECHNOLOGY\020g\022\030\n\024TOPACTION_TECHNOLOGY\020h" +
      "\022\014\n\010COSINUSS\020i\022\013\n\007FITCARE\020j\022\n\n\006MAGENE\020k\022" +
      "\032\n\026GIANT_MANUFACTURING_CO\020l\022\016\n\nTIGRASPOR" +
      "T\020m\022\020\n\013DEVELOPMENT\020\377\001\022\022\n\rHEALTHANDLIFE\020\201" +
      "\002\022\013\n\006LEZYNE\020\202\002\022\020\n\013SCRIBE_LABS\020\203\002\022\n\n\005ZWIF" +
      "T\020\204\002\022\014\n\007WATTEAM\020\205\002\022\n\n\005RECON\020\206\002\022\027\n\022FAVERO" +
      "_ELECTRONICS\020\207\002\022\r\n\010DYNOVELO\020\210\002\022\013\n\006STRAVA" +
      "\020\211\002\022\013\n\006PRECOR\020\212\002\022\013\n\006BRYTON\020\213\002\022\t\n\004SRAM\020\214\002" +
      "\022\013\n\006NAVMAN\020\215\002\022\t\n\004COBI\020\216\002\022\n\n\005SPIVI\020\217\002\022\021\n\014" +
      "MIO_MAGELLAN\020\220\002\022\016\n\tEVESPORTS\020\221\002\022\025\n\020SENSI" +
      "TIVUS_GAUGE\020\222\002\022\013\n\006PODOON\020\223\002\"\316\001\n\tEventTyp" +
      "e\022\t\n\005START\020\000\022\010\n\004STOP\020\001\022\033\n\027CONSECUTIVE_DE" +
      "PRECIATED\020\002\022\n\n\006MARKER\020\003\022\014\n\010STOP_ALL\020\004\022\025\n" +
      "\021BEGIN_DEPRECIATED\020\005\022\023\n\017END_DEPRECIATED\020" +
      "\006\022\027\n\023END_ALL_DEPRECIATED\020\007\022\020\n\014STOP_DISAB" +
      "LE\020\010\022\024\n\020STOP_DISABLE_ALL\020\t\022\010\n\004NULL\020\n\"\336\002\n" +
      "\005Sport\022\013\n\007GENERIC\020\000\022\013\n\007RUNNING\020\001\022\013\n\007CYCL" +
      "ING\020\002\022\016\n\nTRANSITION\020\003\022\025\n\021FITNESS_EQUIPME" +
      "NT\020\004\022\014\n\010SWIMMING\020\005\022\016\n\nBASKETBALL\020\006\022\n\n\006SO" +
      "CCER\020\007\022\n\n\006TENNIS\020\010\022\025\n\021AMERICAN_FOOTBALL\020" +
      "\t\022\014\n\010TRAINING\020\n\022\013\n\007WALKING\020\013\022\030\n\024CROSS_CO" +
      "UNTRY_SKIING\020\014\022\021\n\rALPINE_SKIING\020\r\022\020\n\014SNO" +
      "WBOARDING\020\016\022\n\n\006ROWING\020\017\022\022\n\016MOUNTAINEERIN" +
      "G\020\020\022\n\n\006HIKING\020\021\022\016\n\nMULTISPORT\020\022\022\014\n\010PADDL" +
      "ING\020\023\022\010\n\003ALL\020\376\001\022\014\n\007INVALID\020\377\001\"\376\003\n\010SubSpo" +
      "rt\022\024\n\020GENERIC_SUBSPORT\020\000\022\r\n\tTREADMILL\020\001\022" +
      "\n\n\006STREET\020\002\022\t\n\005TRAIL\020\003\022\t\n\005TRACK\020\004\022\010\n\004SPI" +
      "N\020\005\022\022\n\016INDOOR_CYCLING\020\006\022\010\n\004ROAD\020\007\022\014\n\010MOU" +
      "NTAIN\020\010\022\014\n\010DOWNHILL\020\t\022\r\n\tRECUMBENT\020\n\022\016\n\n" +
      "CYCLOCROSS\020\013\022\020\n\014HAND_CYCLING\020\014\022\021\n\rTRACK_" +
      "CYCLING\020\r\022\021\n\rINDOOR_ROWING\020\016\022\016\n\nELLIPTIC" +
      "AL\020\017\022\022\n\016STAIR_CLIMBING\020\020\022\020\n\014LAP_SWIMMING" +
      "\020\021\022\016\n\nOPEN_WATER\020\022\022\030\n\024FLEXIBILITY_TRAINI" +
      "NG\020\023\022\025\n\021STRENGTH_TRAINING\020\024\022\013\n\007WARM_UP\020\025" +
      "\022\t\n\005MATCH\020\026\022\014\n\010EXERCISE\020\027\022\r\n\tCHALLENGE\020\030" +
      "\022\021\n\rINDOOR_SKIING\020\031\022\023\n\017CARDIO_TRAINING\020\032" +
      "\022\022\n\016INDOOR_WALKING\020\033\022\021\n\014ALL_SUBSPORT\020\376\001\022" +
      "\025\n\020INVALID_SUBSPORT\020\377\001B\033\n\031ski.crunch.act" +
      "ivity.modelb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_Activity_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Activity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_descriptor,
        new java.lang.String[] { "Meta", "UserData", "Summary", "Values", "Events", "Id", "Sessions", "Pauses", "Laps", "Stops", });
    internal_static_Activity_Meta_descriptor =
      internal_static_Activity_descriptor.getNestedTypes().get(0);
    internal_static_Activity_Meta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_Meta_descriptor,
        new java.lang.String[] { "CreatedTs", "Manufacturer", "Product", "Version", "Source", "UploadTs", "Sport", "SubSport", "Location", "Weather", });
    internal_static_Activity_UserData_descriptor =
      internal_static_Activity_descriptor.getNestedTypes().get(1);
    internal_static_Activity_UserData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_UserData_descriptor,
        new java.lang.String[] { "Feeling", "Notes", "Tags", "UserWeather", });
    internal_static_Activity_Weather_descriptor =
      internal_static_Activity_descriptor.getNestedTypes().get(2);
    internal_static_Activity_Weather_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_Weather_descriptor,
        new java.lang.String[] { });
    internal_static_Activity_Summary_descriptor =
      internal_static_Activity_descriptor.getNestedTypes().get(3);
    internal_static_Activity_Summary_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_Summary_descriptor,
        new java.lang.String[] { "HasAttributeMap", "StartTs", "EndTs", "TotalElapsed", "TotalTimer", "TotalMoving", "TotalStopped", "TotalPaused", "TotalAscent", "TotalDescent", "TotalDistance", "TotalCalories", "AvgHr", "MaxHr", "MinHr", "AvgCadence", "MaxCadence", "MinCadence", "AvgTemp", "MaxTemp", "MinTemp", "AvgSpeed", "MaxSpeed", "MinGradient", "MaxGradient", "AvgGradient", "NLaps", "Hrvs", "TotalAscTime", "TotalDescTime", "TotalAscDist", "TotalDescDist", "PauseDistance", "StopCount", "PauseCount", });
    internal_static_Activity_Summary_HasAttributeMapEntry_descriptor =
      internal_static_Activity_Summary_descriptor.getNestedTypes().get(0);
    internal_static_Activity_Summary_HasAttributeMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_Summary_HasAttributeMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Activity_Summary_HrvsEntry_descriptor =
      internal_static_Activity_Summary_descriptor.getNestedTypes().get(1);
    internal_static_Activity_Summary_HrvsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_Summary_HrvsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Activity_Session_descriptor =
      internal_static_Activity_descriptor.getNestedTypes().get(4);
    internal_static_Activity_Session_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_Session_descriptor,
        new java.lang.String[] { "Sport", "SubSport", "Segment", "Summary", });
    internal_static_Activity_Values_descriptor =
      internal_static_Activity_descriptor.getNestedTypes().get(5);
    internal_static_Activity_Values_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_Values_descriptor,
        new java.lang.String[] { "Ts", "Hr", "Lat", "Lon", "Speed", "Altitude", "Grade", "Distance", "Temperature", "Moving", "Cadence", "Hrvs", "Hrv", "VerticalSpeed", });
    internal_static_Activity_Values_HrvsEntry_descriptor =
      internal_static_Activity_Values_descriptor.getNestedTypes().get(0);
    internal_static_Activity_Values_HrvsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_Values_HrvsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_Activity_FitEvent_descriptor =
      internal_static_Activity_descriptor.getNestedTypes().get(6);
    internal_static_Activity_FitEvent_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_FitEvent_descriptor,
        new java.lang.String[] { "StartIdx", "EndIdx", "Ts", "StartTs", "Event", "EventType", "TimerTime", "ElapsedTime", "MovingTime", "Trigger", });
    internal_static_Activity_Segment_descriptor =
      internal_static_Activity_descriptor.getNestedTypes().get(7);
    internal_static_Activity_Segment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Activity_Segment_descriptor,
        new java.lang.String[] { "StartTs", "StopTs", "StartIdx", "StopIdx", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
