plugins {
    id 'application'
    id 'java'
    id 'com.palantir.graal' version '0.6.0'
}


dependencies {
    // This dependency is used by the application.
    implementation(
            'com.google.guava:guava:28.1-jre',
            'info.picocli:picocli:4.2.0',
            'com.microsoft.terraform:terraform-client:1.0.0',
            'com.amazonaws:aws-lambda-java-log4j:1.0.0',
            "log4j:log4j:1.2.15",
            project(':common')
//            'org.apache.logging.log4j:log4j-core:2.8.2',
//            'org.apache.logging.log4j:log4j-api:2.8.2'
    )

    integrationTestImplementation(
            "com.amazonaws:aws-java-sdk-core:${awsVersion}",
            "org.junit.jupiter:junit-jupiter-api:5.4.0",
            "org.mockito:mockito-all:1.10.19",
            project(path: ':common', configuration: 'testClasses'),
            project(':common')
    )
    integrationTestRuntimeOnly(
            "org.junit.jupiter:junit-jupiter-engine:5.1.0",
            project(':common'),
            project(path: ':common', configuration: 'testClasses')
    )

    annotationProcessor 'info.picocli:picocli-codegen:4.2.0'

    // Use JUnit Jupiter API for testing.
    testImplementation(
            project(':common'),
            'org.mockito:mockito-junit-jupiter:2.23.0'
    )

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'


}

application {
    // Define the main class for the application.
    mainClassName = 'crunch.ski.cli.App'
}

apply plugin: 'com.palantir.graal'

graal {
    mainClass 'crunch.ski.cli.App'
    outputName 'crunch'
    option '-H:ReflectionConfigurationFiles=src/main/resources/reflect-config.json'
}
compileJava {
    options.compilerArgs += ["-Aproject=${project.group}/${project.name}"]
    // Awaiting Graal Java 11 support: https://github.com/oracle/graal/issues/651
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

test {
    // Use junit platform for unit tests
    include 'ski/crunch/**'
}
